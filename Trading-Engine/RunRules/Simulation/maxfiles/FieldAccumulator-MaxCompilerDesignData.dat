#ifdef MAXCOMPILER_VERSION_INFO
#define MAXCOMPILER_VERSION_INFO_PRESENT 1
#define MAXFILE_MAXCOMPILER_VERSION_YEAR         2014
#define MAXFILE_MAXCOMPILER_VERSION_NUM          2
#define MAXFILE_MAXCOMPILER_VERSION_POINT        0
#define MAXFILE_MAXCOMPILER_VERSION_PATCH        ""
#define MAXFILE_MAXCOMPILER_VERSION_REV          44158
#define MAXFILE_MAXCOMPILER_VERSION_RELEASE_DATE "2015-01-23"
#define MAXFILE_MAXCOMPILER_VERSION_RELEASE_MODE true
#endif

#ifdef MAXFILE_BUILD_INFO
#define MAXFILE_BUILD_INFO_PRESENT 1
#define MAXFILE_BUILD_NAME "FieldAccumulator"
#define MAXFILE_BUILD_DIR  "/home/demo/Desktop/MaxCompiler-Builds/FieldAccumulator_ISCA_DFE_SIM"
#define MAXFILE_BUILD_DATE  20150507
#define MAXFILE_BUILD_REV   1
#endif

#ifdef PARAM
#define PARAM_PRESENT 1
PARAM(USE_NETWORK_MANAGER, 1)
PARAM(qsfp_top_10g_port1_udp_has_rx, 1)
PARAM(qsfp_top_10g_port1_udp_has_tx, 1)
PARAM(qsfp_top_10g_port1_udp_has_demux, 0)
PARAM(APP_ID, 0)
PARAM(REV_ID, 0)
PARAM(CHAIN_LENGTH, 322)
PARAM(IS_SIMULATION, 1)
PARAM(MEC_SUPPORTED, 1)
PARAM(PCIE_SLAVE_STREAMING, 0)
PARAM(PCIE_ALIGNMENT, 16)
PARAM(NUM_IFPGA_LINKS, 0)
#endif

#ifdef STRING_PARAM
#define STRING_PARAM_PRESENT 1
STRING_PARAM(BOARD_MODEL, "MAX4AB24B")
#endif



#ifdef INCLUDE_GENERATED_CPP_HEADERS
#include "fieldSwapKernel.h"
#endif

#ifdef INCLUDE_GENERATED_CPP_HEADERS
#include "StateMachineManagerBlock_impl_network_mgmt_stream_to_host_rx_id_0.h"
#endif

#ifdef INCLUDE_GENERATED_CPP_HEADERS
#include "StateMachineManagerBlock_impl_qsfp_top_10g_port1_eth_rx_fanout.h"
#endif

#ifdef INCLUDE_GENERATED_CPP_HEADERS
#include "StateMachineManagerBlock_impl_SlicerFramer_network_mgmt_stream_from_host_tx_framed.h"
#endif

#ifdef INCLUDE_GENERATED_CPP_HEADERS
#include "StateMachineManagerBlock_impl_qsfp_top_10g_port1_eth_rx_to_host_filter.h"
#endif

#ifdef INCLUDE_GENERATED_CPP_HEADERS
#include "StateMachineManagerBlock_impl_qsfp_top_10g_port1_arp_server.h"
#endif

#ifdef INCLUDE_GENERATED_CPP_HEADERS
#include "StateMachineManagerBlock_impl_qsfp_top_10g_port1_icmp_echo_server.h"
#endif

#ifdef INCLUDE_GENERATED_CPP_HEADERS
#include "StateMachineManagerBlock_impl_qsfp_top_10g_port1_udp_rx.h"
#endif

#ifdef INCLUDE_GENERATED_CPP_HEADERS
#include "StateMachineManagerBlock_impl_qsfp_top_10g_port1_eth_rx_to_host_drop.h"
#endif

#ifdef INCLUDE_GENERATED_CPP_HEADERS
#include "StateMachineManagerBlock_impl_qsfp_top_10g_port1_udp_rx_EOFEFrameDrop.h"
#endif

#ifdef INCLUDE_GENERATED_CPP_HEADERS
#include "StateMachineManagerBlock_impl_network_mgmt_stream_from_host_tx_demux.h"
#endif

#ifdef INCLUDE_GENERATED_CPP_HEADERS
#include "StateMachineManagerBlock_impl_network_mgmt_stream_to_host_rx_prefix_0.h"
#endif

#ifdef INCLUDE_GENERATED_CPP_HEADERS
#include "StateMachineManagerBlock_impl_network_mgmt_stream_to_host_rx_framed_FramedStreamPreprocessor.h"
#endif

#ifdef INCLUDE_GENERATED_CPP_HEADERS
#include "StateMachineManagerBlock_impl_qsfp_top_10g_port1_eth_tx_from_host_rem_conv.h"
#endif

#ifdef INCLUDE_GENERATED_CPP_HEADERS
#include "StateMachineManagerBlock_impl_dualAspectPush_network_mgmt_stream_to_host_rx_framed.h"
#endif

#ifdef INCLUDE_GENERATED_CPP_HEADERS
#include "StateMachineManagerBlock_impl_network_mgmt_stream_to_host_rx_framed_FramedStreamAligner.h"
#endif

#ifdef INCLUDE_GENERATED_CPP_HEADERS
#include "StateMachineManagerBlock_impl_qsfp_top_10g_port1_udp_tx.h"
#endif

#ifdef INCLUDE_GENERATED_CPP_HEADERS
#include "StateMachineManagerBlock_impl_qsfp_top_10g_port1_eth_tx_PacketMux.h"
#endif



#ifdef ENGINE_PARAMETERS
#define ENGINE_PARAMETERS_PRESENT 1
ENGINE_PARAMETERS(DFEModel, DFEMODEL, ISCA)
ENGINE_PARAMETERS(maxFileName, STRING, "FieldAccumulator")
ENGINE_PARAMETERS(target, ENUM, DFE_SIM)
ENGINE_PARAMETERS(enableMPCX, BOOL, false)
ENGINE_PARAMETERS(MPPRStartCT, INT, 1)
ENGINE_PARAMETERS(MPPREndCT, INT, 1)
ENGINE_PARAMETERS(MPPRThreads, INT, 1)
ENGINE_PARAMETERS(MPPRRetryThreshold, INT, 0)
#endif

#ifdef ICMP_ECHO_SERVER
#define ICMP_ECHO_SERVER_PRESENT 1
ICMP_ECHO_SERVER(QSFP_TOP_10G_PORT1, 1)
#endif

#ifdef UDP_STREAM
#define UDP_STREAM_PRESENT 1
UDP_STREAM(udp_ch2_sfp1, 0, QSFP_TOP_10G_PORT1, ONE_TO_ONE)
UDP_STREAM(frameOut, 1, QSFP_TOP_10G_PORT1, ONE_TO_ONE)
#endif

#ifdef UDP
#define UDP_PRESENT 1
UDP(QSFP_TOP_10G_PORT1)
#endif

#ifdef FRAMED_STREAM
#define FRAMED_STREAM_PRESENT 1
FRAMED_STREAM(network_mgmt_stream_from_host_tx_framed, FROM_HOST, 8, 8)
#endif

#ifdef FRAMED_STREAM
#define FRAMED_STREAM_PRESENT 1
FRAMED_STREAM(network_mgmt_stream_to_host_rx_framed, TO_HOST, 4096, 8)
#endif

#ifdef ETHERNET_MANAGEMENT_HOST_STREAM_V2
#define ETHERNET_MANAGEMENT_HOST_STREAM_V2_PRESENT 1
ETHERNET_MANAGEMENT_HOST_STREAM_V2(0, QSFP_TOP_10G_PORT1, 0, qsfp_top_10g_port1_eth_rx_to_host_filter.enable, qsfp_top_10g_port1_eth_rx_to_host_drop.badFramesCounter, qsfp_top_10g_port1_eth_rx_to_host_drop.badFramesCounter)
#endif








#ifdef MANAGER_NODE
#define MANAGER_NODE_PRESENT 1
MANAGER_NODE(node0_ln108_WrapperNode, EthernetSim)
MANAGER_NODE(fieldSwapKernel, Kernel)
MANAGER_NODE(qsfp_top_10g_port1_eth_rx_fanout, ManagerStateMachine_qsfp_top_10g_port1_eth_rx_fanout)
MANAGER_NODE(qsfp_top_10g_port1_eth_rx_to_host_filter, ManagerStateMachine_qsfp_top_10g_port1_eth_rx_to_host_filter)
MANAGER_NODE(qsfp_top_10g_port1_eth_rx_to_host_drop, ManagerStateMachine_qsfp_top_10g_port1_eth_rx_to_host_drop)
MANAGER_NODE(qsfp_top_10g_port1_eth_tx_from_host_rem_conv, ManagerStateMachine_qsfp_top_10g_port1_eth_tx_from_host_rem_conv)
MANAGER_NODE(qsfp_top_10g_port1_arp_server, ManagerStateMachine_qsfp_top_10g_port1_arp_server)
MANAGER_NODE(qsfp_top_10g_port1_icmp_echo_server, ManagerStateMachine_qsfp_top_10g_port1_icmp_echo_server)
MANAGER_NODE(qsfp_top_10g_port1_udp_rx, ManagerStateMachine_qsfp_top_10g_port1_udp_rx)
MANAGER_NODE(qsfp_top_10g_port1_udp_rx_EOFEFrameDrop, ManagerStateMachine_qsfp_top_10g_port1_udp_rx_EOFEFrameDrop)
MANAGER_NODE(qsfp_top_10g_port1_udp_tx, ManagerStateMachine_qsfp_top_10g_port1_udp_tx)
MANAGER_NODE(qsfp_top_10g_port1_eth_tx_PacketMux, ManagerStateMachine_qsfp_top_10g_port1_eth_tx_PacketMux)
MANAGER_NODE(SlicerFramer_network_mgmt_stream_from_host_tx_framed, ManagerStateMachine_SlicerFramer_network_mgmt_stream_from_host_tx_framed)
MANAGER_NODE(network_mgmt_stream_from_host_tx_framed, PCIe_From_Host)
MANAGER_NODE(network_mgmt_stream_from_host_tx_demux, ManagerStateMachine_network_mgmt_stream_from_host_tx_demux)
MANAGER_NODE(network_mgmt_stream_to_host_rx_id_0, ManagerStateMachine_network_mgmt_stream_to_host_rx_id_0)
MANAGER_NODE(network_mgmt_stream_to_host_rx_prefix_0, ManagerStateMachine_network_mgmt_stream_to_host_rx_prefix_0)
MANAGER_NODE(network_mgmt_stream_to_host_rx_framed_FramedStreamPreprocessor, ManagerStateMachine_network_mgmt_stream_to_host_rx_framed_FramedStreamPreprocessor)
MANAGER_NODE(network_mgmt_stream_to_host_rx_framed_FramedStreamAligner, ManagerStateMachine_network_mgmt_stream_to_host_rx_framed_FramedStreamAligner)
MANAGER_NODE(dualAspectPush_network_mgmt_stream_to_host_rx_framed, ManagerStateMachine_dualAspectPush_network_mgmt_stream_to_host_rx_framed)
MANAGER_NODE(network_mgmt_stream_to_host_rx_framed, PCIe_To_Host)
MANAGER_NODE(loop_0_sink, LoopSink)
MANAGER_NODE(loop_0_src, LoopSource)
MANAGER_NODE(Stream_49, DualAspectMux)
MANAGER_NODE(Stream_81, Fifo)
MANAGER_NODE(Stream_79, Fifo)
MANAGER_NODE(Stream_83, Fifo)
MANAGER_NODE(Stream_54, Fifo)
MANAGER_NODE(Stream_6, Fifo)
MANAGER_NODE(Stream_24, Fifo)
MANAGER_NODE(Stream_39, Fifo)
MANAGER_NODE(Stream_72, Fifo)
MANAGER_NODE(Stream_42, Fifo)
MANAGER_NODE(Stream_44, Fifo)
#endif

#ifdef MANAGER_NODE_IO
#define MANAGER_NODE_IO_PRESENT 1
MANAGER_NODE_IO(node0_ln108_WrapperNode, tx0, IN, NET_10G_CLK156, 69, PULL)
MANAGER_NODE_IO(node0_ln108_WrapperNode, rx0, OUT, NET_10G_CLK156, 70, PUSH)
MANAGER_NODE_IO(fieldSwapKernel, frameIn, IN, STREAM, 78, PULL)
MANAGER_NODE_IO(fieldSwapKernel, frameOut, OUT, STREAM, 77, PUSH)
MANAGER_NODE_IO(qsfp_top_10g_port1_eth_rx_fanout, input, IN, NET_10G_CLK156, 70, PUSH)
MANAGER_NODE_IO(qsfp_top_10g_port1_eth_rx_fanout, output_0, OUT, NET_10G_CLK156, 70, PUSH)
MANAGER_NODE_IO(qsfp_top_10g_port1_eth_rx_fanout, output_1, OUT, NET_10G_CLK156, 70, PUSH)
MANAGER_NODE_IO(qsfp_top_10g_port1_eth_rx_fanout, output_2, OUT, NET_10G_CLK156, 70, PUSH)
MANAGER_NODE_IO(qsfp_top_10g_port1_eth_rx_fanout, output_3, OUT, NET_10G_CLK156, 70, PUSH)
MANAGER_NODE_IO(qsfp_top_10g_port1_eth_rx_to_host_filter, input, IN, NET_10G_CLK156, 70, PUSH)
MANAGER_NODE_IO(qsfp_top_10g_port1_eth_rx_to_host_filter, output, OUT, NET_10G_CLK156, 70, PUSH)
MANAGER_NODE_IO(qsfp_top_10g_port1_eth_rx_to_host_drop, src, IN, NET_10G_CLK156, 70, PUSH)
MANAGER_NODE_IO(qsfp_top_10g_port1_eth_rx_to_host_drop, dst, OUT, NET_10G_CLK156, 70, PUSH)
MANAGER_NODE_IO(qsfp_top_10g_port1_eth_tx_from_host_rem_conv, src, IN, NET_10G_CLK156, 69, PULL)
MANAGER_NODE_IO(qsfp_top_10g_port1_eth_tx_from_host_rem_conv, dst, OUT, NET_10G_CLK156, 69, PUSH)
MANAGER_NODE_IO(qsfp_top_10g_port1_arp_server, fromNet, IN, NET_10G_CLK156, 70, PUSH)
MANAGER_NODE_IO(qsfp_top_10g_port1_arp_server, toNet, OUT, NET_10G_CLK156, 69, PULL)
MANAGER_NODE_IO(qsfp_top_10g_port1_icmp_echo_server, rx, IN, NET_10G_CLK156, 70, PUSH)
MANAGER_NODE_IO(qsfp_top_10g_port1_icmp_echo_server, tx, OUT, NET_10G_CLK156, 69, PUSH)
MANAGER_NODE_IO(qsfp_top_10g_port1_udp_rx, net, IN, NET_10G_CLK156, 70, PUSH)
MANAGER_NODE_IO(qsfp_top_10g_port1_udp_rx, payload, OUT, NET_10G_CLK156, 78, PUSH)
MANAGER_NODE_IO(qsfp_top_10g_port1_udp_rx_EOFEFrameDrop, src, IN, NET_10G_CLK156, 78, PUSH)
MANAGER_NODE_IO(qsfp_top_10g_port1_udp_rx_EOFEFrameDrop, dst, OUT, NET_10G_CLK156, 78, PUSH)
MANAGER_NODE_IO(qsfp_top_10g_port1_udp_tx, src, IN, NET_10G_CLK156, 77, PUSH)
MANAGER_NODE_IO(qsfp_top_10g_port1_udp_tx, toNet, OUT, NET_10G_CLK156, 69, PULL)
MANAGER_NODE_IO(qsfp_top_10g_port1_eth_tx_PacketMux, input_0, IN, NET_10G_CLK156, 69, PULL)
MANAGER_NODE_IO(qsfp_top_10g_port1_eth_tx_PacketMux, input_1, IN, NET_10G_CLK156, 69, PULL)
MANAGER_NODE_IO(qsfp_top_10g_port1_eth_tx_PacketMux, input_2, IN, NET_10G_CLK156, 69, PULL)
MANAGER_NODE_IO(qsfp_top_10g_port1_eth_tx_PacketMux, input_3, IN, NET_10G_CLK156, 69, PULL)
MANAGER_NODE_IO(qsfp_top_10g_port1_eth_tx_PacketMux, output, OUT, NET_10G_CLK156, 69, PUSH)
MANAGER_NODE_IO(SlicerFramer_network_mgmt_stream_from_host_tx_framed, src, IN, NET_10G_CLK156, 64, PUSH)
MANAGER_NODE_IO(SlicerFramer_network_mgmt_stream_from_host_tx_framed, dst, OUT, NET_10G_CLK156, 69, PUSH)
MANAGER_NODE_IO(network_mgmt_stream_from_host_tx_framed, network_mgmt_stream_from_host_tx_framed, OUT, PCIE, 128, PUSH)
MANAGER_NODE_IO(network_mgmt_stream_from_host_tx_demux, src, IN, NET_10G_CLK156, 69, PUSH)
MANAGER_NODE_IO(network_mgmt_stream_from_host_tx_demux, dst_0, OUT, NET_10G_CLK156, 69, PUSH)
MANAGER_NODE_IO(network_mgmt_stream_to_host_rx_id_0, data, OUT, NET_10G_CLK156, 64, PULL)
MANAGER_NODE_IO(network_mgmt_stream_to_host_rx_prefix_0, meta, IN, NET_10G_CLK156, 64, PULL)
MANAGER_NODE_IO(network_mgmt_stream_to_host_rx_prefix_0, src, IN, NET_10G_CLK156, 70, PUSH)
MANAGER_NODE_IO(network_mgmt_stream_to_host_rx_prefix_0, dst, OUT, NET_10G_CLK156, 70, PUSH)
MANAGER_NODE_IO(network_mgmt_stream_to_host_rx_framed_FramedStreamPreprocessor, src, IN, NET_10G_CLK156, 70, PUSH)
MANAGER_NODE_IO(network_mgmt_stream_to_host_rx_framed_FramedStreamPreprocessor, dst, OUT, NET_10G_CLK156, 64, PUSH)
MANAGER_NODE_IO(network_mgmt_stream_to_host_rx_framed_FramedStreamPreprocessor, metadata, OUT, NET_10G_CLK156, 96, PUSH)
MANAGER_NODE_IO(network_mgmt_stream_to_host_rx_framed_FramedStreamAligner, metadata, IN, NET_10G_CLK156, 96, PUSH)
MANAGER_NODE_IO(network_mgmt_stream_to_host_rx_framed_FramedStreamAligner, src, IN, NET_10G_CLK156, 128, PUSH)
MANAGER_NODE_IO(network_mgmt_stream_to_host_rx_framed_FramedStreamAligner, dst, OUT, NET_10G_CLK156, 128, PUSH)
MANAGER_NODE_IO(dualAspectPush_network_mgmt_stream_to_host_rx_framed, src, IN, NET_10G_CLK156, 64, PUSH)
MANAGER_NODE_IO(dualAspectPush_network_mgmt_stream_to_host_rx_framed, dst, OUT, NET_10G_CLK156, 128, PUSH)
MANAGER_NODE_IO(network_mgmt_stream_to_host_rx_framed, network_mgmt_stream_to_host_rx_framed, IN, PCIE, 128, PUSH)
MANAGER_NODE_IO(loop_0_sink, loop_0_sink, OUT, NET_10G_CLK156, 69, PUSH)
MANAGER_NODE_IO(loop_0_src, loop_0_src, IN, NET_10G_CLK156, 69, PUSH)
MANAGER_NODE_IO(Stream_49, input, IN, PCIE, 128, PULL)
MANAGER_NODE_IO(Stream_49, output, OUT, PCIE, 64, PUSH)
MANAGER_NODE_IO(Stream_81, input, IN, PCIE, 128, PUSH)
MANAGER_NODE_IO(Stream_81, output, OUT, PCIE, 128, PULL)
MANAGER_NODE_IO(Stream_79, input, IN, NET_10G_CLK156, 69, PUSH)
MANAGER_NODE_IO(Stream_79, output, OUT, NET_10G_CLK156, 69, PULL)
MANAGER_NODE_IO(Stream_83, input, IN, PCIE, 64, PUSH)
MANAGER_NODE_IO(Stream_83, output, OUT, NET_10G_CLK156, 64, PUSH)
MANAGER_NODE_IO(Stream_54, input, IN, NET_10G_CLK156, 69, PUSH)
MANAGER_NODE_IO(Stream_54, output, OUT, NET_10G_CLK156, 69, PUSH)
MANAGER_NODE_IO(Stream_6, input, IN, NET_10G_CLK156, 78, PUSH)
MANAGER_NODE_IO(Stream_6, output, OUT, STREAM, 78, PULL)
MANAGER_NODE_IO(Stream_24, input, IN, NET_10G_CLK156, 69, PUSH)
MANAGER_NODE_IO(Stream_24, output, OUT, NET_10G_CLK156, 69, PULL)
MANAGER_NODE_IO(Stream_39, input, IN, STREAM, 77, PUSH)
MANAGER_NODE_IO(Stream_39, output, OUT, NET_10G_CLK156, 77, PUSH)
MANAGER_NODE_IO(Stream_72, input, IN, NET_10G_CLK156, 128, PUSH)
MANAGER_NODE_IO(Stream_72, output, OUT, PCIE, 128, PUSH)
MANAGER_NODE_IO(Stream_42, input, IN, NET_10G_CLK156, 69, PUSH)
MANAGER_NODE_IO(Stream_42, output, OUT, NET_10G_CLK156, 69, PULL)
MANAGER_NODE_IO(Stream_44, input, IN, NET_10G_CLK156, 69, PUSH)
MANAGER_NODE_IO(Stream_44, output, OUT, NET_10G_CLK156, 69, PULL)
#endif

#ifdef MANAGER_STREAM
#define MANAGER_STREAM_PRESENT 1
MANAGER_STREAM(fieldSwapKernel, frameOut, Stream_39, input, 77)
MANAGER_STREAM(node0_ln108_WrapperNode, rx0, qsfp_top_10g_port1_eth_rx_fanout, input, 70)
MANAGER_STREAM(qsfp_top_10g_port1_eth_rx_fanout, output_0, qsfp_top_10g_port1_eth_rx_to_host_filter, input, 70)
MANAGER_STREAM(qsfp_top_10g_port1_eth_rx_fanout, output_1, qsfp_top_10g_port1_arp_server, fromNet, 70)
MANAGER_STREAM(qsfp_top_10g_port1_eth_rx_fanout, output_2, qsfp_top_10g_port1_icmp_echo_server, rx, 70)
MANAGER_STREAM(qsfp_top_10g_port1_eth_rx_fanout, output_3, qsfp_top_10g_port1_udp_rx, net, 70)
MANAGER_STREAM(qsfp_top_10g_port1_eth_rx_to_host_filter, output, qsfp_top_10g_port1_eth_rx_to_host_drop, src, 70)
MANAGER_STREAM(qsfp_top_10g_port1_eth_rx_to_host_drop, dst, network_mgmt_stream_to_host_rx_prefix_0, src, 70)
MANAGER_STREAM(qsfp_top_10g_port1_eth_tx_from_host_rem_conv, dst, Stream_42, input, 69)
MANAGER_STREAM(qsfp_top_10g_port1_arp_server, toNet, qsfp_top_10g_port1_eth_tx_PacketMux, input_1, 69)
MANAGER_STREAM(qsfp_top_10g_port1_icmp_echo_server, tx, Stream_44, input, 69)
MANAGER_STREAM(qsfp_top_10g_port1_udp_rx, payload, qsfp_top_10g_port1_udp_rx_EOFEFrameDrop, src, 78)
MANAGER_STREAM(qsfp_top_10g_port1_udp_rx_EOFEFrameDrop, dst, Stream_6, input, 78)
MANAGER_STREAM(qsfp_top_10g_port1_udp_tx, toNet, qsfp_top_10g_port1_eth_tx_PacketMux, input_3, 69)
MANAGER_STREAM(qsfp_top_10g_port1_eth_tx_PacketMux, output, loop_0_src, loop_0_src, 69)
MANAGER_STREAM(network_mgmt_stream_from_host_tx_framed, network_mgmt_stream_from_host_tx_framed, Stream_81, input, 128)
MANAGER_STREAM(SlicerFramer_network_mgmt_stream_from_host_tx_framed, dst, Stream_54, input, 69)
MANAGER_STREAM(network_mgmt_stream_from_host_tx_demux, dst_0, Stream_24, input, 69)
MANAGER_STREAM(network_mgmt_stream_to_host_rx_id_0, data, network_mgmt_stream_to_host_rx_prefix_0, meta, 64)
MANAGER_STREAM(network_mgmt_stream_to_host_rx_prefix_0, dst, network_mgmt_stream_to_host_rx_framed_FramedStreamPreprocessor, src, 70)
MANAGER_STREAM(network_mgmt_stream_to_host_rx_framed_FramedStreamPreprocessor, dst, dualAspectPush_network_mgmt_stream_to_host_rx_framed, src, 64)
MANAGER_STREAM(dualAspectPush_network_mgmt_stream_to_host_rx_framed, dst, network_mgmt_stream_to_host_rx_framed_FramedStreamAligner, src, 128)
MANAGER_STREAM(network_mgmt_stream_to_host_rx_framed_FramedStreamPreprocessor, metadata, network_mgmt_stream_to_host_rx_framed_FramedStreamAligner, metadata, 96)
MANAGER_STREAM(network_mgmt_stream_to_host_rx_framed_FramedStreamAligner, dst, Stream_72, input, 128)
MANAGER_STREAM(loop_0_sink, loop_0_sink, Stream_79, input, 69)
MANAGER_STREAM(Stream_49, output, Stream_83, input, 64)
MANAGER_STREAM(Stream_81, output, Stream_49, input, 128)
MANAGER_STREAM(Stream_79, output, node0_ln108_WrapperNode, tx0, 69)
MANAGER_STREAM(Stream_83, output, SlicerFramer_network_mgmt_stream_from_host_tx_framed, src, 64)
MANAGER_STREAM(Stream_54, output, network_mgmt_stream_from_host_tx_demux, src, 69)
MANAGER_STREAM(Stream_6, output, fieldSwapKernel, frameIn, 78)
MANAGER_STREAM(Stream_24, output, qsfp_top_10g_port1_eth_tx_from_host_rem_conv, src, 69)
MANAGER_STREAM(Stream_39, output, qsfp_top_10g_port1_udp_tx, src, 77)
MANAGER_STREAM(Stream_72, output, network_mgmt_stream_to_host_rx_framed, network_mgmt_stream_to_host_rx_framed, 128)
MANAGER_STREAM(Stream_42, output, qsfp_top_10g_port1_eth_tx_PacketMux, input_0, 69)
MANAGER_STREAM(Stream_44, output, qsfp_top_10g_port1_eth_tx_PacketMux, input_2, 69)
#endif

#ifdef MANAGER_NODE_STACK_TRACE
#define MANAGER_NODE_STACK_TRACE_PRESENT 1
MANAGER_NODE_STACK_TRACE(node0_ln108_WrapperNode, "com.maxeler.utils.CreationLogger.<init>(CreationLogger.java:91)\ncom.maxeler.maxeleros.managercompiler.core.WrapperNode.<init>(WrapperNode.java:108)\ncom.maxeler.maxeleros.managercompiler.core.WrapperNode.<init>(WrapperNode.java:103)\ncom.maxeler.maxeleros.managercompiler.nodes.WrapperNodeEthernetSim.<init>(WrapperNodeEthernetSim.java:34)\ncom.maxeler.networking.v1.managers.blocks.MaxEthernet$SimNetworkBlock.<init>(MaxEthernet.java:125)\ncom.maxeler.networking.v1.managers.blocks.MaxEthernet$SimNetworkBlock.<init>(MaxEthernet.java:111)\ncom.maxeler.networking.v1.managers.blocks.MaxEthernet.buildNetworkBlock(MaxEthernet.java:211)\ncom.maxeler.networking.v1.managers.netlib.NetworkConnectionData.initialise(NetworkConnectionData.java:111)\ncom.maxeler.networking.v1.managers.netlib.NetworkConnectionData.addUDPStream(NetworkConnectionData.java:472)\ncom.maxeler.networking.v1.managers.NetworkManager.addUDPStream(NetworkManager.maxj:382)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:19)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
MANAGER_NODE_STACK_TRACE(fieldSwapKernel, "com.maxeler.maxcompiler.v2.managers.custom.CustomManager.addKernel(CustomManager.java:1014)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
MANAGER_NODE_STACK_TRACE(qsfp_top_10g_port1_eth_rx_fanout, "com.maxeler.maxcompiler.v2.managers.custom.CustomManager.addStateMachine(CustomManager.java:1150)\ncom.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
MANAGER_NODE_STACK_TRACE(qsfp_top_10g_port1_eth_rx_to_host_filter, "com.maxeler.maxcompiler.v2.managers.custom.CustomManager.addStateMachine(CustomManager.java:1150)\ncom.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
MANAGER_NODE_STACK_TRACE(qsfp_top_10g_port1_eth_rx_to_host_drop, "com.maxeler.maxcompiler.v2.managers.custom.CustomManager.addStateMachine(CustomManager.java:1150)\ncom.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
MANAGER_NODE_STACK_TRACE(qsfp_top_10g_port1_eth_tx_from_host_rem_conv, "com.maxeler.maxcompiler.v2.managers.custom.CustomManager.addStateMachine(CustomManager.java:1150)\ncom.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
MANAGER_NODE_STACK_TRACE(qsfp_top_10g_port1_arp_server, "com.maxeler.maxcompiler.v2.managers.custom.CustomManager.addStateMachine(CustomManager.java:1150)\ncom.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
MANAGER_NODE_STACK_TRACE(qsfp_top_10g_port1_icmp_echo_server, "com.maxeler.maxcompiler.v2.managers.custom.CustomManager.addStateMachine(CustomManager.java:1150)\ncom.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
MANAGER_NODE_STACK_TRACE(qsfp_top_10g_port1_udp_rx, "com.maxeler.maxcompiler.v2.managers.custom.CustomManager.addStateMachine(CustomManager.java:1150)\ncom.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
MANAGER_NODE_STACK_TRACE(qsfp_top_10g_port1_udp_rx_EOFEFrameDrop, "com.maxeler.maxcompiler.v2.managers.custom.CustomManager.addStateMachine(CustomManager.java:1150)\ncom.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
MANAGER_NODE_STACK_TRACE(qsfp_top_10g_port1_udp_tx, "com.maxeler.maxcompiler.v2.managers.custom.CustomManager.addStateMachine(CustomManager.java:1150)\ncom.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
MANAGER_NODE_STACK_TRACE(qsfp_top_10g_port1_eth_tx_PacketMux, "com.maxeler.maxcompiler.v2.managers.custom.CustomManager.addStateMachine(CustomManager.java:1150)\ncom.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
MANAGER_NODE_STACK_TRACE(SlicerFramer_network_mgmt_stream_from_host_tx_framed, "com.maxeler.maxcompiler.v2.managers.custom.CustomManager.addStateMachine(CustomManager.java:1150)\ncom.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
MANAGER_NODE_STACK_TRACE(network_mgmt_stream_from_host_tx_framed, "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
MANAGER_NODE_STACK_TRACE(network_mgmt_stream_from_host_tx_demux, "com.maxeler.maxcompiler.v2.managers.custom.CustomManager.addStateMachine(CustomManager.java:1150)\ncom.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
MANAGER_NODE_STACK_TRACE(network_mgmt_stream_to_host_rx_id_0, "com.maxeler.maxcompiler.v2.managers.custom.CustomManager.addStateMachine(CustomManager.java:1150)\ncom.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
MANAGER_NODE_STACK_TRACE(network_mgmt_stream_to_host_rx_prefix_0, "com.maxeler.maxcompiler.v2.managers.custom.CustomManager.addStateMachine(CustomManager.java:1150)\ncom.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
MANAGER_NODE_STACK_TRACE(network_mgmt_stream_to_host_rx_framed_FramedStreamPreprocessor, "com.maxeler.maxcompiler.v2.managers.custom.CustomManager.addStateMachine(CustomManager.java:1150)\ncom.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
MANAGER_NODE_STACK_TRACE(network_mgmt_stream_to_host_rx_framed_FramedStreamAligner, "com.maxeler.maxcompiler.v2.managers.custom.CustomManager.addStateMachine(CustomManager.java:1150)\ncom.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
MANAGER_NODE_STACK_TRACE(dualAspectPush_network_mgmt_stream_to_host_rx_framed, "com.maxeler.maxcompiler.v2.managers.custom.CustomManager.addStateMachine(CustomManager.java:1150)\ncom.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
MANAGER_NODE_STACK_TRACE(network_mgmt_stream_to_host_rx_framed, "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
MANAGER_NODE_STACK_TRACE(loop_0_sink, "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
MANAGER_NODE_STACK_TRACE(loop_0_src, "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
MANAGER_NODE_STACK_TRACE(Stream_49, "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
MANAGER_NODE_STACK_TRACE(Stream_81, "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
MANAGER_NODE_STACK_TRACE(Stream_79, "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
MANAGER_NODE_STACK_TRACE(Stream_83, "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
MANAGER_NODE_STACK_TRACE(Stream_54, "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
MANAGER_NODE_STACK_TRACE(Stream_6, "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
MANAGER_NODE_STACK_TRACE(Stream_24, "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
MANAGER_NODE_STACK_TRACE(Stream_39, "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
MANAGER_NODE_STACK_TRACE(Stream_72, "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
MANAGER_NODE_STACK_TRACE(Stream_42, "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
MANAGER_NODE_STACK_TRACE(Stream_44, "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
#endif


#ifdef MANAGER_NODE_PROPERTY
#define MANAGER_NODE_PROPERTY_PRESENT 1
MANAGER_NODE_PROPERTY(fieldSwapKernel, control_pipelining_depth, 2)
#endif


#ifdef KERNEL_CORE
#define KERNEL_CORE_PRESENT 1
KERNEL_CORE(fieldSwapKernel)
#endif

#ifdef DEBUG_INPUT_BITS
#define DEBUG_INPUT_BITS_PRESENT 1
DEBUG_INPUT_BITS(fieldSwapKernel, frameIn, 0)
#endif

#ifdef DEBUG_OUTPUT_BITS
#define DEBUG_OUTPUT_BITS_PRESENT 1
DEBUG_OUTPUT_BITS(fieldSwapKernel, frameOut, 0)
#endif

#ifdef MANAGER_NODE_PROPERTY
#define MANAGER_NODE_PROPERTY_PRESENT 1
MANAGER_NODE_PROPERTY(loop_0_src, loop_sink, loop_0_sink)
#endif

#ifdef MANAGER_NODE_CPP_SIM_MODEL_CTOR
#define MANAGER_NODE_CPP_SIM_MODEL_CTOR_PRESENT 1
MANAGER_NODE_CPP_SIM_MODEL_CTOR(network_mgmt_stream_from_host_tx_framed, PCIePushSourceSyncMax4, "network_mgmt_stream_from_host_tx_framed")
MANAGER_NODE_CPP_SIM_MODEL_CTOR(network_mgmt_stream_to_host_rx_id_0, maxcompilersim::state_machine::ManagerBlockSM_network_mgmt_stream_to_host_rx_id_0, "network_mgmt_stream_to_host_rx_id_0")
MANAGER_NODE_CPP_SIM_MODEL_CTOR(loop_0_sink, LoopPushSinkSync, "loop_0_sink")
MANAGER_NODE_CPP_SIM_MODEL_CTOR(Stream_81, FifoPushToPullSync, "Stream_81", false, 512, 128)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(Stream_79, FifoPushToPullSync, "Stream_79", false, 512, 69)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(Stream_49, DualAspectMuxSync, "Stream_49", 64, 2)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(node0_ln108_WrapperNode, Ethernet, "node0_ln108_WrapperNode", simulated_system_name, "QSFP_TOP", 4, "qsfp_top", 1, 1)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(Stream_83, FifoPushToPushSync, "Stream_83", false, 512, 64)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(qsfp_top_10g_port1_eth_rx_fanout, maxcompilersim::state_machine::ManagerBlockSM_qsfp_top_10g_port1_eth_rx_fanout, "qsfp_top_10g_port1_eth_rx_fanout")
MANAGER_NODE_CPP_SIM_MODEL_CTOR(SlicerFramer_network_mgmt_stream_from_host_tx_framed, maxcompilersim::state_machine::ManagerBlockSM_SlicerFramer_network_mgmt_stream_from_host_tx_framed, "SlicerFramer_network_mgmt_stream_from_host_tx_framed")
MANAGER_NODE_CPP_SIM_MODEL_CTOR(qsfp_top_10g_port1_eth_rx_to_host_filter, maxcompilersim::state_machine::ManagerBlockSM_qsfp_top_10g_port1_eth_rx_to_host_filter, "qsfp_top_10g_port1_eth_rx_to_host_filter")
MANAGER_NODE_CPP_SIM_MODEL_CTOR(qsfp_top_10g_port1_arp_server, maxcompilersim::state_machine::ManagerBlockSM_qsfp_top_10g_port1_arp_server, "qsfp_top_10g_port1_arp_server")
MANAGER_NODE_CPP_SIM_MODEL_CTOR(qsfp_top_10g_port1_icmp_echo_server, maxcompilersim::state_machine::ManagerBlockSM_qsfp_top_10g_port1_icmp_echo_server, "qsfp_top_10g_port1_icmp_echo_server")
MANAGER_NODE_CPP_SIM_MODEL_CTOR(qsfp_top_10g_port1_udp_rx, maxcompilersim::state_machine::ManagerBlockSM_qsfp_top_10g_port1_udp_rx, "qsfp_top_10g_port1_udp_rx")
MANAGER_NODE_CPP_SIM_MODEL_CTOR(Stream_54, FifoPushToPushSync, "Stream_54", false, 512, 69)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(qsfp_top_10g_port1_eth_rx_to_host_drop, maxcompilersim::state_machine::ManagerBlockSM_qsfp_top_10g_port1_eth_rx_to_host_drop, "qsfp_top_10g_port1_eth_rx_to_host_drop")
MANAGER_NODE_CPP_SIM_MODEL_CTOR(Stream_44, FifoPushToPullSync, "Stream_44", false, 512, 69)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(qsfp_top_10g_port1_udp_rx_EOFEFrameDrop, maxcompilersim::state_machine::ManagerBlockSM_qsfp_top_10g_port1_udp_rx_EOFEFrameDrop, "qsfp_top_10g_port1_udp_rx_EOFEFrameDrop")
MANAGER_NODE_CPP_SIM_MODEL_CTOR(network_mgmt_stream_from_host_tx_demux, maxcompilersim::state_machine::ManagerBlockSM_network_mgmt_stream_from_host_tx_demux, "network_mgmt_stream_from_host_tx_demux")
MANAGER_NODE_CPP_SIM_MODEL_CTOR(network_mgmt_stream_to_host_rx_prefix_0, maxcompilersim::state_machine::ManagerBlockSM_network_mgmt_stream_to_host_rx_prefix_0, "network_mgmt_stream_to_host_rx_prefix_0")
MANAGER_NODE_CPP_SIM_MODEL_CTOR(Stream_6, FifoPushToPullSync, "Stream_6", false, 512, 78)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(Stream_24, FifoPushToPullSync, "Stream_24", false, 512, 69)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(network_mgmt_stream_to_host_rx_framed_FramedStreamPreprocessor, maxcompilersim::state_machine::ManagerBlockSM_network_mgmt_stream_to_host_rx_framed_FramedStreamPreprocessor, "network_mgmt_stream_to_host_rx_framed_FramedStreamPreprocessor")
MANAGER_NODE_CPP_SIM_MODEL_CTOR(fieldSwapKernel, fieldSwapKernel, "fieldSwapKernel")
MANAGER_NODE_CPP_SIM_MODEL_CTOR(qsfp_top_10g_port1_eth_tx_from_host_rem_conv, maxcompilersim::state_machine::ManagerBlockSM_qsfp_top_10g_port1_eth_tx_from_host_rem_conv, "qsfp_top_10g_port1_eth_tx_from_host_rem_conv")
MANAGER_NODE_CPP_SIM_MODEL_CTOR(dualAspectPush_network_mgmt_stream_to_host_rx_framed, maxcompilersim::state_machine::ManagerBlockSM_dualAspectPush_network_mgmt_stream_to_host_rx_framed, "dualAspectPush_network_mgmt_stream_to_host_rx_framed")
MANAGER_NODE_CPP_SIM_MODEL_CTOR(Stream_39, FifoPushToPushSync, "Stream_39", false, 512, 77)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(Stream_42, FifoPushToPullSync, "Stream_42", false, 512, 69)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(network_mgmt_stream_to_host_rx_framed_FramedStreamAligner, maxcompilersim::state_machine::ManagerBlockSM_network_mgmt_stream_to_host_rx_framed_FramedStreamAligner, "network_mgmt_stream_to_host_rx_framed_FramedStreamAligner")
MANAGER_NODE_CPP_SIM_MODEL_CTOR(qsfp_top_10g_port1_udp_tx, maxcompilersim::state_machine::ManagerBlockSM_qsfp_top_10g_port1_udp_tx, "qsfp_top_10g_port1_udp_tx")
MANAGER_NODE_CPP_SIM_MODEL_CTOR(Stream_72, FifoPushToPushSync, "Stream_72", false, 512, 128)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(qsfp_top_10g_port1_eth_tx_PacketMux, maxcompilersim::state_machine::ManagerBlockSM_qsfp_top_10g_port1_eth_tx_PacketMux, "qsfp_top_10g_port1_eth_tx_PacketMux")
MANAGER_NODE_CPP_SIM_MODEL_CTOR(network_mgmt_stream_to_host_rx_framed, PCIePushSinkSyncMax3, "network_mgmt_stream_to_host_rx_framed")
MANAGER_NODE_CPP_SIM_MODEL_CTOR(loop_0_src, LoopPushSourceSync, "loop_0_src", *MANAGER_BLOCK_FIELD(Stream_79), "input")
MANAGER_NODE_CPP_SIM_MODEL_CTOR(CapabilityReg, CapRegs, "CapabilityReg", 0, 1, 1, 0, 0, 0, 0, 0, 322)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(ifpga, IFPGARegs)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(sfa, SFARegs)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(ChecksumMemory, ChecksumMem, "ChecksumMemory", "6c7f9bdbd9a47680489d830199e29fa13883c2dd630c9ee58b78f2cd9d590fa7")
#endif

#ifdef MANAGER_NODE_CPP_SIM_MODEL_SETUP
#define MANAGER_NODE_CPP_SIM_MODEL_SETUP_PRESENT 1
MANAGER_NODE_CPP_SIM_MODEL_SETUP(fieldSwapKernel, addDebugRegister, reg_dbg_ctld_almost_empty, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(fieldSwapKernel, addDebugRegister, reg_dbg_ctld_done, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(fieldSwapKernel, addDebugRegister, reg_dbg_ctld_empty, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(fieldSwapKernel, addDebugRegister, reg_dbg_ctld_read, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(fieldSwapKernel, addDebugRegister, reg_dbg_ctld_read_pipe_dbg, 3, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(fieldSwapKernel, addDebugRegister, reg_dbg_ctld_request, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(fieldSwapKernel, addDebugRegister, reg_dbg_done_out, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(fieldSwapKernel, addDebugRegister, reg_dbg_fill_level, 5, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(fieldSwapKernel, addDebugRegister, reg_dbg_flush_level, 5, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(fieldSwapKernel, addDebugRegister, reg_dbg_flush_start, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(fieldSwapKernel, addDebugRegister, reg_dbg_flush_start_level, 5, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(fieldSwapKernel, addDebugRegister, reg_dbg_flushing, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(fieldSwapKernel, addDebugRegister, reg_dbg_full_level, 5, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(fieldSwapKernel, addDebugRegister, reg_dbg_out_stall, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(fieldSwapKernel, addDebugRegister, reg_dbg_out_valid, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(fieldSwapKernel, addDebugRegister, reg_dbg_stall_vector, 1, 0)
#endif

#ifdef PCIE_STREAM
#define PCIE_STREAM_PRESENT 1
PCIE_STREAM(network_mgmt_stream_from_host_tx_framed, STREAM_FROM_HOST, 0)
PCIE_STREAM(network_mgmt_stream_to_host_rx_framed, STREAM_TO_HOST, 0)
#endif

#ifdef NETWORK
#define NETWORK_PRESENT 1
NETWORK(QSFP_TOP, S5TenGigEthernetPlugin, QSFP_TOP_MAC)
#endif

#ifdef REG
#define REG_PRESENT 1
REG(SlicerFramer_network_mgmt_stream_from_host_tx_framed.eofCount, 0x0, 8, hwOffsetFix(64, 0, UNSIGNED))
REG(SlicerFramer_network_mgmt_stream_from_host_tx_framed.sofCount, 0x8, 8, hwOffsetFix(64, 0, UNSIGNED))
REG(qsfp_top_10g_port1_eth_rx_to_host_filter.enable, 0x10, 1, hwOffsetFix(1, 0, UNSIGNED))
REG(qsfp_top_10g_port1_arp_server.ip_address, 0x11, 4, hwOffsetFix(32, 0, UNSIGNED))
REG(qsfp_top_10g_port1_arp_server.mac_address, 0x15, 6, hwOffsetFix(48, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.bcast_ip, 0x1b, 4, hwOffsetFix(32, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_local_port_0, 0x1f, 2, hwOffsetFix(16, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_local_port_1, 0x21, 2, hwOffsetFix(16, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_local_port_10, 0x23, 2, hwOffsetFix(16, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_local_port_11, 0x25, 2, hwOffsetFix(16, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_local_port_12, 0x27, 2, hwOffsetFix(16, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_local_port_13, 0x29, 2, hwOffsetFix(16, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_local_port_14, 0x2b, 2, hwOffsetFix(16, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_local_port_15, 0x2d, 2, hwOffsetFix(16, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_local_port_2, 0x2f, 2, hwOffsetFix(16, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_local_port_3, 0x31, 2, hwOffsetFix(16, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_local_port_4, 0x33, 2, hwOffsetFix(16, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_local_port_5, 0x35, 2, hwOffsetFix(16, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_local_port_6, 0x37, 2, hwOffsetFix(16, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_local_port_7, 0x39, 2, hwOffsetFix(16, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_local_port_8, 0x3b, 2, hwOffsetFix(16, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_local_port_9, 0x3d, 2, hwOffsetFix(16, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_mcast_ip_0, 0x3f, 4, hwOffsetFix(32, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_mcast_ip_1, 0x43, 4, hwOffsetFix(32, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_mcast_ip_10, 0x47, 4, hwOffsetFix(32, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_mcast_ip_11, 0x4b, 4, hwOffsetFix(32, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_mcast_ip_12, 0x4f, 4, hwOffsetFix(32, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_mcast_ip_13, 0x53, 4, hwOffsetFix(32, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_mcast_ip_14, 0x57, 4, hwOffsetFix(32, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_mcast_ip_15, 0x5b, 4, hwOffsetFix(32, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_mcast_ip_2, 0x5f, 4, hwOffsetFix(32, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_mcast_ip_3, 0x63, 4, hwOffsetFix(32, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_mcast_ip_4, 0x67, 4, hwOffsetFix(32, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_mcast_ip_5, 0x6b, 4, hwOffsetFix(32, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_mcast_ip_6, 0x6f, 4, hwOffsetFix(32, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_mcast_ip_7, 0x73, 4, hwOffsetFix(32, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_mcast_ip_8, 0x77, 4, hwOffsetFix(32, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_mcast_ip_9, 0x7b, 4, hwOffsetFix(32, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_src_ip_0, 0x7f, 4, hwOffsetFix(32, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_src_ip_1, 0x83, 4, hwOffsetFix(32, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_src_ip_10, 0x87, 4, hwOffsetFix(32, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_src_ip_11, 0x8b, 4, hwOffsetFix(32, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_src_ip_12, 0x8f, 4, hwOffsetFix(32, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_src_ip_13, 0x93, 4, hwOffsetFix(32, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_src_ip_14, 0x97, 4, hwOffsetFix(32, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_src_ip_15, 0x9b, 4, hwOffsetFix(32, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_src_ip_2, 0x9f, 4, hwOffsetFix(32, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_src_ip_3, 0xa3, 4, hwOffsetFix(32, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_src_ip_4, 0xa7, 4, hwOffsetFix(32, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_src_ip_5, 0xab, 4, hwOffsetFix(32, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_src_ip_6, 0xaf, 4, hwOffsetFix(32, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_src_ip_7, 0xb3, 4, hwOffsetFix(32, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_src_ip_8, 0xb7, 4, hwOffsetFix(32, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_src_ip_9, 0xbb, 4, hwOffsetFix(32, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_src_port_0, 0xbf, 2, hwOffsetFix(16, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_src_port_1, 0xc1, 2, hwOffsetFix(16, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_src_port_10, 0xc3, 2, hwOffsetFix(16, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_src_port_11, 0xc5, 2, hwOffsetFix(16, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_src_port_12, 0xc7, 2, hwOffsetFix(16, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_src_port_13, 0xc9, 2, hwOffsetFix(16, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_src_port_14, 0xcb, 2, hwOffsetFix(16, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_src_port_15, 0xcd, 2, hwOffsetFix(16, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_src_port_2, 0xcf, 2, hwOffsetFix(16, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_src_port_3, 0xd1, 2, hwOffsetFix(16, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_src_port_4, 0xd3, 2, hwOffsetFix(16, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_src_port_5, 0xd5, 2, hwOffsetFix(16, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_src_port_6, 0xd7, 2, hwOffsetFix(16, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_src_port_7, 0xd9, 2, hwOffsetFix(16, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_src_port_8, 0xdb, 2, hwOffsetFix(16, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_src_port_9, 0xdd, 2, hwOffsetFix(16, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_valid_0, 0xdf, 1, hwOffsetFix(2, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_valid_1, 0xe0, 1, hwOffsetFix(2, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_valid_10, 0xe1, 1, hwOffsetFix(2, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_valid_11, 0xe2, 1, hwOffsetFix(2, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_valid_12, 0xe3, 1, hwOffsetFix(2, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_valid_13, 0xe4, 1, hwOffsetFix(2, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_valid_14, 0xe5, 1, hwOffsetFix(2, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_valid_15, 0xe6, 1, hwOffsetFix(2, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_valid_2, 0xe7, 1, hwOffsetFix(2, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_valid_3, 0xe8, 1, hwOffsetFix(2, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_valid_4, 0xe9, 1, hwOffsetFix(2, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_valid_5, 0xea, 1, hwOffsetFix(2, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_valid_6, 0xeb, 1, hwOffsetFix(2, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_valid_7, 0xec, 1, hwOffsetFix(2, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_valid_8, 0xed, 1, hwOffsetFix(2, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.filter_valid_9, 0xee, 1, hwOffsetFix(2, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx.self_ip, 0xef, 4, hwOffsetFix(32, 0, UNSIGNED))
REG(qsfp_top_10g_port1_eth_rx_to_host_drop.badFramesCounter, 0xf3, 8, hwOffsetFix(64, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_rx_EOFEFrameDrop.badFramesCounter, 0xfb, 8, hwOffsetFix(64, 0, UNSIGNED))
REG(network_mgmt_stream_to_host_rx_framed_FramedStreamPreprocessor.eofCount, 0x103, 8, hwOffsetFix(64, 0, UNSIGNED))
REG(network_mgmt_stream_to_host_rx_framed_FramedStreamPreprocessor.sofCount, 0x10b, 8, hwOffsetFix(64, 0, UNSIGNED))
REG(fieldSwapKernel.io_frameIn_force_disabled, 0x113, 1, hwOffsetFix(1, 0, UNSIGNED))
REG(fieldSwapKernel.io_frameOut_force_disabled, 0x114, 1, hwOffsetFix(1, 0, UNSIGNED))
REG(fieldSwapKernel.current_run_cycle_count, 0x115, 6, hwOffsetFix(48, 0, UNSIGNED))
REG(fieldSwapKernel.dbg_ctld_almost_empty, 0x11b, 1, hwBits(1))
REG(fieldSwapKernel.dbg_ctld_done, 0x11c, 1, hwBits(1))
REG(fieldSwapKernel.dbg_ctld_empty, 0x11d, 1, hwBits(1))
REG(fieldSwapKernel.dbg_ctld_read, 0x11e, 1, hwBits(1))
REG(fieldSwapKernel.dbg_ctld_read_pipe_dbg, 0x11f, 1, hwBits(3))
REG(fieldSwapKernel.dbg_ctld_request, 0x120, 1, hwBits(1))
REG(fieldSwapKernel.dbg_done_out, 0x121, 1, hwBits(1))
REG(fieldSwapKernel.dbg_fill_level, 0x122, 1, hwBits(5))
REG(fieldSwapKernel.dbg_flush_level, 0x123, 1, hwBits(5))
REG(fieldSwapKernel.dbg_flush_start, 0x124, 1, hwBits(1))
REG(fieldSwapKernel.dbg_flush_start_level, 0x125, 1, hwBits(5))
REG(fieldSwapKernel.dbg_flushing, 0x126, 1, hwBits(1))
REG(fieldSwapKernel.dbg_full_level, 0x127, 1, hwBits(5))
REG(fieldSwapKernel.dbg_out_stall, 0x128, 1, hwBits(1))
REG(fieldSwapKernel.dbg_out_valid, 0x129, 1, hwBits(1))
REG(fieldSwapKernel.dbg_stall_vector, 0x12a, 1, hwBits(1))
REG(qsfp_top_10g_port1_eth_tx_from_host_rem_conv.badFramesCounter, 0x12b, 8, hwOffsetFix(64, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_tx.self_ip, 0x133, 4, hwOffsetFix(32, 0, UNSIGNED))
REG(qsfp_top_10g_port1_udp_tx.self_mac, 0x137, 6, hwOffsetFix(48, 0, UNSIGNED))
REG(ifpga.ifpga_ctrl, 0x13d, 1, hwBits(8))
REG(SignalForwardingAdapter.SFA_FORWARD_EN, 0x13e, 4, hwBits(32))
#endif

#ifdef REG_V2
#define REG_V2_PRESENT 1
REG_V2(SlicerFramer_network_mgmt_stream_from_host_tx_framed.eofCount, 0x0, 8, hwOffsetFix(64, 0, UNSIGNED), HOST_READ_ONLY, false)
REG_V2(SlicerFramer_network_mgmt_stream_from_host_tx_framed.sofCount, 0x8, 8, hwOffsetFix(64, 0, UNSIGNED), HOST_READ_ONLY, false)
REG_V2(qsfp_top_10g_port1_eth_rx_to_host_filter.enable, 0x10, 1, hwOffsetFix(1, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_arp_server.ip_address, 0x11, 4, hwOffsetFix(32, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_arp_server.mac_address, 0x15, 6, hwOffsetFix(48, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.bcast_ip, 0x1b, 4, hwOffsetFix(32, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_local_port_0, 0x1f, 2, hwOffsetFix(16, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_local_port_1, 0x21, 2, hwOffsetFix(16, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_local_port_10, 0x23, 2, hwOffsetFix(16, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_local_port_11, 0x25, 2, hwOffsetFix(16, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_local_port_12, 0x27, 2, hwOffsetFix(16, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_local_port_13, 0x29, 2, hwOffsetFix(16, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_local_port_14, 0x2b, 2, hwOffsetFix(16, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_local_port_15, 0x2d, 2, hwOffsetFix(16, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_local_port_2, 0x2f, 2, hwOffsetFix(16, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_local_port_3, 0x31, 2, hwOffsetFix(16, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_local_port_4, 0x33, 2, hwOffsetFix(16, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_local_port_5, 0x35, 2, hwOffsetFix(16, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_local_port_6, 0x37, 2, hwOffsetFix(16, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_local_port_7, 0x39, 2, hwOffsetFix(16, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_local_port_8, 0x3b, 2, hwOffsetFix(16, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_local_port_9, 0x3d, 2, hwOffsetFix(16, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_mcast_ip_0, 0x3f, 4, hwOffsetFix(32, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_mcast_ip_1, 0x43, 4, hwOffsetFix(32, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_mcast_ip_10, 0x47, 4, hwOffsetFix(32, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_mcast_ip_11, 0x4b, 4, hwOffsetFix(32, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_mcast_ip_12, 0x4f, 4, hwOffsetFix(32, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_mcast_ip_13, 0x53, 4, hwOffsetFix(32, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_mcast_ip_14, 0x57, 4, hwOffsetFix(32, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_mcast_ip_15, 0x5b, 4, hwOffsetFix(32, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_mcast_ip_2, 0x5f, 4, hwOffsetFix(32, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_mcast_ip_3, 0x63, 4, hwOffsetFix(32, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_mcast_ip_4, 0x67, 4, hwOffsetFix(32, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_mcast_ip_5, 0x6b, 4, hwOffsetFix(32, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_mcast_ip_6, 0x6f, 4, hwOffsetFix(32, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_mcast_ip_7, 0x73, 4, hwOffsetFix(32, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_mcast_ip_8, 0x77, 4, hwOffsetFix(32, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_mcast_ip_9, 0x7b, 4, hwOffsetFix(32, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_src_ip_0, 0x7f, 4, hwOffsetFix(32, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_src_ip_1, 0x83, 4, hwOffsetFix(32, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_src_ip_10, 0x87, 4, hwOffsetFix(32, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_src_ip_11, 0x8b, 4, hwOffsetFix(32, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_src_ip_12, 0x8f, 4, hwOffsetFix(32, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_src_ip_13, 0x93, 4, hwOffsetFix(32, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_src_ip_14, 0x97, 4, hwOffsetFix(32, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_src_ip_15, 0x9b, 4, hwOffsetFix(32, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_src_ip_2, 0x9f, 4, hwOffsetFix(32, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_src_ip_3, 0xa3, 4, hwOffsetFix(32, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_src_ip_4, 0xa7, 4, hwOffsetFix(32, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_src_ip_5, 0xab, 4, hwOffsetFix(32, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_src_ip_6, 0xaf, 4, hwOffsetFix(32, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_src_ip_7, 0xb3, 4, hwOffsetFix(32, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_src_ip_8, 0xb7, 4, hwOffsetFix(32, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_src_ip_9, 0xbb, 4, hwOffsetFix(32, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_src_port_0, 0xbf, 2, hwOffsetFix(16, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_src_port_1, 0xc1, 2, hwOffsetFix(16, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_src_port_10, 0xc3, 2, hwOffsetFix(16, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_src_port_11, 0xc5, 2, hwOffsetFix(16, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_src_port_12, 0xc7, 2, hwOffsetFix(16, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_src_port_13, 0xc9, 2, hwOffsetFix(16, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_src_port_14, 0xcb, 2, hwOffsetFix(16, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_src_port_15, 0xcd, 2, hwOffsetFix(16, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_src_port_2, 0xcf, 2, hwOffsetFix(16, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_src_port_3, 0xd1, 2, hwOffsetFix(16, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_src_port_4, 0xd3, 2, hwOffsetFix(16, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_src_port_5, 0xd5, 2, hwOffsetFix(16, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_src_port_6, 0xd7, 2, hwOffsetFix(16, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_src_port_7, 0xd9, 2, hwOffsetFix(16, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_src_port_8, 0xdb, 2, hwOffsetFix(16, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_src_port_9, 0xdd, 2, hwOffsetFix(16, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_valid_0, 0xdf, 1, hwOffsetFix(2, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_valid_1, 0xe0, 1, hwOffsetFix(2, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_valid_10, 0xe1, 1, hwOffsetFix(2, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_valid_11, 0xe2, 1, hwOffsetFix(2, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_valid_12, 0xe3, 1, hwOffsetFix(2, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_valid_13, 0xe4, 1, hwOffsetFix(2, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_valid_14, 0xe5, 1, hwOffsetFix(2, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_valid_15, 0xe6, 1, hwOffsetFix(2, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_valid_2, 0xe7, 1, hwOffsetFix(2, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_valid_3, 0xe8, 1, hwOffsetFix(2, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_valid_4, 0xe9, 1, hwOffsetFix(2, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_valid_5, 0xea, 1, hwOffsetFix(2, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_valid_6, 0xeb, 1, hwOffsetFix(2, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_valid_7, 0xec, 1, hwOffsetFix(2, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_valid_8, 0xed, 1, hwOffsetFix(2, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.filter_valid_9, 0xee, 1, hwOffsetFix(2, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx.self_ip, 0xef, 4, hwOffsetFix(32, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_eth_rx_to_host_drop.badFramesCounter, 0xf3, 8, hwOffsetFix(64, 0, UNSIGNED), HOST_READ_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_rx_EOFEFrameDrop.badFramesCounter, 0xfb, 8, hwOffsetFix(64, 0, UNSIGNED), HOST_READ_ONLY, false)
REG_V2(network_mgmt_stream_to_host_rx_framed_FramedStreamPreprocessor.eofCount, 0x103, 8, hwOffsetFix(64, 0, UNSIGNED), HOST_READ_ONLY, false)
REG_V2(network_mgmt_stream_to_host_rx_framed_FramedStreamPreprocessor.sofCount, 0x10b, 8, hwOffsetFix(64, 0, UNSIGNED), HOST_READ_ONLY, false)
REG_V2(fieldSwapKernel.io_frameIn_force_disabled, 0x113, 1, hwOffsetFix(1, 0, UNSIGNED), HOST_WRITE_ONLY, true)
REG_V2(fieldSwapKernel.io_frameOut_force_disabled, 0x114, 1, hwOffsetFix(1, 0, UNSIGNED), HOST_WRITE_ONLY, true)
REG_V2(fieldSwapKernel.current_run_cycle_count, 0x115, 6, hwOffsetFix(48, 0, UNSIGNED), HOST_READ_ONLY, false)
REG_V2(fieldSwapKernel.dbg_ctld_almost_empty, 0x11b, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(fieldSwapKernel.dbg_ctld_done, 0x11c, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(fieldSwapKernel.dbg_ctld_empty, 0x11d, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(fieldSwapKernel.dbg_ctld_read, 0x11e, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(fieldSwapKernel.dbg_ctld_read_pipe_dbg, 0x11f, 1, hwBits(3), HOST_READ_ONLY, false)
REG_V2(fieldSwapKernel.dbg_ctld_request, 0x120, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(fieldSwapKernel.dbg_done_out, 0x121, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(fieldSwapKernel.dbg_fill_level, 0x122, 1, hwBits(5), HOST_READ_ONLY, false)
REG_V2(fieldSwapKernel.dbg_flush_level, 0x123, 1, hwBits(5), HOST_READ_ONLY, false)
REG_V2(fieldSwapKernel.dbg_flush_start, 0x124, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(fieldSwapKernel.dbg_flush_start_level, 0x125, 1, hwBits(5), HOST_READ_ONLY, false)
REG_V2(fieldSwapKernel.dbg_flushing, 0x126, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(fieldSwapKernel.dbg_full_level, 0x127, 1, hwBits(5), HOST_READ_ONLY, false)
REG_V2(fieldSwapKernel.dbg_out_stall, 0x128, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(fieldSwapKernel.dbg_out_valid, 0x129, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(fieldSwapKernel.dbg_stall_vector, 0x12a, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(qsfp_top_10g_port1_eth_tx_from_host_rem_conv.badFramesCounter, 0x12b, 8, hwOffsetFix(64, 0, UNSIGNED), HOST_READ_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_tx.self_ip, 0x133, 4, hwOffsetFix(32, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(qsfp_top_10g_port1_udp_tx.self_mac, 0x137, 6, hwOffsetFix(48, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(ifpga.ifpga_ctrl, 0x13d, 1, hwBits(8), HOST_READ_WRITE, false)
REG_V2(SignalForwardingAdapter.SFA_FORWARD_EN, 0x13e, 4, hwBits(32), HOST_READ_WRITE, false)
#endif


#ifdef MEM2
#define MEM2_PRESENT 1
MEM2(node0_ln108_WrapperNode.QSFP_TOP_MAC, 0x400000, hwBits(32))
MEM2(qsfp_top_10g_port1_icmp_echo_server.params, 0x410000, hwOffsetFix(48, 0, UNSIGNED))
MEM2(qsfp_top_10g_port1_udp_tx.routing_lookup_1, 0x420000, hwOffsetFix(64, 0, UNSIGNED))
MEM2(qsfp_top_10g_port1_udp_tx.routing_lookup_2, 0x430000, hwOffsetFix(57, 0, UNSIGNED))
#endif

#ifdef MEM_DEPTH
#define MEM_DEPTH_PRESENT 1
MEM_DEPTH(node0_ln108_WrapperNode.QSFP_TOP_MAC, 8192)
MEM_DEPTH(qsfp_top_10g_port1_icmp_echo_server.params, 2)
MEM_DEPTH(qsfp_top_10g_port1_udp_tx.routing_lookup_1, 16)
MEM_DEPTH(qsfp_top_10g_port1_udp_tx.routing_lookup_2, 16)
#endif

#ifdef CHECKSUM
#define CHECKSUM_PRESENT 1
CHECKSUM("6c7f9bdbd9a47680489d830199e29fa13883c2dd630c9ee58b78f2cd9d590fa7")
#endif

#ifdef CAPABILITY
#define CAPABILITY_PRESENT 1
CAPABILITY(MAX4NREV, ISCAREVB)
CAPABILITY(MAX4NRAM, DDR3_24GB)
CAPABILITY(MAX4NSRAM, QDR2_72MB)
CAPABILITY(MAX4NFPGA, 5SGXMABN2F45C2)
#endif

#ifdef DEFINE_DESIGN_NAME
#define DESIGN_NAME FieldAccumulator
#endif /* DEFINE_DESIGN_NAME */

#ifndef SLIC_NO_DECLARATIONS
/**\file */
#ifndef SLIC_DECLARATIONS_FieldAccumulator_H
#define SLIC_DECLARATIONS_FieldAccumulator_H
#include "MaxSLiCInterface.h"
#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#define FieldAccumulator_USE_NETWORK_MANAGER (1)
#define FieldAccumulator_PCIE_ALIGNMENT (16)


/*----------------------------------------------------------------------------*/
/*---------------------------- Interface default -----------------------------*/
/*----------------------------------------------------------------------------*/




/**
 * \brief Basic static function for the interface 'default'.
 * 
 * \param [out] outscalar_SlicerFramer_network_mgmt_stream_from_host_tx_framed_eofCount Output scalar parameter "SlicerFramer_network_mgmt_stream_from_host_tx_framed.eofCount".
 * \param [out] outscalar_SlicerFramer_network_mgmt_stream_from_host_tx_framed_sofCount Output scalar parameter "SlicerFramer_network_mgmt_stream_from_host_tx_framed.sofCount".
 * \param [out] outscalar_network_mgmt_stream_to_host_rx_framed_FramedStreamPreprocessor_eofCount Output scalar parameter "network_mgmt_stream_to_host_rx_framed_FramedStreamPreprocessor.eofCount".
 * \param [out] outscalar_network_mgmt_stream_to_host_rx_framed_FramedStreamPreprocessor_sofCount Output scalar parameter "network_mgmt_stream_to_host_rx_framed_FramedStreamPreprocessor.sofCount".
 * \param [in] instream_network_mgmt_stream_from_host_tx_framed Stream "network_mgmt_stream_from_host_tx_framed".
 * \param [in] instream_size_network_mgmt_stream_from_host_tx_framed The size of the stream instream_network_mgmt_stream_from_host_tx_framed in bytes.
 * \param [out] outstream_network_mgmt_stream_to_host_rx_framed Stream "network_mgmt_stream_to_host_rx_framed".
 * \param [in] outstream_size_network_mgmt_stream_to_host_rx_framed The size of the stream outstream_network_mgmt_stream_to_host_rx_framed in bytes.
 */
void FieldAccumulator(
	uint64_t *outscalar_SlicerFramer_network_mgmt_stream_from_host_tx_framed_eofCount,
	uint64_t *outscalar_SlicerFramer_network_mgmt_stream_from_host_tx_framed_sofCount,
	uint64_t *outscalar_network_mgmt_stream_to_host_rx_framed_FramedStreamPreprocessor_eofCount,
	uint64_t *outscalar_network_mgmt_stream_to_host_rx_framed_FramedStreamPreprocessor_sofCount,
	const void *instream_network_mgmt_stream_from_host_tx_framed,
	size_t instream_size_network_mgmt_stream_from_host_tx_framed,
	void *outstream_network_mgmt_stream_to_host_rx_framed,
	size_t outstream_size_network_mgmt_stream_to_host_rx_framed);

/**
 * \brief Basic static non-blocking function for the interface 'default'.
 * 
 * Schedule to run on an engine and return immediately.
 * The status of the run can be checked either by ::max_wait or ::max_nowait;
 * note that one of these *must* be called, so that associated memory can be released.
 * 
 * 
 * \param [out] outscalar_SlicerFramer_network_mgmt_stream_from_host_tx_framed_eofCount Output scalar parameter "SlicerFramer_network_mgmt_stream_from_host_tx_framed.eofCount".
 * \param [out] outscalar_SlicerFramer_network_mgmt_stream_from_host_tx_framed_sofCount Output scalar parameter "SlicerFramer_network_mgmt_stream_from_host_tx_framed.sofCount".
 * \param [out] outscalar_network_mgmt_stream_to_host_rx_framed_FramedStreamPreprocessor_eofCount Output scalar parameter "network_mgmt_stream_to_host_rx_framed_FramedStreamPreprocessor.eofCount".
 * \param [out] outscalar_network_mgmt_stream_to_host_rx_framed_FramedStreamPreprocessor_sofCount Output scalar parameter "network_mgmt_stream_to_host_rx_framed_FramedStreamPreprocessor.sofCount".
 * \param [in] instream_network_mgmt_stream_from_host_tx_framed Stream "network_mgmt_stream_from_host_tx_framed".
 * \param [in] instream_size_network_mgmt_stream_from_host_tx_framed The size of the stream instream_network_mgmt_stream_from_host_tx_framed in bytes.
 * \param [out] outstream_network_mgmt_stream_to_host_rx_framed Stream "network_mgmt_stream_to_host_rx_framed".
 * \param [in] outstream_size_network_mgmt_stream_to_host_rx_framed The size of the stream outstream_network_mgmt_stream_to_host_rx_framed in bytes.
 * \return A handle on the execution status, or NULL in case of error.
 */
max_run_t *FieldAccumulator_nonblock(
	uint64_t *outscalar_SlicerFramer_network_mgmt_stream_from_host_tx_framed_eofCount,
	uint64_t *outscalar_SlicerFramer_network_mgmt_stream_from_host_tx_framed_sofCount,
	uint64_t *outscalar_network_mgmt_stream_to_host_rx_framed_FramedStreamPreprocessor_eofCount,
	uint64_t *outscalar_network_mgmt_stream_to_host_rx_framed_FramedStreamPreprocessor_sofCount,
	const void *instream_network_mgmt_stream_from_host_tx_framed,
	size_t instream_size_network_mgmt_stream_from_host_tx_framed,
	void *outstream_network_mgmt_stream_to_host_rx_framed,
	size_t outstream_size_network_mgmt_stream_to_host_rx_framed);

/**
 * \brief Advanced static interface, structure for the engine interface 'default'
 * 
 */
typedef struct { 
	uint64_t *outscalar_SlicerFramer_network_mgmt_stream_from_host_tx_framed_eofCount; /**<  [out] Output scalar parameter "SlicerFramer_network_mgmt_stream_from_host_tx_framed.eofCount". */
	uint64_t *outscalar_SlicerFramer_network_mgmt_stream_from_host_tx_framed_sofCount; /**<  [out] Output scalar parameter "SlicerFramer_network_mgmt_stream_from_host_tx_framed.sofCount". */
	uint64_t *outscalar_network_mgmt_stream_to_host_rx_framed_FramedStreamPreprocessor_eofCount; /**<  [out] Output scalar parameter "network_mgmt_stream_to_host_rx_framed_FramedStreamPreprocessor.eofCount". */
	uint64_t *outscalar_network_mgmt_stream_to_host_rx_framed_FramedStreamPreprocessor_sofCount; /**<  [out] Output scalar parameter "network_mgmt_stream_to_host_rx_framed_FramedStreamPreprocessor.sofCount". */
	const void *instream_network_mgmt_stream_from_host_tx_framed; /**<  [in] Stream "network_mgmt_stream_from_host_tx_framed". */
	size_t instream_size_network_mgmt_stream_from_host_tx_framed; /**<  [in] The size of the stream instream_network_mgmt_stream_from_host_tx_framed in bytes. */
	void *outstream_network_mgmt_stream_to_host_rx_framed; /**<  [out] Stream "network_mgmt_stream_to_host_rx_framed". */
	size_t outstream_size_network_mgmt_stream_to_host_rx_framed; /**<  [in] The size of the stream outstream_network_mgmt_stream_to_host_rx_framed in bytes. */
} FieldAccumulator_actions_t;

/**
 * \brief Advanced static function for the interface 'default'.
 * 
 * \param [in] engine The engine on which the actions will be executed.
 * \param [in,out] interface_actions Actions to be executed.
 */
void FieldAccumulator_run(
	max_engine_t *engine,
	FieldAccumulator_actions_t *interface_actions);

/**
 * \brief Advanced static non-blocking function for the interface 'default'.
 *
 * Schedule the actions to run on the engine and return immediately.
 * The status of the run can be checked either by ::max_wait or ::max_nowait;
 * note that one of these *must* be called, so that associated memory can be released.
 *
 * 
 * \param [in] engine The engine on which the actions will be executed.
 * \param [in] interface_actions Actions to be executed.
 * \return A handle on the execution status of the actions, or NULL in case of error.
 */
max_run_t *FieldAccumulator_run_nonblock(
	max_engine_t *engine,
	FieldAccumulator_actions_t *interface_actions);

/**
 * \brief Group run advanced static function for the interface 'default'.
 * 
 * \param [in] group Group to use.
 * \param [in,out] interface_actions Actions to run.
 *
 * Run the actions on the first device available in the group.
 */
void FieldAccumulator_run_group(max_group_t *group, FieldAccumulator_actions_t *interface_actions);

/**
 * \brief Group run advanced static non-blocking function for the interface 'default'.
 * 
 *
 * Schedule the actions to run on the first device available in the group and return immediately.
 * The status of the run must be checked with ::max_wait. 
 * Note that use of ::max_nowait is prohibited with non-blocking running on groups:
 * see the ::max_run_group_nonblock documentation for more explanation.
 *
 * \param [in] group Group to use.
 * \param [in] interface_actions Actions to run.
 * \return A handle on the execution status of the actions, or NULL in case of error.
 */
max_run_t *FieldAccumulator_run_group_nonblock(max_group_t *group, FieldAccumulator_actions_t *interface_actions);

/**
 * \brief Array run advanced static function for the interface 'default'.
 * 
 * \param [in] engarray The array of devices to use.
 * \param [in,out] interface_actions The array of actions to run.
 *
 * Run the array of actions on the array of engines.  The length of interface_actions
 * must match the size of engarray.
 */
void FieldAccumulator_run_array(max_engarray_t *engarray, FieldAccumulator_actions_t *interface_actions[]);

/**
 * \brief Array run advanced static non-blocking function for the interface 'default'.
 * 
 *
 * Schedule to run the array of actions on the array of engines, and return immediately.
 * The length of interface_actions must match the size of engarray.
 * The status of the run can be checked either by ::max_wait or ::max_nowait;
 * note that one of these *must* be called, so that associated memory can be released.
 *
 * \param [in] engarray The array of devices to use.
 * \param [in] interface_actions The array of actions to run.
 * \return A handle on the execution status of the actions, or NULL in case of error.
 */
max_run_t *FieldAccumulator_run_array_nonblock(max_engarray_t *engarray, FieldAccumulator_actions_t *interface_actions[]);

/**
 * \brief Converts a static-interface action struct into a dynamic-interface max_actions_t struct.
 *
 * Note that this is an internal utility function used by other functions in the static interface.
 *
 * \param [in] maxfile The maxfile to use.
 * \param [in] interface_actions The interface-specific actions to run.
 * \return The dynamic-interface actions to run, or NULL in case of error.
 */
max_actions_t* FieldAccumulator_convert(max_file_t *maxfile, FieldAccumulator_actions_t *interface_actions);

/**
 * \brief Initialise a maxfile.
 */
max_file_t* FieldAccumulator_init(void);

/* Error handling functions */
int FieldAccumulator_has_errors(void);
const char* FieldAccumulator_get_errors(void);
void FieldAccumulator_clear_errors(void);
/* Free statically allocated maxfile data */
void FieldAccumulator_free(void);
/* returns: -1 = error running command; 0 = no error reported */
int FieldAccumulator_simulator_start(void);
/* returns: -1 = error running command; 0 = no error reported */
int FieldAccumulator_simulator_stop(void);

#ifdef __cplusplus
}
#endif /* __cplusplus */
#endif /* SLIC_DECLARATIONS_FieldAccumulator_H */

#endif /* SLIC_NO_DECLARATIONS */

#ifdef PHOTON_NODE_DATA
#define PHOTON_NODE_DATA_PRESENT 1
PHOTON_NODE_DATA(fieldSwapKernel, 23, NodeConstantRawBits, "{HWOffsetFix:1, 0, UNSIGNED}\n0x0; 0.0", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:80)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:148)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:78)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:96)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 24, NodeDisableInput, "disableInput('frameIn')", "com.maxeler.maxcompiler.v2.kernelcompiler.Flush.disableInput(Flush.java:207)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:148)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:78)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:96)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 492, NodeConstantRawBits, "{HWOffsetFix:1, 0, UNSIGNED}\n0x1; 1.0", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.simpleCounter(Count.java:529)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:251)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:190)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 299, NodeConstantRawBits, "{HWOffsetFix:33, 0, UNSIGNED}\n0x100000000; 4.294967296E9", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.simpleCounter(Count.java:529)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:251)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:190)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 300, NodeCounterV1, "Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.simpleCounter(Count.java:529)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:251)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:190)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 491, NodeConstantRawBits, "{HWOffsetFix:32, 0, UNSIGNED}\n0x00000000; 0.0", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.eq(DFEVar.java:589)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:251)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:190)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 302, NodeEq, "==", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.eq(DFEVar.java:589)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:251)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:190)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 305, NodeConstantRawBits, "{HWOffsetFix:1, 0, UNSIGNED}\n0x1; 1.0", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:80)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.oneShotTrigger(FrameIO.java:50)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:287)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:254)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:190)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 306, NodeHold, "Hold", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:715)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.oneShotTrigger(FrameIO.java:49)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:287)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:254)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:190)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 366, NodeConstantRawBits, "{HWOffsetFix:32, 0, UNSIGNED}\n0x000003c0; 960.0", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:883)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.makeBusOutput(SourcelessOutputManager.maxj:627)\ncom.maxeler.networking.v1.framed_kernels.FrameData.getBusOutput(FrameData.maxj:221)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:294)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:254)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:190)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 307, NodeStateMachine, "State Machine (outputSM_frameOut)", "com.maxeler.maxcompiler.v2.kernelcompiler.KernelLib.addStateMachine(KernelLib.java:493)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.makeBusOutput(SourcelessOutputManager.maxj:600)\ncom.maxeler.networking.v1.framed_kernels.FrameData.getBusOutput(FrameData.maxj:221)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:294)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:254)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:190)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 341, NodeAnd, "&", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.and(DFEVar.java:522)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:315)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:254)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:190)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 342, NodeInputMappedReg, "Scalar input (io_frameOut_force_disabled)", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.output(IO.java:723)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:315)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:254)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:190)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 343, NodeNot, "~", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.output(IO.java:723)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:315)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:254)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:190)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 344, NodeAnd, "&", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.output(IO.java:723)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:315)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:254)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:190)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 470, NodeFIFO, "FIFO(8)", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 367, NodeConstantRawBits, "{HWOffsetFix:1, 0, UNSIGNED}\n0x1; 1.0", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.and(DFEVar.java:522)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:125)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:78)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:96)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 4, NodeConstantRawBits, "{HWOffsetFix:1, 0, UNSIGNED}\n0x1; 1.0", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:80)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.oneShotTrigger(FrameIO.java:50)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:125)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:78)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:96)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 5, NodeHold, "Hold", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:715)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.oneShotTrigger(FrameIO.java:49)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:125)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:78)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:96)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 6, NodePulse, "pulse(3)", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.pulse(Count.java:728)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.inputEnableForStaticFrame(FrameIO.java:218)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:138)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:78)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:96)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 7, NodeAnd, "&", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.and(DFEVar.java:522)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:143)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:78)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:96)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 8, NodeInputMappedReg, "Scalar input (io_frameIn_force_disabled)", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:145)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:78)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:96)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 9, NodeNot, "~", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:145)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:78)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:96)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 10, NodeAnd, "&", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:145)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:78)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:96)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 11, NodeInput, "Input(frameIn)", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:145)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:78)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:96)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 21, NodeSlice, "[77:70]", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:145)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:78)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:96)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 22, NodeReinterpret, "<{HWOffsetFix:8, 0, UNSIGNED}>", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:145)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:78)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:96)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 353, NodeReinterpret, "<{HWRawBits:8}>", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.output(IO.java:723)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:315)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:254)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:190)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 469, NodeFIFO, "FIFO(11)", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 336, NodeReinterpret, "<{HWRawBits:1}>", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.pack(DFEVar.java:1320)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.forceConnect(FrameIO.java:223)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:304)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:254)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:190)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 337, NodeReinterpret, "<{HWOffsetFix:1, 0, UNSIGNED}>", "com.maxeler.maxcompiler.v2.kernelcompiler.types.KernelType.unpack(KernelType.java:62)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.forceConnect(FrameIO.java:223)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:304)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:254)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:190)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 351, NodeReinterpret, "<{HWRawBits:1}>", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.output(IO.java:723)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:315)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:254)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:190)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 468, NodeFIFO, "FIFO(9)", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 334, NodeReinterpret, "<{HWRawBits:1}>", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.pack(DFEVar.java:1320)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.forceConnect(FrameIO.java:223)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:301)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:254)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:190)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 335, NodeReinterpret, "<{HWOffsetFix:1, 0, UNSIGNED}>", "com.maxeler.maxcompiler.v2.kernelcompiler.types.KernelType.unpack(KernelType.java:62)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.forceConnect(FrameIO.java:223)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:301)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:254)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:190)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 349, NodeReinterpret, "<{HWRawBits:1}>", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.output(IO.java:723)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:315)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:254)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:190)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 467, NodeFIFO, "FIFO(9)", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 339, NodeReinterpret, "<{HWRawBits:3}>", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.pack(DFEVar.java:1320)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.forceConnect(FrameIO.java:223)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:309)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:254)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:190)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 340, NodeReinterpret, "<{HWOffsetFix:3, 0, UNSIGNED}>", "com.maxeler.maxcompiler.v2.kernelcompiler.types.KernelType.unpack(KernelType.java:62)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.forceConnect(FrameIO.java:223)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:309)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:254)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:190)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 347, NodeReinterpret, "<{HWRawBits:3}>", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.output(IO.java:723)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:315)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:254)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:190)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 466, NodeFIFO, "FIFO(9)", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 465, NodeFIFO, "FIFO(8)", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 464, NodeFIFO, "FIFO(7)", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 329, NodeStreamOffset, "stream offset: -1", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.makeBusOutput(SourcelessOutputManager.maxj:692)\ncom.maxeler.networking.v1.framed_kernels.FrameData.getBusOutput(FrameData.maxj:221)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:294)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:254)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:190)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 315, NodeCast, "{HWOffsetFix:1, 0, TWOSCOMPLEMENT}", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:165)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.makeBusOutput(SourcelessOutputManager.maxj:675)\ncom.maxeler.networking.v1.framed_kernels.FrameData.getBusOutput(FrameData.maxj:221)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:294)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:254)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:190)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 424, NodeFIFO, "FIFO(7)", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 422, NodeReinterpret, "<{HWRawBits:1}>", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 317, NodeCat, "@", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Bitops.padSignExtend(Bitops.java:195)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.makeBusOutput(SourcelessOutputManager.maxj:675)\ncom.maxeler.networking.v1.framed_kernels.FrameData.getBusOutput(FrameData.maxj:221)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:294)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:254)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:190)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 318, NodeCat, "@", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Bitops.padSignExtend(Bitops.java:195)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.makeBusOutput(SourcelessOutputManager.maxj:675)\ncom.maxeler.networking.v1.framed_kernels.FrameData.getBusOutput(FrameData.maxj:221)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:294)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:254)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:190)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 319, NodeReinterpret, "<{HWOffsetFix:64, 0, TWOSCOMPLEMENT}>", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Bitops.padSignExtend(Bitops.java:195)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.makeBusOutput(SourcelessOutputManager.maxj:675)\ncom.maxeler.networking.v1.framed_kernels.FrameData.getBusOutput(FrameData.maxj:221)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:294)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:254)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:190)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 320, NodeCast, "{HWOffsetFix:1, 0, TWOSCOMPLEMENT}", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:165)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.makeBusOutput(SourcelessOutputManager.maxj:676)\ncom.maxeler.networking.v1.framed_kernels.FrameData.getBusOutput(FrameData.maxj:221)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:294)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:254)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:190)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 426, NodeFIFO, "FIFO(7)", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 423, NodeReinterpret, "<{HWRawBits:1}>", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 322, NodeCat, "@", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Bitops.padSignExtend(Bitops.java:195)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.makeBusOutput(SourcelessOutputManager.maxj:676)\ncom.maxeler.networking.v1.framed_kernels.FrameData.getBusOutput(FrameData.maxj:221)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:294)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:254)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:190)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 323, NodeCat, "@", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Bitops.padSignExtend(Bitops.java:195)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.makeBusOutput(SourcelessOutputManager.maxj:676)\ncom.maxeler.networking.v1.framed_kernels.FrameData.getBusOutput(FrameData.maxj:221)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:294)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:254)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:190)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 324, NodeReinterpret, "<{HWOffsetFix:64, 0, TWOSCOMPLEMENT}>", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Bitops.padSignExtend(Bitops.java:195)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.makeBusOutput(SourcelessOutputManager.maxj:676)\ncom.maxeler.networking.v1.framed_kernels.FrameData.getBusOutput(FrameData.maxj:221)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:294)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:254)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:190)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 325, NodeCat, "@", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:188)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.makeBusOutput(SourcelessOutputManager.maxj:675)\ncom.maxeler.networking.v1.framed_kernels.FrameData.getBusOutput(FrameData.maxj:221)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:294)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:254)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:190)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 326, NodeAnd, "&", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.and(DFEVar.java:522)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.makeBusOutput(SourcelessOutputManager.maxj:681)\ncom.maxeler.networking.v1.framed_kernels.FrameData.getBusOutput(FrameData.maxj:221)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:294)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:254)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:190)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 312, NodeConstantRawBits, "{HWRawBits:64}\n0x0000000000000000", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.zero(Constant.java:484)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.makeBusOutput(SourcelessOutputManager.maxj:670)\ncom.maxeler.networking.v1.framed_kernels.FrameData.getBusOutput(FrameData.maxj:221)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:294)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:254)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:190)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 460, NodeFIFO, "FIFO(2)", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 370, NodeConstantRawBits, "{HWRawBits:32}\n0x00000000", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Bitops.concat(Bitops.java:158)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.commitStaticFragmentsToBus(SourcelessOutputManager.maxj:412)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.addStaticField(SourcelessOutputManager.maxj:570)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:205)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:155)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:150)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 373, NodeConstantRawBits, "{HWRawBits:32}\n0x00000000", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Bitops.concat(Bitops.java:158)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.commitStaticFragmentsToBus(SourcelessOutputManager.maxj:412)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.addStaticField(SourcelessOutputManager.maxj:570)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:205)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:155)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:150)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 153, NodeCat, "@", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Bitops.concat(Bitops.java:158)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.commitStaticFragmentsToBus(SourcelessOutputManager.maxj:412)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.addStaticField(SourcelessOutputManager.maxj:570)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:205)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:155)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:150)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 490, NodeConstantRawBits, "{HWOffsetFix:1, 0, UNSIGNED}\n0x1; 1.0", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:388)\ncom.maxeler.networking.v1.framed_kernels.FrameData.holdFirstValue(FrameData.maxj:361)\ncom.maxeler.networking.v1.framed_kernels.FrameData.makeStaticFieldStream(FrameData.maxj:619)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:655)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:155)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:78)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:96)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 489, NodeConstantRawBits, "{HWOffsetFix:2, 0, UNSIGNED}\n0x1; 1.0", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:388)\ncom.maxeler.networking.v1.framed_kernels.FrameData.holdFirstValue(FrameData.maxj:361)\ncom.maxeler.networking.v1.framed_kernels.FrameData.makeStaticFieldStream(FrameData.maxj:619)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:655)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:155)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:78)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:96)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 34, NodeCounterV1, "Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:388)\ncom.maxeler.networking.v1.framed_kernels.FrameData.holdFirstValue(FrameData.maxj:361)\ncom.maxeler.networking.v1.framed_kernels.FrameData.makeStaticFieldStream(FrameData.maxj:619)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:655)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:155)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:78)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:96)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 35, NodeNot, "~", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.complement(DFEVar.java:1052)\ncom.maxeler.networking.v1.framed_kernels.FrameData.holdFirstValue(FrameData.maxj:367)\ncom.maxeler.networking.v1.framed_kernels.FrameData.makeStaticFieldStream(FrameData.maxj:619)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:655)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:155)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:78)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:96)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 12, NodeSlice, "[63:0]", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:145)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:78)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:96)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 30, NodeSlice, "[31:0]", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:322)\ncom.maxeler.networking.v1.framed_kernels.FrameData.busSlice(FrameData.maxj:580)\ncom.maxeler.networking.v1.framed_kernels.FrameData.makeStaticFieldStream(FrameData.maxj:606)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:655)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:155)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:78)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:96)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 36, NodeHold, "Hold", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:641)\ncom.maxeler.networking.v1.framed_kernels.FrameData.holdFirstValue(FrameData.maxj:370)\ncom.maxeler.networking.v1.framed_kernels.FrameData.makeStaticFieldStream(FrameData.maxj:619)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:655)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:155)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:78)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:96)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 37, NodeReinterpret, "<{HWOffsetFix:32, 0, TWOSCOMPLEMENT}>", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:156)\ncom.maxeler.networking.v1.framed_kernels.FrameData.makeStaticFieldStream(FrameData.maxj:626)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:655)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:155)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:78)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:96)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 76, NodeConstantRawBits, "{HWOffsetFix:32, 0, TWOSCOMPLEMENT}\n0x00000000; 0.0", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:99)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:101)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 77, NodeEq, "==", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.eq(DFEVar.java:577)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:101)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 488, NodeConstantRawBits, "{HWOffsetFix:1, 0, UNSIGNED}\n0x1; 1.0", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:388)\ncom.maxeler.networking.v1.framed_kernels.FrameData.holdFirstValue(FrameData.maxj:361)\ncom.maxeler.networking.v1.framed_kernels.FrameData.makeStaticFieldStream(FrameData.maxj:619)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:655)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:155)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:78)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:96)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 487, NodeConstantRawBits, "{HWOffsetFix:2, 0, UNSIGNED}\n0x1; 1.0", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:388)\ncom.maxeler.networking.v1.framed_kernels.FrameData.holdFirstValue(FrameData.maxj:361)\ncom.maxeler.networking.v1.framed_kernels.FrameData.makeStaticFieldStream(FrameData.maxj:619)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:655)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:155)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:78)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:96)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 42, NodeCounterV1, "Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:388)\ncom.maxeler.networking.v1.framed_kernels.FrameData.holdFirstValue(FrameData.maxj:361)\ncom.maxeler.networking.v1.framed_kernels.FrameData.makeStaticFieldStream(FrameData.maxj:619)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:655)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:155)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:78)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:96)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 43, NodeNot, "~", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.complement(DFEVar.java:1052)\ncom.maxeler.networking.v1.framed_kernels.FrameData.holdFirstValue(FrameData.maxj:367)\ncom.maxeler.networking.v1.framed_kernels.FrameData.makeStaticFieldStream(FrameData.maxj:619)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:655)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:155)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:78)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:96)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 38, NodeSlice, "[63:32]", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:322)\ncom.maxeler.networking.v1.framed_kernels.FrameData.busSlice(FrameData.maxj:580)\ncom.maxeler.networking.v1.framed_kernels.FrameData.makeStaticFieldStream(FrameData.maxj:606)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:655)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:155)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:78)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:96)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 44, NodeHold, "Hold", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:641)\ncom.maxeler.networking.v1.framed_kernels.FrameData.holdFirstValue(FrameData.maxj:370)\ncom.maxeler.networking.v1.framed_kernels.FrameData.makeStaticFieldStream(FrameData.maxj:619)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:655)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:155)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:78)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:96)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 45, NodeReinterpret, "<{HWOffsetFix:32, 0, TWOSCOMPLEMENT}>", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:156)\ncom.maxeler.networking.v1.framed_kernels.FrameData.makeStaticFieldStream(FrameData.maxj:626)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:655)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:155)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:78)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:96)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 78, NodeConstantRawBits, "{HWOffsetFix:32, 0, TWOSCOMPLEMENT}\n0x00000000; 0.0", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:99)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:102)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 79, NodeEq, "==", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.eq(DFEVar.java:577)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:102)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 80, NodeAnd, "&", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.and(DFEVar.java:522)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:101)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 486, NodeConstantRawBits, "{HWOffsetFix:1, 0, UNSIGNED}\n0x1; 1.0", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:388)\ncom.maxeler.networking.v1.framed_kernels.FrameData.holdFirstValue(FrameData.maxj:361)\ncom.maxeler.networking.v1.framed_kernels.FrameData.makeStaticFieldStream(FrameData.maxj:619)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:655)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:155)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:78)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:96)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 485, NodeConstantRawBits, "{HWOffsetFix:2, 0, UNSIGNED}\n0x1; 1.0", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:388)\ncom.maxeler.networking.v1.framed_kernels.FrameData.holdFirstValue(FrameData.maxj:361)\ncom.maxeler.networking.v1.framed_kernels.FrameData.makeStaticFieldStream(FrameData.maxj:619)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:655)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:155)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:78)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:96)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 50, NodeCounterV1, "Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:388)\ncom.maxeler.networking.v1.framed_kernels.FrameData.holdFirstValue(FrameData.maxj:361)\ncom.maxeler.networking.v1.framed_kernels.FrameData.makeStaticFieldStream(FrameData.maxj:619)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:655)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:155)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:78)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:96)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 51, NodeNot, "~", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.complement(DFEVar.java:1052)\ncom.maxeler.networking.v1.framed_kernels.FrameData.holdFirstValue(FrameData.maxj:367)\ncom.maxeler.networking.v1.framed_kernels.FrameData.makeStaticFieldStream(FrameData.maxj:619)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:655)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:155)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:78)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:96)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 46, NodeSlice, "[31:0]", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:322)\ncom.maxeler.networking.v1.framed_kernels.FrameData.busSlice(FrameData.maxj:580)\ncom.maxeler.networking.v1.framed_kernels.FrameData.makeStaticFieldStream(FrameData.maxj:606)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:655)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:155)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:78)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:96)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 47, NodeStreamOffset, "stream offset: 1", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)\ncom.maxeler.networking.v1.framed_kernels.FrameData.makeStaticFieldStream(FrameData.maxj:605)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:655)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:155)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:78)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:96)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 52, NodeHold, "Hold", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:641)\ncom.maxeler.networking.v1.framed_kernels.FrameData.holdFirstValue(FrameData.maxj:370)\ncom.maxeler.networking.v1.framed_kernels.FrameData.makeStaticFieldStream(FrameData.maxj:619)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:655)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:155)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:78)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:96)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 53, NodeReinterpret, "<{HWOffsetFix:32, 0, TWOSCOMPLEMENT}>", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:156)\ncom.maxeler.networking.v1.framed_kernels.FrameData.makeStaticFieldStream(FrameData.maxj:626)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:655)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:155)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:78)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:96)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 81, NodeConstantRawBits, "{HWOffsetFix:32, 0, TWOSCOMPLEMENT}\n0x00000000; 0.0", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:99)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:103)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 82, NodeEq, "==", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.eq(DFEVar.java:577)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:103)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 83, NodeAnd, "&", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.and(DFEVar.java:522)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:101)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 484, NodeConstantRawBits, "{HWOffsetFix:1, 0, UNSIGNED}\n0x1; 1.0", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:388)\ncom.maxeler.networking.v1.framed_kernels.FrameData.holdFirstValue(FrameData.maxj:361)\ncom.maxeler.networking.v1.framed_kernels.FrameData.makeStaticFieldStream(FrameData.maxj:619)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:655)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:155)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:78)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:96)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 483, NodeConstantRawBits, "{HWOffsetFix:2, 0, UNSIGNED}\n0x1; 1.0", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:388)\ncom.maxeler.networking.v1.framed_kernels.FrameData.holdFirstValue(FrameData.maxj:361)\ncom.maxeler.networking.v1.framed_kernels.FrameData.makeStaticFieldStream(FrameData.maxj:619)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:655)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:155)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:78)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:96)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 58, NodeCounterV1, "Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:388)\ncom.maxeler.networking.v1.framed_kernels.FrameData.holdFirstValue(FrameData.maxj:361)\ncom.maxeler.networking.v1.framed_kernels.FrameData.makeStaticFieldStream(FrameData.maxj:619)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:655)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:155)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:78)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:96)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 59, NodeNot, "~", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.complement(DFEVar.java:1052)\ncom.maxeler.networking.v1.framed_kernels.FrameData.holdFirstValue(FrameData.maxj:367)\ncom.maxeler.networking.v1.framed_kernels.FrameData.makeStaticFieldStream(FrameData.maxj:619)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:655)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:155)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:78)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:96)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 54, NodeSlice, "[63:32]", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:322)\ncom.maxeler.networking.v1.framed_kernels.FrameData.busSlice(FrameData.maxj:580)\ncom.maxeler.networking.v1.framed_kernels.FrameData.makeStaticFieldStream(FrameData.maxj:606)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:655)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:155)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:78)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:96)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 55, NodeStreamOffset, "stream offset: 1", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)\ncom.maxeler.networking.v1.framed_kernels.FrameData.makeStaticFieldStream(FrameData.maxj:605)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:655)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:155)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:78)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:96)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 60, NodeHold, "Hold", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:641)\ncom.maxeler.networking.v1.framed_kernels.FrameData.holdFirstValue(FrameData.maxj:370)\ncom.maxeler.networking.v1.framed_kernels.FrameData.makeStaticFieldStream(FrameData.maxj:619)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:655)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:155)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:78)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:96)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 428, NodeFIFO, "FIFO(2)", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 61, NodeReinterpret, "<{HWOffsetFix:32, 0, TWOSCOMPLEMENT}>", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:156)\ncom.maxeler.networking.v1.framed_kernels.FrameData.makeStaticFieldStream(FrameData.maxj:626)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:655)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:155)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:78)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:96)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 125, NodeHold, "Hold", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:641)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:127)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 157, NodeReinterpret, "<{HWRawBits:32}>", "com.maxeler.maxcompiler.v2.kernelcompiler.types.composite.DFEVectorBase.pack(DFEVectorBase.java:216)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.addStaticField(SourcelessOutputManager.maxj:552)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:205)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:155)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:150)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 159, NodeStreamOffset, "stream offset: -1", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.streamOffsetForCycle(SourcelessOutputManager.maxj:450)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.addStaticField(SourcelessOutputManager.maxj:561)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:205)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:155)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:150)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 376, NodeConstantRawBits, "{HWRawBits:32}\n0x00000000", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Bitops.concat(Bitops.java:158)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.commitStaticFragmentsToBus(SourcelessOutputManager.maxj:412)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.addStaticField(SourcelessOutputManager.maxj:570)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:205)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:155)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:150)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 162, NodeCat, "@", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Bitops.concat(Bitops.java:158)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.commitStaticFragmentsToBus(SourcelessOutputManager.maxj:412)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.addStaticField(SourcelessOutputManager.maxj:570)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:205)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:155)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:150)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 379, NodeConstantRawBits, "{HWRawBits:32}\n0x00000000", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Bitops.concat(Bitops.java:158)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.commitStaticFragmentsToBus(SourcelessOutputManager.maxj:412)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.addStaticField(SourcelessOutputManager.maxj:570)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:205)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:155)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:150)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 430, NodeFIFO, "FIFO(1)", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 482, NodeConstantRawBits, "{HWOffsetFix:1, 0, UNSIGNED}\n0x1; 1.0", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:388)\ncom.maxeler.networking.v1.framed_kernels.FrameData.holdFirstValue(FrameData.maxj:361)\ncom.maxeler.networking.v1.framed_kernels.FrameData.makeStaticFieldStream(FrameData.maxj:619)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:655)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:155)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:78)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:96)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 481, NodeConstantRawBits, "{HWOffsetFix:2, 0, UNSIGNED}\n0x1; 1.0", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:388)\ncom.maxeler.networking.v1.framed_kernels.FrameData.holdFirstValue(FrameData.maxj:361)\ncom.maxeler.networking.v1.framed_kernels.FrameData.makeStaticFieldStream(FrameData.maxj:619)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:655)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:155)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:78)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:96)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 66, NodeCounterV1, "Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:388)\ncom.maxeler.networking.v1.framed_kernels.FrameData.holdFirstValue(FrameData.maxj:361)\ncom.maxeler.networking.v1.framed_kernels.FrameData.makeStaticFieldStream(FrameData.maxj:619)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:655)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:155)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:78)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:96)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 67, NodeNot, "~", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.complement(DFEVar.java:1052)\ncom.maxeler.networking.v1.framed_kernels.FrameData.holdFirstValue(FrameData.maxj:367)\ncom.maxeler.networking.v1.framed_kernels.FrameData.makeStaticFieldStream(FrameData.maxj:619)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:655)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:155)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:78)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:96)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 62, NodeSlice, "[31:0]", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:322)\ncom.maxeler.networking.v1.framed_kernels.FrameData.busSlice(FrameData.maxj:580)\ncom.maxeler.networking.v1.framed_kernels.FrameData.makeStaticFieldStream(FrameData.maxj:606)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:655)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:155)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:78)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:96)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 63, NodeStreamOffset, "stream offset: 2", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)\ncom.maxeler.networking.v1.framed_kernels.FrameData.makeStaticFieldStream(FrameData.maxj:605)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:655)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:155)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:78)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:96)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 68, NodeHold, "Hold", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:641)\ncom.maxeler.networking.v1.framed_kernels.FrameData.holdFirstValue(FrameData.maxj:370)\ncom.maxeler.networking.v1.framed_kernels.FrameData.makeStaticFieldStream(FrameData.maxj:619)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:655)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:155)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:78)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:96)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 429, NodeFIFO, "FIFO(2)", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 69, NodeReinterpret, "<{HWOffsetFix:32, 0, TWOSCOMPLEMENT}>", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:156)\ncom.maxeler.networking.v1.framed_kernels.FrameData.makeStaticFieldStream(FrameData.maxj:626)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:655)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:155)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:78)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:96)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 124, NodeHold, "Hold", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:641)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:126)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 163, NodeReinterpret, "<{HWRawBits:32}>", "com.maxeler.maxcompiler.v2.kernelcompiler.types.composite.DFEVectorBase.pack(DFEVectorBase.java:216)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.addStaticField(SourcelessOutputManager.maxj:552)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:205)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:155)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:150)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 165, NodeStreamOffset, "stream offset: -2", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.streamOffsetForCycle(SourcelessOutputManager.maxj:450)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.addStaticField(SourcelessOutputManager.maxj:561)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:205)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:155)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:150)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 171, NodeCat, "@", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Bitops.concat(Bitops.java:158)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.commitStaticFragmentsToBus(SourcelessOutputManager.maxj:412)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.addStaticField(SourcelessOutputManager.maxj:570)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:205)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:155)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:150)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 382, NodeConstantRawBits, "{HWRawBits:32}\n0x00000000", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Bitops.concat(Bitops.java:158)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.commitStaticFragmentsToBus(SourcelessOutputManager.maxj:412)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.addStaticField(SourcelessOutputManager.maxj:570)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:205)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:155)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:150)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 385, NodeConstantRawBits, "{HWRawBits:32}\n0x00000000", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Bitops.concat(Bitops.java:158)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.commitStaticFragmentsToBus(SourcelessOutputManager.maxj:412)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.addStaticField(SourcelessOutputManager.maxj:570)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:205)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:155)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:150)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 180, NodeCat, "@", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Bitops.concat(Bitops.java:158)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.commitStaticFragmentsToBus(SourcelessOutputManager.maxj:412)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.addStaticField(SourcelessOutputManager.maxj:570)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:205)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:155)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:150)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 92, NodeConstantRawBits, "{HWOffsetFix:32, 0, TWOSCOMPLEMENT}\n0x00000002; 2.0", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:99)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:109)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 93, NodeEq, "==", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.eq(DFEVar.java:577)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:109)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 94, NodeConstantRawBits, "{HWOffsetFix:32, 0, TWOSCOMPLEMENT}\n0x00000000; 0.0", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:99)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:110)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 95, NodeEq, "==", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.eq(DFEVar.java:577)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:110)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 96, NodeAnd, "&", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.and(DFEVar.java:522)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:109)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 97, NodeConstantRawBits, "{HWOffsetFix:32, 0, TWOSCOMPLEMENT}\n0x00000000; 0.0", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:99)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:111)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 98, NodeEq, "==", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.eq(DFEVar.java:577)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:111)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 99, NodeAnd, "&", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.and(DFEVar.java:522)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:109)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 435, NodeFIFO, "FIFO(1)", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 474, NodeFIFO, "FIFO(1)", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 432, NodeFIFO, "FIFO(1)", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 128, NodeHold, "Hold", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:641)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:130)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 108, NodeConstantRawBits, "{HWOffsetFix:32, 0, TWOSCOMPLEMENT}\n0x00000001; 1.0", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:99)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:117)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 109, NodeEq, "==", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.eq(DFEVar.java:577)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:117)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 110, NodeConstantRawBits, "{HWOffsetFix:32, 0, TWOSCOMPLEMENT}\n0x00000000; 0.0", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:99)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:118)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 111, NodeEq, "==", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.eq(DFEVar.java:577)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:118)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 112, NodeAnd, "&", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.and(DFEVar.java:522)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:117)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 113, NodeConstantRawBits, "{HWOffsetFix:32, 0, TWOSCOMPLEMENT}\n0x00000001; 1.0", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:99)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:119)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 114, NodeEq, "==", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.eq(DFEVar.java:577)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:119)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 115, NodeAnd, "&", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.and(DFEVar.java:522)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:117)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 437, NodeFIFO, "FIFO(1)", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 475, NodeFIFO, "FIFO(1)", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 132, NodeHold, "Hold", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:641)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:134)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 138, NodeAdd, "+", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:868)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:143)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 184, NodeReinterpret, "<{HWRawBits:32}>", "com.maxeler.maxcompiler.v2.kernelcompiler.types.composite.DFEVectorBase.pack(DFEVectorBase.java:216)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.addStaticField(SourcelessOutputManager.maxj:552)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:205)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:155)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:150)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 186, NodeStreamOffset, "stream offset: -4", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.streamOffsetForCycle(SourcelessOutputManager.maxj:450)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.addStaticField(SourcelessOutputManager.maxj:561)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:205)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:155)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:150)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 436, NodeFIFO, "FIFO(1)", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 129, NodeHold, "Hold", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:641)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:131)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 133, NodeHold, "Hold", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:641)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:135)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 136, NodeLt, "<", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.lt(DFEVar.java:822)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:142)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 439, NodeFIFO, "FIFO(1)", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 440, NodeFIFO, "FIFO(1)", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 137, NodeMux, "MUX", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1152)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:142)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 181, NodeReinterpret, "<{HWRawBits:32}>", "com.maxeler.maxcompiler.v2.kernelcompiler.types.composite.DFEVectorBase.pack(DFEVectorBase.java:216)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.addStaticField(SourcelessOutputManager.maxj:552)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:205)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:155)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:150)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 183, NodeStreamOffset, "stream offset: -4", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.streamOffsetForCycle(SourcelessOutputManager.maxj:450)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.addStaticField(SourcelessOutputManager.maxj:561)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:205)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:155)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:150)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 189, NodeCat, "@", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Bitops.concat(Bitops.java:158)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.commitStaticFragmentsToBus(SourcelessOutputManager.maxj:412)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.addStaticField(SourcelessOutputManager.maxj:570)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:205)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:155)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:150)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 388, NodeConstantRawBits, "{HWRawBits:32}\n0x00000000", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Bitops.concat(Bitops.java:158)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.commitStaticFragmentsToBus(SourcelessOutputManager.maxj:412)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.addStaticField(SourcelessOutputManager.maxj:570)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:205)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:155)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:150)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 391, NodeConstantRawBits, "{HWRawBits:32}\n0x00000001", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Bitops.concat(Bitops.java:158)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.commitStaticFragmentsToBus(SourcelessOutputManager.maxj:412)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.addStaticField(SourcelessOutputManager.maxj:570)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:205)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:155)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:150)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 198, NodeCat, "@", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Bitops.concat(Bitops.java:158)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.commitStaticFragmentsToBus(SourcelessOutputManager.maxj:412)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.addStaticField(SourcelessOutputManager.maxj:570)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:205)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:155)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:150)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 478, NodeFIFO, "FIFO(2)", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 479, NodeFIFO, "FIFO(1)", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 202, NodeReinterpret, "<{HWRawBits:32}>", "com.maxeler.maxcompiler.v2.kernelcompiler.types.composite.DFEVectorBase.pack(DFEVectorBase.java:216)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.addStaticField(SourcelessOutputManager.maxj:552)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:205)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:155)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:150)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 204, NodeStreamOffset, "stream offset: -6", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.streamOffsetForCycle(SourcelessOutputManager.maxj:450)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.addStaticField(SourcelessOutputManager.maxj:561)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:205)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:155)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:150)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 394, NodeConstantRawBits, "{HWRawBits:32}\n0x00000001", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Bitops.concat(Bitops.java:158)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.commitStaticFragmentsToBus(SourcelessOutputManager.maxj:412)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.addStaticField(SourcelessOutputManager.maxj:570)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:205)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:155)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:150)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 207, NodeCat, "@", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Bitops.concat(Bitops.java:158)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.commitStaticFragmentsToBus(SourcelessOutputManager.maxj:412)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.addStaticField(SourcelessOutputManager.maxj:570)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:205)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:155)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:150)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 397, NodeConstantRawBits, "{HWRawBits:32}\n0x00000001", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Bitops.concat(Bitops.java:158)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.commitStaticFragmentsToBus(SourcelessOutputManager.maxj:412)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.addStaticField(SourcelessOutputManager.maxj:570)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:205)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:155)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:150)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 454, NodeFIFO, "FIFO(4)", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 208, NodeReinterpret, "<{HWRawBits:32}>", "com.maxeler.maxcompiler.v2.kernelcompiler.types.composite.DFEVectorBase.pack(DFEVectorBase.java:216)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.addStaticField(SourcelessOutputManager.maxj:552)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:205)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:155)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:150)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 210, NodeStreamOffset, "stream offset: -7", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.streamOffsetForCycle(SourcelessOutputManager.maxj:450)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.addStaticField(SourcelessOutputManager.maxj:561)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:205)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:155)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:150)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 216, NodeCat, "@", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Bitops.concat(Bitops.java:158)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.commitStaticFragmentsToBus(SourcelessOutputManager.maxj:412)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.addStaticField(SourcelessOutputManager.maxj:570)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:205)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:155)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:150)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 400, NodeConstantRawBits, "{HWRawBits:32}\n0x00000001", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Bitops.concat(Bitops.java:158)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.commitStaticFragmentsToBus(SourcelessOutputManager.maxj:412)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.addStaticField(SourcelessOutputManager.maxj:570)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:205)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:155)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:150)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 403, NodeConstantRawBits, "{HWRawBits:32}\n0x00000000", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Bitops.concat(Bitops.java:158)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.commitStaticFragmentsToBus(SourcelessOutputManager.maxj:412)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.addStaticField(SourcelessOutputManager.maxj:570)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:205)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:155)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:150)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 225, NodeCat, "@", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Bitops.concat(Bitops.java:158)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.commitStaticFragmentsToBus(SourcelessOutputManager.maxj:412)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.addStaticField(SourcelessOutputManager.maxj:570)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:205)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:155)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:150)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 443, NodeFIFO, "FIFO(5)", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 444, NodeFIFO, "FIFO(4)", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 141, NodeSub, "-", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:914)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:145)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 229, NodeReinterpret, "<{HWRawBits:32}>", "com.maxeler.maxcompiler.v2.kernelcompiler.types.composite.DFEVectorBase.pack(DFEVectorBase.java:216)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.addStaticField(SourcelessOutputManager.maxj:552)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:205)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:155)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:150)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 231, NodeStreamOffset, "stream offset: -9", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.streamOffsetForCycle(SourcelessOutputManager.maxj:450)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.addStaticField(SourcelessOutputManager.maxj:561)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:205)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:155)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:150)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 455, NodeFIFO, "FIFO(4)", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 472, NodeFIFO, "FIFO(1)", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 476, NodeFIFO, "FIFO(3)", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 139, NodeLt, "<", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.lt(DFEVar.java:822)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:144)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 477, NodeFIFO, "FIFO(1)", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 473, NodeFIFO, "FIFO(1)", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 140, NodeMux, "MUX", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1152)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:144)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 226, NodeReinterpret, "<{HWRawBits:32}>", "com.maxeler.maxcompiler.v2.kernelcompiler.types.composite.DFEVectorBase.pack(DFEVectorBase.java:216)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.addStaticField(SourcelessOutputManager.maxj:552)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:205)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:155)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:150)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 228, NodeStreamOffset, "stream offset: -9", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.streamOffsetForCycle(SourcelessOutputManager.maxj:450)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.addStaticField(SourcelessOutputManager.maxj:561)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:205)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:155)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:150)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 234, NodeCat, "@", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Bitops.concat(Bitops.java:158)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.commitStaticFragmentsToBus(SourcelessOutputManager.maxj:412)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.addStaticField(SourcelessOutputManager.maxj:570)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:205)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:155)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:150)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 461, NodeFIFO, "FIFO(1)", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 406, NodeConstantRawBits, "{HWRawBits:32}\n0x00000000", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Bitops.concat(Bitops.java:158)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.commitStaticFragmentsToBus(SourcelessOutputManager.maxj:412)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.addStaticField(SourcelessOutputManager.maxj:570)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:205)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:155)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:150)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 409, NodeConstantRawBits, "{HWRawBits:32}\n0x00000002", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Bitops.concat(Bitops.java:158)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.commitStaticFragmentsToBus(SourcelessOutputManager.maxj:412)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.addStaticField(SourcelessOutputManager.maxj:570)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:205)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:155)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:150)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 243, NodeCat, "@", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Bitops.concat(Bitops.java:158)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.commitStaticFragmentsToBus(SourcelessOutputManager.maxj:412)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.addStaticField(SourcelessOutputManager.maxj:570)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:205)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:155)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:150)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 247, NodeReinterpret, "<{HWRawBits:32}>", "com.maxeler.maxcompiler.v2.kernelcompiler.types.composite.DFEVectorBase.pack(DFEVectorBase.java:216)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.addStaticField(SourcelessOutputManager.maxj:552)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:205)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:155)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:150)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 249, NodeStreamOffset, "stream offset: -11", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.streamOffsetForCycle(SourcelessOutputManager.maxj:450)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.addStaticField(SourcelessOutputManager.maxj:561)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:205)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:155)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:150)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 450, NodeFIFO, "FIFO(4)", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 412, NodeConstantRawBits, "{HWRawBits:32}\n0x00000000", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Bitops.concat(Bitops.java:158)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.commitStaticFragmentsToBus(SourcelessOutputManager.maxj:412)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.addStaticField(SourcelessOutputManager.maxj:570)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:205)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:155)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:150)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 252, NodeCat, "@", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Bitops.concat(Bitops.java:158)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.commitStaticFragmentsToBus(SourcelessOutputManager.maxj:412)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.addStaticField(SourcelessOutputManager.maxj:570)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:205)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:155)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:150)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 415, NodeConstantRawBits, "{HWRawBits:32}\n0x00000002", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Bitops.concat(Bitops.java:158)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.commitStaticFragmentsToBus(SourcelessOutputManager.maxj:412)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.addStaticField(SourcelessOutputManager.maxj:570)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:205)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:155)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:150)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 253, NodeReinterpret, "<{HWRawBits:32}>", "com.maxeler.maxcompiler.v2.kernelcompiler.types.composite.DFEVectorBase.pack(DFEVectorBase.java:216)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.addStaticField(SourcelessOutputManager.maxj:552)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:205)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:155)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:150)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 255, NodeStreamOffset, "stream offset: -12", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.streamOffsetForCycle(SourcelessOutputManager.maxj:450)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.addStaticField(SourcelessOutputManager.maxj:561)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:205)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:155)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:150)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 452, NodeFIFO, "FIFO(5)", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 261, NodeCat, "@", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Bitops.concat(Bitops.java:158)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.commitStaticFragmentsToBus(SourcelessOutputManager.maxj:412)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.addStaticField(SourcelessOutputManager.maxj:570)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:205)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:155)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:150)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 418, NodeConstantRawBits, "{HWRawBits:32}\n0x00000000", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Bitops.concat(Bitops.java:158)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.commitStaticFragmentsToBus(SourcelessOutputManager.maxj:412)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.addStaticField(SourcelessOutputManager.maxj:570)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:205)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:155)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:150)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 421, NodeConstantRawBits, "{HWRawBits:32}\n0x00000000", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Bitops.concat(Bitops.java:158)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.commitStaticFragmentsToBus(SourcelessOutputManager.maxj:412)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.addStaticField(SourcelessOutputManager.maxj:570)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:205)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:155)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:150)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 270, NodeCat, "@", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Bitops.concat(Bitops.java:158)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.commitStaticFragmentsToBus(SourcelessOutputManager.maxj:412)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.addStaticField(SourcelessOutputManager.maxj:570)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:205)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:155)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:150)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 144, NodeSub, "-", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:914)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:147)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 274, NodeReinterpret, "<{HWRawBits:32}>", "com.maxeler.maxcompiler.v2.kernelcompiler.types.composite.DFEVectorBase.pack(DFEVectorBase.java:216)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.addStaticField(SourcelessOutputManager.maxj:552)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:205)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:155)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:150)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 276, NodeStreamOffset, "stream offset: -14", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.streamOffsetForCycle(SourcelessOutputManager.maxj:450)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.addStaticField(SourcelessOutputManager.maxj:561)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:205)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:155)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:150)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 142, NodeLt, "<", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.lt(DFEVar.java:822)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:146)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 143, NodeMux, "MUX", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1152)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:146)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 271, NodeReinterpret, "<{HWRawBits:32}>", "com.maxeler.maxcompiler.v2.kernelcompiler.types.composite.DFEVectorBase.pack(DFEVectorBase.java:216)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.addStaticField(SourcelessOutputManager.maxj:552)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:205)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:155)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:150)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 273, NodeStreamOffset, "stream offset: -14", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.streamOffsetForCycle(SourcelessOutputManager.maxj:450)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.addStaticField(SourcelessOutputManager.maxj:561)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:205)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:155)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:150)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 459, NodeFIFO, "FIFO(1)", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 279, NodeCat, "@", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Bitops.concat(Bitops.java:158)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.commitStaticFragmentsToBus(SourcelessOutputManager.maxj:412)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.addStaticField(SourcelessOutputManager.maxj:570)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:205)\ncom.maxeler.networking.v1.framed_kernels.FrameData.<init>(FrameData.maxj:155)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:150)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 462, NodeFIFO, "FIFO(6)", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 311, NodeMux, "MUX", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Control.mux(Control.java:128)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.makeBusOutput(SourcelessOutputManager.maxj:667)\ncom.maxeler.networking.v1.framed_kernels.FrameData.getBusOutput(FrameData.maxj:221)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:294)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:254)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:190)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 313, NodeCat, "@", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:188)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.makeBusOutput(SourcelessOutputManager.maxj:670)\ncom.maxeler.networking.v1.framed_kernels.FrameData.getBusOutput(FrameData.maxj:221)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:294)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:254)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:190)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 463, NodeFIFO, "FIFO(3)", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 314, NodeShift, "<<", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Bitops.circularLeftShift(Bitops.java:306)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.makeBusOutput(SourcelessOutputManager.maxj:672)\ncom.maxeler.networking.v1.framed_kernels.FrameData.getBusOutput(FrameData.maxj:221)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:294)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:254)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:190)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 327, NodeOr, "|", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.or(DFEVar.java:410)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.makeBusOutput(SourcelessOutputManager.maxj:681)\ncom.maxeler.networking.v1.framed_kernels.FrameData.getBusOutput(FrameData.maxj:221)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:294)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:254)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:190)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 328, NodeHold, "Hold", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:715)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.makeBusOutput(SourcelessOutputManager.maxj:686)\ncom.maxeler.networking.v1.framed_kernels.FrameData.getBusOutput(FrameData.maxj:221)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:294)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:254)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:190)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 331, NodeSlice, "[63:0]", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:322)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.makeBusOutput(SourcelessOutputManager.maxj:696)\ncom.maxeler.networking.v1.framed_kernels.FrameData.getBusOutput(FrameData.maxj:221)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:294)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:254)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:190)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 330, NodeSlice, "[127:64]", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:322)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.makeBusOutput(SourcelessOutputManager.maxj:695)\ncom.maxeler.networking.v1.framed_kernels.FrameData.getBusOutput(FrameData.maxj:221)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:294)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:254)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:190)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 332, NodeMux, "MUX", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1152)\ncom.maxeler.networking.v1.framed_kernels.SourcelessOutputManager.makeBusOutput(SourcelessOutputManager.maxj:694)\ncom.maxeler.networking.v1.framed_kernels.FrameData.getBusOutput(FrameData.maxj:221)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:294)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:254)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:190)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 348, NodeCat, "@", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.output(IO.java:723)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:315)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:254)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:190)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 350, NodeCat, "@", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.output(IO.java:723)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:315)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:254)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:190)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 352, NodeCat, "@", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.output(IO.java:723)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:315)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:254)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:190)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 354, NodeCat, "@", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.output(IO.java:723)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:315)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:254)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:190)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 345, NodeOutput, "Output(frameOut)", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.output(IO.java:723)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:315)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:254)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:190)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 360, NodeConstantRawBits, "{HWOffsetFix:1, 0, UNSIGNED}\n0x1; 1.0", "com.maxeler.maxcompiler.v2.managers.custom.CustomManager.addKernel(CustomManager.java:1014)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 480, NodeConstantRawBits, "{HWOffsetFix:1, 0, UNSIGNED}\n0x1; 1.0", "com.maxeler.maxcompiler.v2.managers.custom.CustomManager.addKernel(CustomManager.java:1014)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 357, NodeConstantRawBits, "{HWOffsetFix:49, 0, UNSIGNED}\n0x1000000000000; 2.81474976710656E14", "com.maxeler.maxcompiler.v2.managers.custom.CustomManager.addKernel(CustomManager.java:1014)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 358, NodeCounterV1, "Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0", "com.maxeler.maxcompiler.v2.managers.custom.CustomManager.addKernel(CustomManager.java:1014)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 359, NodeStreamOffset, "stream offset: 1", "com.maxeler.maxcompiler.v2.managers.custom.CustomManager.addKernel(CustomManager.java:1014)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 361, NodeOutputMappedReg, "Scalar output (current_run_cycle_count)", "com.maxeler.maxcompiler.v2.managers.custom.CustomManager.addKernel(CustomManager.java:1014)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 15, NodeSlice, "[67:67]", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:145)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:78)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:96)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 16, NodeReinterpret, "<{HWOffsetFix:1, 0, UNSIGNED}>", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:145)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:78)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:96)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 25, NodeNot, "~", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.complement(DFEVar.java:1052)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:149)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:78)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:96)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 471, NodeFIFO, "FIFO(4)", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:38)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 26, NodeOr, "|", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.or(DFEVar.java:410)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:149)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:78)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:96)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 27, NodeConstantRawBits, "{HWOffsetFix:1, 0, UNSIGNED}\n0x1; 1.0", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:80)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.oneShotTrigger(FrameIO.java:50)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:149)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:78)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:96)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 28, NodeHold, "Hold", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:715)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.oneShotTrigger(FrameIO.java:49)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:149)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameInput(FrameIO.java:78)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:96)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 355, NodeAnd, "&", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.and(DFEVar.java:522)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:320)\ncom.maxeler.networking.v1.framed_kernels.FrameIO.frameOutput(FrameIO.java:254)\nfieldaccumulator.FieldAccumulatorKernel.<init>(FieldAccumulatorKernel.maxj:190)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
PHOTON_NODE_DATA(fieldSwapKernel, 365, NodeFlush, "flush after trigger", "com.maxeler.maxcompiler.v2.managers.custom.CustomManager.addKernel(CustomManager.java:1014)\nfieldaccumulator.FieldAccumulatorManager.<init>(FieldAccumulatorManager.maxj:22)\nfieldaccumulator.FieldAccumulatorManager.main(FieldAccumulatorManager.maxj:31)\n")
#endif

#ifdef SLIC_USE_DEFINITIONS
#include <stdio.h>
#include <math.h>
#include <pthread.h>
#include <string.h>
#include <unistd.h>
#include <stdlib.h>
static max_file_t *stored_maxfile = NULL;
static max_engine_t *stored_engine = NULL;
static char *stored_error = NULL;
static int stored_has_error = 0;
static pthread_once_t slic_bs_is_initialised = PTHREAD_ONCE_INIT;

static void set_error(const char *error_str)
{
	stored_has_error = 1; 
	if(stored_error == NULL) {
		stored_error = strdup(error_str);
	} else {
		char *nerr = malloc(strlen(stored_error) + strlen(error_str) + 2);
		sprintf(nerr, "%s\n%s", stored_error, error_str);
		free(stored_error);
		stored_error = nerr;
	}
}
static void set_error_and_free(char *error_str){
	set_error(error_str);
	free(error_str);
}
int FieldAccumulator_has_errors(void)
{	return stored_has_error; }
const char* FieldAccumulator_get_errors(void)
{	return stored_error; }
void FieldAccumulator_clear_errors(void)
{
	free(stored_error);
	stored_error = NULL;
	stored_has_error = 0;
}

static char FieldAccumulator_use_simulation[16];
static void FieldAccumulator_def_use_simulation(void)
{
	long pid = ((long) getpid()) % 100000;
	snprintf(FieldAccumulator_use_simulation, 16, "FieldAcc_%05ld_", pid);
}
static const char *FieldAccumulator_check_use_simulation(void)
{
	FieldAccumulator_def_use_simulation();
	const char *use_sim = max_config_get_string(MAX_CONFIG_USE_SIMULATION);
	if (use_sim == NULL) {
		use_sim = FieldAccumulator_use_simulation;
		max_config_set_string(MAX_CONFIG_USE_SIMULATION, use_sim);
	}
	return use_sim;
}

static int FieldAccumulator_simulation_launch = 0;
int FieldAccumulator_simulator_start(void)
{
	int retval = 0;
	const char *use_sim = FieldAccumulator_check_use_simulation();
	char buff[1024];
	snprintf(buff, 1024, "PATH=simutils:$PATH maxcompilersim -d 1 -n %s -c MAX4AB24B -S simutils restart", use_sim);
	FILE *pipe_fp = popen(buff, "r");
	if (pipe_fp == NULL) {
		strncat(buff, " : failed to execute.", (1024 - strlen(buff)));
		set_error(buff);
		return -1;
	}
	while (fgets(buff, 1024, pipe_fp) != NULL) {
		/* Uncomment this to get simulator command output */
		/* fprintf(stderr, buff); */
		if (strstr(buff, "Error")) {
			set_error(buff);
			retval = -1;
		}
	}
	pclose(pipe_fp);
	return retval;
}

int FieldAccumulator_simulator_stop(void)
{
	const char *use_sim = FieldAccumulator_check_use_simulation();
	char buff[1024];
	snprintf(buff, 1024, "PATH=simutils:$PATH maxcompilersim -d 1 -n %s -c MAX4AB24B -S simutils stop", use_sim);
	FILE *pipe_fp = popen(buff, "r");
	if (pipe_fp == NULL) {
		strncat(buff, " : failed to execute.", (1024 - strlen(buff)));
		set_error(buff);
		return -1;
	}
	while (fgets(buff, 1024, pipe_fp) != NULL) {
		/* Uncomment this to get simulator command output */
		/* fprintf(stderr, buff); */
		;
	}
	pclose(pipe_fp);
	return 0;
}

static void FieldAccumulator_static_init(void) 
{
	stored_maxfile = FieldAccumulator_init();
	if (stored_maxfile == NULL || !max_ok(stored_maxfile->errors)) {
		stored_maxfile = NULL;
		if(max_config_get_bool(MAX_CONFIG_STATIC_INTERFACE_ABORT_ON_ERROR)) abort();
		else { set_error("Unable to load maxfile"); return; }
	}
	if(!max_ok(max_global_errors())) {
		set_error_and_free(max_errors_trace(max_global_errors()));
		return;
	}
	if(!max_config_get_bool(MAX_CONFIG_STATIC_INTERFACE_ABORT_ON_ERROR))
		max_errors_mode(stored_maxfile->errors, 0);
	time_t timeout_previous = max_load_timeout(stored_maxfile, 30);
	const char *use_sim = FieldAccumulator_check_use_simulation();
	if (max_ping_daemon(stored_maxfile, use_sim) == 0) {
		int sim_stat = FieldAccumulator_simulator_start();
		if ((sim_stat == 0) && (max_ping_daemon(stored_maxfile, use_sim) == 1)) {
			FieldAccumulator_simulation_launch = 1;
		} else {
			set_error("Error: An error occurred while trying to start the simulation infrastructure automatically.");
			set_error("Error: Check that 'use_simulation=<simulator_name>' is set correctly in your SLiC configuration");
			set_error("Error: and that the associated simulated system daemon is running.");
			max_file_free(stored_maxfile);
			stored_maxfile = NULL;
			return;
		}
	}
	stored_engine = max_load(stored_maxfile, "*");
	if (!max_ok(stored_maxfile->errors)) {
		if(max_config_get_bool(MAX_CONFIG_STATIC_INTERFACE_ABORT_ON_ERROR)) {
			fprintf(stderr, "\nUnable to load engine: aborting now.\n\n");
			fflush(stderr);
			abort();
		} else {
			set_error_and_free(max_errors_trace(stored_maxfile->errors));
			max_file_free(stored_maxfile);
			stored_maxfile = NULL;
			return;
		} 
	} 
	max_load_timeout(stored_maxfile, timeout_previous);
}
void FieldAccumulator_free(void)
{
	if (stored_engine != NULL) {
		max_unload(stored_engine);
		stored_engine = NULL;
	}
	if (stored_maxfile != NULL) {
		max_file_free(stored_maxfile);
		stored_maxfile = NULL;
	}
	if (stored_error != NULL) {
		free(stored_error);
		stored_error = NULL;
	}
	if (FieldAccumulator_simulation_launch == 1) {
		int sim_stat = FieldAccumulator_simulator_stop();
		if (sim_stat != 0 ) {
			fprintf(stderr, "Error stopping simulator.");
		}
		FieldAccumulator_simulation_launch = 0;
	}
}

static int FieldAccumulator_get_pcie_alignment(void)
{
#ifdef FieldAccumulator_PCIE_ALIGNMENT
	return ((FieldAccumulator_PCIE_ALIGNMENT < 1) ? 16 : FieldAccumulator_PCIE_ALIGNMENT);
#else
	return 16;
#endif
}

static int FieldAccumulator_check_aligned(const void *data)
{
	uintptr_t pointer = (uintptr_t) data;
	int alignment = FieldAccumulator_get_pcie_alignment();
	return (pointer % alignment) ? 1 : 0;
}

static void *FieldAccumulator_malloc_aligned(const size_t size)
{
	void *ptr;
	int alignment = FieldAccumulator_get_pcie_alignment();
	posix_memalign(&ptr, alignment, size);
	return ptr;
}



/*----------------------------------------------------------------------------*/
/*---------------------------- Interface default -----------------------------*/
/*----------------------------------------------------------------------------*/



#define CHECK_ERRORS_ST(ST, RET) if(!max_ok(ST->errors)) { if(max_config_get_bool(MAX_CONFIG_STATIC_INTERFACE_ABORT_ON_ERROR)) { fprintf(stderr, "%s\n", max_errors_trace(ST->errors)); abort(); } set_error_and_free(max_errors_trace(ST->errors)); return RET; } 
#define CHECK_NULL(VALUE, MESSAGE, RET) if(VALUE == NULL) { if (max_config_get_bool(MAX_CONFIG_STATIC_INTERFACE_ABORT_ON_ERROR)) { fprintf(stderr, "%s\n%s\n", (stored_error == NULL) ? "" : stored_error, MESSAGE); abort(); } set_error(MESSAGE); return RET; }

 
typedef struct FieldAccumulator_callback_stream {
	uint8_t *user_ptr;
	uint8_t *aligned_ptr;
	size_t   size;
	int      is_output;
} FieldAccumulator_callback_stream_t;

typedef struct FieldAccumulator_callback_data {
	FieldAccumulator_callback_stream_t stream[2]; 
	int count;
	int max_count;
} FieldAccumulator_callback_data_t;

static void FieldAccumulator_callback_internal(void *cb_data)
{
	FieldAccumulator_callback_data_t *data = (FieldAccumulator_callback_data_t*) cb_data;
	for (int i = 0 ; i < data->count ; i++ ) {
		FieldAccumulator_callback_stream_t *s = &data->stream[i];
		if (s->is_output && (s->size > 0)) {
			memcpy(s->user_ptr, s->aligned_ptr, s->size);
		}
		free(s->aligned_ptr);
	}
	free(data);
}

static max_actions_t* FieldAccumulator_convert_internal(
	max_file_t *maxfile,
	FieldAccumulator_actions_t *interface_actions,
	int  is_internal_call,
	void (**callback_func)(void*),
	void **callback_data)
{
	max_actions_t *actions = max_actions_init(maxfile, NULL);
	if(actions == NULL) return NULL;

#define CHECK_ERRORS if(!max_ok(actions->errors)) { set_error_and_free(max_errors_trace(actions->errors)); return NULL; } 

	FieldAccumulator_callback_data_t *cb_data = NULL;
	int use_callback = (callback_func != NULL) && (callback_data != NULL);
	if (use_callback) {
		cb_data = malloc(sizeof(FieldAccumulator_callback_data_t));
		if (cb_data == NULL) {
			fprintf(stderr, "Unable to allocate memory for stream callback data in function FieldAccumulator_convert_internal\n");
			return NULL;
		}
		cb_data->max_count = 2;
		cb_data->count     = 0;
		*callback_data     = cb_data;
		*callback_func     = &FieldAccumulator_callback_internal;
	}

	/* code for scalar SlicerFramer_network_mgmt_stream_from_host_tx_framed.eofCount */
	uint64_t *outscalar_SlicerFramer_network_mgmt_stream_from_host_tx_framed_eofCount = interface_actions->outscalar_SlicerFramer_network_mgmt_stream_from_host_tx_framed_eofCount;
	max_get_uint64t(actions, "SlicerFramer_network_mgmt_stream_from_host_tx_framed", "eofCount", outscalar_SlicerFramer_network_mgmt_stream_from_host_tx_framed_eofCount);
	CHECK_ERRORS;
	/* end of code for scalar SlicerFramer_network_mgmt_stream_from_host_tx_framed.eofCount*/
	
	/* code for scalar SlicerFramer_network_mgmt_stream_from_host_tx_framed.sofCount */
	uint64_t *outscalar_SlicerFramer_network_mgmt_stream_from_host_tx_framed_sofCount = interface_actions->outscalar_SlicerFramer_network_mgmt_stream_from_host_tx_framed_sofCount;
	max_get_uint64t(actions, "SlicerFramer_network_mgmt_stream_from_host_tx_framed", "sofCount", outscalar_SlicerFramer_network_mgmt_stream_from_host_tx_framed_sofCount);
	CHECK_ERRORS;
	/* end of code for scalar SlicerFramer_network_mgmt_stream_from_host_tx_framed.sofCount*/
	
	/* code for scalar network_mgmt_stream_to_host_rx_framed_FramedStreamPreprocessor.eofCount */
	uint64_t *outscalar_network_mgmt_stream_to_host_rx_framed_FramedStreamPreprocessor_eofCount = interface_actions->outscalar_network_mgmt_stream_to_host_rx_framed_FramedStreamPreprocessor_eofCount;
	max_get_uint64t(actions, "network_mgmt_stream_to_host_rx_framed_FramedStreamPreprocessor", "eofCount", outscalar_network_mgmt_stream_to_host_rx_framed_FramedStreamPreprocessor_eofCount);
	CHECK_ERRORS;
	/* end of code for scalar network_mgmt_stream_to_host_rx_framed_FramedStreamPreprocessor.eofCount*/
	
	/* code for scalar network_mgmt_stream_to_host_rx_framed_FramedStreamPreprocessor.sofCount */
	uint64_t *outscalar_network_mgmt_stream_to_host_rx_framed_FramedStreamPreprocessor_sofCount = interface_actions->outscalar_network_mgmt_stream_to_host_rx_framed_FramedStreamPreprocessor_sofCount;
	max_get_uint64t(actions, "network_mgmt_stream_to_host_rx_framed_FramedStreamPreprocessor", "sofCount", outscalar_network_mgmt_stream_to_host_rx_framed_FramedStreamPreprocessor_sofCount);
	CHECK_ERRORS;
	/* end of code for scalar network_mgmt_stream_to_host_rx_framed_FramedStreamPreprocessor.sofCount*/
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_arp_server", "ip_address" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_arp_server", "mac_address" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_eth_rx_to_host_drop", "badFramesCounter" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_eth_rx_to_host_filter", "enable" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_eth_tx_from_host_rem_conv", "badFramesCounter" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "bcast_ip" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_local_port_0" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_local_port_1" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_local_port_10" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_local_port_11" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_local_port_12" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_local_port_13" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_local_port_14" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_local_port_15" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_local_port_2" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_local_port_3" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_local_port_4" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_local_port_5" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_local_port_6" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_local_port_7" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_local_port_8" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_local_port_9" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_mcast_ip_0" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_mcast_ip_1" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_mcast_ip_10" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_mcast_ip_11" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_mcast_ip_12" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_mcast_ip_13" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_mcast_ip_14" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_mcast_ip_15" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_mcast_ip_2" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_mcast_ip_3" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_mcast_ip_4" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_mcast_ip_5" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_mcast_ip_6" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_mcast_ip_7" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_mcast_ip_8" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_mcast_ip_9" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_src_ip_0" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_src_ip_1" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_src_ip_10" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_src_ip_11" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_src_ip_12" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_src_ip_13" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_src_ip_14" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_src_ip_15" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_src_ip_2" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_src_ip_3" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_src_ip_4" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_src_ip_5" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_src_ip_6" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_src_ip_7" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_src_ip_8" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_src_ip_9" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_src_port_0" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_src_port_1" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_src_port_10" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_src_port_11" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_src_port_12" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_src_port_13" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_src_port_14" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_src_port_15" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_src_port_2" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_src_port_3" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_src_port_4" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_src_port_5" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_src_port_6" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_src_port_7" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_src_port_8" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_src_port_9" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_valid_0" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_valid_1" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_valid_10" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_valid_11" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_valid_12" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_valid_13" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_valid_14" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_valid_15" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_valid_2" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_valid_3" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_valid_4" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_valid_5" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_valid_6" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_valid_7" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_valid_8" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "filter_valid_9" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx", "self_ip" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_rx_EOFEFrameDrop", "badFramesCounter" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_tx", "self_ip" );
	CHECK_ERRORS;
	
	max_ignore_scalar(actions, "qsfp_top_10g_port1_udp_tx", "self_mac" );
	CHECK_ERRORS;
	
	/* code for stream network_mgmt_stream_from_host_tx_framed */
	size_t instream_size_network_mgmt_stream_from_host_tx_framed = interface_actions->instream_size_network_mgmt_stream_from_host_tx_framed;
	if (instream_size_network_mgmt_stream_from_host_tx_framed > 0) {
		const void *stream_ptr = interface_actions->instream_network_mgmt_stream_from_host_tx_framed;
		if (use_callback && (1 == FieldAccumulator_check_aligned(interface_actions->instream_network_mgmt_stream_from_host_tx_framed))) {
			void *aligned_instream_network_mgmt_stream_from_host_tx_framed = malloc(instream_size_network_mgmt_stream_from_host_tx_framed);
			if (aligned_instream_network_mgmt_stream_from_host_tx_framed == NULL) {
				max_report_error_slic(actions->errors, __FILE__, __LINE__, 526, "Failed to allocate aligned memory for stream 'network_mgmt_stream_from_host_tx_framed'");
				CHECK_ERRORS;
			}
			(&cb_data->stream[cb_data->count])->user_ptr    = (uint8_t*) interface_actions->instream_network_mgmt_stream_from_host_tx_framed;
			(&cb_data->stream[cb_data->count])->aligned_ptr = (uint8_t*) aligned_instream_network_mgmt_stream_from_host_tx_framed;
			(&cb_data->stream[cb_data->count])->size        = instream_size_network_mgmt_stream_from_host_tx_framed;
			(&cb_data->stream[cb_data->count])->is_output   = 0;
			cb_data->count += 1;
			memcpy(aligned_instream_network_mgmt_stream_from_host_tx_framed, interface_actions->instream_network_mgmt_stream_from_host_tx_framed, instream_size_network_mgmt_stream_from_host_tx_framed);
			stream_ptr = aligned_instream_network_mgmt_stream_from_host_tx_framed;
		}
		max_queue_input(actions, "network_mgmt_stream_from_host_tx_framed", stream_ptr, instream_size_network_mgmt_stream_from_host_tx_framed);
		CHECK_ERRORS;
	}
	/* end of code for stream network_mgmt_stream_from_host_tx_framed */
	
	/* code for stream network_mgmt_stream_to_host_rx_framed */
	size_t outstream_size_network_mgmt_stream_to_host_rx_framed = interface_actions->outstream_size_network_mgmt_stream_to_host_rx_framed;
	if (outstream_size_network_mgmt_stream_to_host_rx_framed > 0) {
		void *stream_ptr = interface_actions->outstream_network_mgmt_stream_to_host_rx_framed;
		if (use_callback && (1 == FieldAccumulator_check_aligned(interface_actions->outstream_network_mgmt_stream_to_host_rx_framed))) {
			void *aligned_outstream_network_mgmt_stream_to_host_rx_framed = malloc(outstream_size_network_mgmt_stream_to_host_rx_framed);
			if (aligned_outstream_network_mgmt_stream_to_host_rx_framed == NULL) {
				max_report_error_slic(actions->errors, __FILE__, __LINE__, 526, "Failed to allocate aligned memory for stream 'network_mgmt_stream_to_host_rx_framed'");
				CHECK_ERRORS;
			}
			(&cb_data->stream[cb_data->count])->user_ptr    = (uint8_t*) interface_actions->outstream_network_mgmt_stream_to_host_rx_framed;
			(&cb_data->stream[cb_data->count])->aligned_ptr = (uint8_t*) aligned_outstream_network_mgmt_stream_to_host_rx_framed;
			(&cb_data->stream[cb_data->count])->size        = outstream_size_network_mgmt_stream_to_host_rx_framed;
			(&cb_data->stream[cb_data->count])->is_output   = 1;
			cb_data->count += 1;
			stream_ptr = aligned_outstream_network_mgmt_stream_to_host_rx_framed;
		}
		max_queue_output(actions, "network_mgmt_stream_to_host_rx_framed", stream_ptr, outstream_size_network_mgmt_stream_to_host_rx_framed);
		CHECK_ERRORS;
	}
	/* end of code for stream network_mgmt_stream_to_host_rx_framed */
	
	max_ignore_mem(actions, "qsfp_top_10g_port1_icmp_echo_server", "params" );
	CHECK_ERRORS;
	
	max_ignore_mem(actions, "qsfp_top_10g_port1_udp_tx", "routing_lookup_1" );
	CHECK_ERRORS;
	
	max_ignore_mem(actions, "qsfp_top_10g_port1_udp_tx", "routing_lookup_2" );
	CHECK_ERRORS;
	
	if (use_callback && cb_data->count == 0) {
		*callback_data = NULL;
		*callback_func = NULL;
		free(cb_data);
	}
	return actions;
#undef CHECK_ERRORS
}

void FieldAccumulator(
	uint64_t *outscalar_SlicerFramer_network_mgmt_stream_from_host_tx_framed_eofCount,
	uint64_t *outscalar_SlicerFramer_network_mgmt_stream_from_host_tx_framed_sofCount,
	uint64_t *outscalar_network_mgmt_stream_to_host_rx_framed_FramedStreamPreprocessor_eofCount,
	uint64_t *outscalar_network_mgmt_stream_to_host_rx_framed_FramedStreamPreprocessor_sofCount,
	const void *instream_network_mgmt_stream_from_host_tx_framed,
	size_t instream_size_network_mgmt_stream_from_host_tx_framed,
	void *outstream_network_mgmt_stream_to_host_rx_framed,
	size_t outstream_size_network_mgmt_stream_to_host_rx_framed)
{
	(void) pthread_once(&slic_bs_is_initialised, FieldAccumulator_static_init);
	CHECK_NULL(stored_maxfile, "Maxfile was not loaded", );
	max_run_t *run = FieldAccumulator_nonblock(outscalar_SlicerFramer_network_mgmt_stream_from_host_tx_framed_eofCount, outscalar_SlicerFramer_network_mgmt_stream_from_host_tx_framed_sofCount, outscalar_network_mgmt_stream_to_host_rx_framed_FramedStreamPreprocessor_eofCount, outscalar_network_mgmt_stream_to_host_rx_framed_FramedStreamPreprocessor_sofCount, instream_network_mgmt_stream_from_host_tx_framed, instream_size_network_mgmt_stream_from_host_tx_framed, outstream_network_mgmt_stream_to_host_rx_framed, outstream_size_network_mgmt_stream_to_host_rx_framed);
	CHECK_NULL(run, "Unable to run actions", );
	max_wait(run);
}

max_run_t *FieldAccumulator_nonblock(
	uint64_t *outscalar_SlicerFramer_network_mgmt_stream_from_host_tx_framed_eofCount,
	uint64_t *outscalar_SlicerFramer_network_mgmt_stream_from_host_tx_framed_sofCount,
	uint64_t *outscalar_network_mgmt_stream_to_host_rx_framed_FramedStreamPreprocessor_eofCount,
	uint64_t *outscalar_network_mgmt_stream_to_host_rx_framed_FramedStreamPreprocessor_sofCount,
	const void *instream_network_mgmt_stream_from_host_tx_framed,
	size_t instream_size_network_mgmt_stream_from_host_tx_framed,
	void *outstream_network_mgmt_stream_to_host_rx_framed,
	size_t outstream_size_network_mgmt_stream_to_host_rx_framed)
{
	FieldAccumulator_actions_t interface_actions;
	interface_actions.outscalar_SlicerFramer_network_mgmt_stream_from_host_tx_framed_eofCount = outscalar_SlicerFramer_network_mgmt_stream_from_host_tx_framed_eofCount;
	interface_actions.outscalar_SlicerFramer_network_mgmt_stream_from_host_tx_framed_sofCount = outscalar_SlicerFramer_network_mgmt_stream_from_host_tx_framed_sofCount;
	interface_actions.outscalar_network_mgmt_stream_to_host_rx_framed_FramedStreamPreprocessor_eofCount = outscalar_network_mgmt_stream_to_host_rx_framed_FramedStreamPreprocessor_eofCount;
	interface_actions.outscalar_network_mgmt_stream_to_host_rx_framed_FramedStreamPreprocessor_sofCount = outscalar_network_mgmt_stream_to_host_rx_framed_FramedStreamPreprocessor_sofCount;
	interface_actions.instream_network_mgmt_stream_from_host_tx_framed = instream_network_mgmt_stream_from_host_tx_framed;
	interface_actions.instream_size_network_mgmt_stream_from_host_tx_framed = instream_size_network_mgmt_stream_from_host_tx_framed;
	interface_actions.outstream_network_mgmt_stream_to_host_rx_framed = outstream_network_mgmt_stream_to_host_rx_framed;
	interface_actions.outstream_size_network_mgmt_stream_to_host_rx_framed = outstream_size_network_mgmt_stream_to_host_rx_framed;
	(void) pthread_once(&slic_bs_is_initialised, FieldAccumulator_static_init);
	CHECK_NULL(stored_maxfile, "Maxfile was not loaded", NULL);
	void (*cb_func)(void*) = NULL;
	void  *cb_data         = NULL;
	max_actions_t *actions = FieldAccumulator_convert_internal(stored_maxfile, &interface_actions, 1, &cb_func, &cb_data);
	CHECK_NULL(actions, "Unable to build actions", NULL);
	max_validate(actions);
	CHECK_ERRORS_ST(actions, NULL);
	CHECK_ERRORS_ST(stored_engine, NULL);
	max_run_t *run;
	if (cb_func == NULL) {
		run = max_run_nonblock(stored_engine, actions);
	} else {
		run = max_run_nonblock_with_cb(stored_engine, actions, cb_func, cb_data);
	}
	CHECK_NULL(run, "Unable to run actions", NULL);
	CHECK_ERRORS_ST(actions, NULL);
	max_actions_free(actions);
	return run;
}

void FieldAccumulator_run(
	max_engine_t *engine,
	FieldAccumulator_actions_t *interface_actions)
{
	max_run_t *run = FieldAccumulator_run_nonblock(engine, interface_actions);
	CHECK_NULL(run, "Unable to run actions", );
	max_wait(run);
}

max_run_t *FieldAccumulator_run_nonblock(
	max_engine_t *engine,
	FieldAccumulator_actions_t *interface_actions)
{
	max_file_t *maxfile = max_engine_get_max_file(engine); 
	void (*cb_func)(void*) = NULL;
	void  *cb_data         = NULL;
	max_actions_t *actions = FieldAccumulator_convert_internal(maxfile, interface_actions, 1, &cb_func, &cb_data);
	CHECK_ERRORS_ST(actions, NULL);
	max_run_t *run;
	if (cb_func == NULL) {
		run = max_run_nonblock(engine, actions);
	} else {
		run = max_run_nonblock_with_cb(engine, actions, cb_func, cb_data);
	}
	CHECK_NULL(run, "Unable to run actions", NULL);
	max_actions_free(actions);
	return run;
}


/**
 * \brief Group run advanced static function for the interface 'default'.
 * 
 * \param [in] group Group to use.
 * \param [in,out] interface_actions Actions to run.
 *
 * Run the actions on the first device available in the group.
 */
void FieldAccumulator_run_group(max_group_t *group, FieldAccumulator_actions_t *interface_actions)
{
	max_run_t *run = FieldAccumulator_run_group_nonblock(group, interface_actions);
	CHECK_NULL(run, "Unable to run actions", );
	max_wait(run);
}


/**
 * \brief Group run advanced static non-blocking function for the interface 'default'.
 * 
 *
 * Schedule the actions to run on the first device available in the group and return immediately.
 * The status of the run must be checked with ::max_wait. 
 * Note that use of ::max_nowait is prohibited with non-blocking running on groups:
 * see the ::max_run_group_nonblock documentation for more explanation.
 *
 * \param [in] group Group to use.
 * \param [in] interface_actions Actions to run.
 * \return A handle on the execution status of the actions, or NULL in case of error.
 */
max_run_t *FieldAccumulator_run_group_nonblock(max_group_t *group, FieldAccumulator_actions_t *interface_actions)
{
	max_file_t *maxfile = max_group_get_max_file(group);
	max_actions_t *actions = FieldAccumulator_convert_internal(maxfile, interface_actions, 1, NULL, NULL);
	if(actions == NULL) return NULL;
	if(!max_ok(actions->errors)) return NULL;
	max_validate(actions);
	max_run_t *run = max_run_group_nonblock(group, actions);
	max_actions_free(actions);
	return run;
}


/**
 * \brief Array run advanced static function for the interface 'default'.
 * 
 * \param [in] engarray The array of devices to use.
 * \param [in,out] interface_actions The array of actions to run.
 *
 * Run the array of actions on the array of engines.  The length of interface_actions
 * must match the size of engarray.
 */
void FieldAccumulator_run_array(max_engarray_t *engarray, FieldAccumulator_actions_t *interface_actions[])
{
	max_run_t *run = FieldAccumulator_run_array_nonblock(engarray, interface_actions);
	CHECK_NULL(run, "Unable to run actions", );
	max_wait(run);
}


/**
 * \brief Array run advanced static non-blocking function for the interface 'default'.
 * 
 *
 * Schedule to run the array of actions on the array of engines, and return immediately.
 * The length of interface_actions must match the size of engarray.
 * The status of the run can be checked either by ::max_wait or ::max_nowait;
 * note that one of these *must* be called, so that associated memory can be released.
 *
 * \param [in] engarray The array of devices to use.
 * \param [in] interface_actions The array of actions to run.
 * \return A handle on the execution status of the actions, or NULL in case of error.
 */
max_run_t *FieldAccumulator_run_array_nonblock(max_engarray_t *engarray, FieldAccumulator_actions_t *interface_actions[])
{
	max_file_t *maxfile = max_engarray_get_max_file(engarray, 0);
	int i;
	max_actarray_t *actarray = max_actarray_init(maxfile, engarray->size);
	if (actarray == NULL) return NULL;
	max_actions_t **arr_actions = malloc(engarray->size * sizeof(max_actions_t*));
	for ( i = 0 ; i < actarray->size; i++ ) {
		max_actions_t *actions = FieldAccumulator_convert_internal(maxfile, interface_actions[i], 1, NULL, NULL);
		if (actions == NULL) return NULL;
		arr_actions[i] = actions;
		max_set_action(actarray, i, actions);
	}
	max_run_t *run = max_run_array_nonblock(engarray, actarray);
	for ( i = 0 ; i < actarray->size ; i++ ) { max_actions_free(arr_actions[i]); }
	max_actarray_free(actarray);
	free(arr_actions);
	return run;
}


/**
 * \brief Converts a static-interface action struct into a dynamic-interface max_actions_t struct.
 *
 * Note that this is an internal utility function used by other functions in the static interface.
 *
 * \param [in] maxfile The maxfile to use.
 * \param [in] interface_actions The interface-specific actions to run.
 * \return The dynamic-interface actions to run, or NULL in case of error.
 */
max_actions_t* FieldAccumulator_convert(max_file_t *maxfile, FieldAccumulator_actions_t *interface_actions)
{
	return FieldAccumulator_convert_internal(maxfile, interface_actions, 0, NULL, NULL);
}

#undef CHECK_ERRORS_ST
#undef CHECK_NULL



#endif /* SLIC_USE_DEFINITIONS */

#ifdef SLIC_DYNAMIC_CODE
SLIC_MODE_START(default)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_arp_server, ip_address)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_arp_server, mac_address)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_eth_rx_to_host_drop, badFramesCounter)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_eth_rx_to_host_filter, enable)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_eth_tx_from_host_rem_conv, badFramesCounter)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, bcast_ip)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_local_port_0)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_local_port_1)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_local_port_10)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_local_port_11)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_local_port_12)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_local_port_13)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_local_port_14)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_local_port_15)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_local_port_2)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_local_port_3)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_local_port_4)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_local_port_5)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_local_port_6)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_local_port_7)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_local_port_8)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_local_port_9)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_mcast_ip_0)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_mcast_ip_1)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_mcast_ip_10)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_mcast_ip_11)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_mcast_ip_12)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_mcast_ip_13)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_mcast_ip_14)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_mcast_ip_15)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_mcast_ip_2)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_mcast_ip_3)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_mcast_ip_4)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_mcast_ip_5)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_mcast_ip_6)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_mcast_ip_7)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_mcast_ip_8)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_mcast_ip_9)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_src_ip_0)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_src_ip_1)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_src_ip_10)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_src_ip_11)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_src_ip_12)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_src_ip_13)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_src_ip_14)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_src_ip_15)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_src_ip_2)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_src_ip_3)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_src_ip_4)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_src_ip_5)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_src_ip_6)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_src_ip_7)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_src_ip_8)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_src_ip_9)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_src_port_0)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_src_port_1)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_src_port_10)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_src_port_11)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_src_port_12)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_src_port_13)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_src_port_14)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_src_port_15)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_src_port_2)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_src_port_3)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_src_port_4)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_src_port_5)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_src_port_6)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_src_port_7)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_src_port_8)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_src_port_9)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_valid_0)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_valid_1)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_valid_10)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_valid_11)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_valid_12)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_valid_13)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_valid_14)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_valid_15)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_valid_2)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_valid_3)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_valid_4)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_valid_5)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_valid_6)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_valid_7)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_valid_8)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, filter_valid_9)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx, self_ip)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_rx_EOFEFrameDrop, badFramesCounter)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_tx, self_ip)	
SLIC_SCALAR_DISABLED(qsfp_top_10g_port1_udp_tx, self_mac)	
SLIC_ROM_DISABLED(qsfp_top_10g_port1_icmp_echo_server, params)	
SLIC_ROM_DISABLED(qsfp_top_10g_port1_udp_tx, routing_lookup_1)	
SLIC_ROM_DISABLED(qsfp_top_10g_port1_udp_tx, routing_lookup_2)	
SLIC_MODE_END(default)

#endif /* SLIC_DYNAMIC_CODE */

#ifdef SKIN_META_DATA
PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9Im5vIj8+PG1h
eGZpbGUgZm9ybWF0LXZlcnNpb249IjIwMTIwMjAwIiBoZWFkZXI9IkZpZWxkQWNjdW11bGF0b3Iu
aCIgbmFtZT0iRmllbGRBY2N1bXVsYXRvciI+PGNvbnN0YW50IG5hbWU9IlVTRV9ORVRXT1JLX01B
TkFHRVIiIHR5cGU9ImxvbmciIHZhbHVlPSIxIi8+PGNvbnN0YW50IG5hbWU9IlBDSUVfQUxJR05N
RU5UIiB0eXBlPSJsb25nIiB2YWx1ZT0iMTYiLz48ZW5naW5lbW9kZSBuYW1lPSJkZWZhdWx0Ij48
ZnVuY3Rpb24gbmFtZT0iRmllbGRBY2N1bXVsYXRvciIgcmV0dXJuLXZhbHVlPSJ2b2lkIj48c2Nh
bGFyIGRlc2M9Ik91dHB1dCBzY2FsYXIgcGFyYW1ldGVyICZxdW90O1NsaWNlckZyYW1lcl9uZXR3
b3JrX21nbXRfc3RyZWFtX2Zyb21faG9zdF90eF9mcmFtZWQuZW9mQ291bnQmcXVvdDsuIiBkaXJl
Y3Rpb249Ik91dHB1dCIgbmFtZT0ib3V0c2NhbGFyX1NsaWNlckZyYW1lcl9uZXR3b3JrX21nbXRf
c3RyZWFtX2Zyb21faG9zdF90eF9mcmFtZWRfZW9mQ291bnQiIHR5cGU9InVpbnQ2NF90Ii8+PHNj
YWxhciBkZXNjPSJPdXRwdXQgc2NhbGFyIHBhcmFtZXRlciAmcXVvdDtTbGljZXJGcmFtZXJfbmV0
d29ya19tZ210X3N0cmVhbV9mcm9tX2hvc3RfdHhfZnJhbWVkLnNvZkNvdW50JnF1b3Q7LiIgZGly
ZWN0aW9uPSJPdXRwdXQiIG5hbWU9Im91dHNjYWxhcl9TbGljZXJGcmFtZXJfbmV0d29ya19tZ210
X3N0cmVhbV9mcm9tX2hvc3RfdHhfZnJhbWVkX3NvZkNvdW50IiB0eXBlPSJ1aW50NjRfdCIvPjxz
Y2FsYXIgZGVzYz0iT3V0cHV0IHNjYWxhciBwYXJhbWV0ZXIgJnF1b3Q7bmV0d29ya19tZ210X3N0
cmVhbV90b19ob3N0X3J4X2ZyYW1lZF9GcmFtZWRTdHJlYW1QcmVwcm9jZXNzb3IuZW9mQ291bnQm
cXVvdDsuIiBkaXJlY3Rpb249Ik91dHB1dCIgbmFtZT0ib3V0c2NhbGFyX25ldHdvcmtfbWdtdF9z
dHJlYW1fdG9faG9zdF9yeF9mcmFtZWRfRnJhbWVkU3RyZWFtUHJlcHJvY2Vzc29yX2VvZkNvdW50
IiB0eXBlPSJ1aW50NjRfdCIvPjxzY2FsYXIgZGVzYz0iT3V0cHV0IHNjYWxhciBwYXJhbWV0ZXIg
JnF1b3Q7bmV0d29ya19tZ210X3N0cmVhbV90b19ob3N0X3J4X2ZyYW1lZF9GcmFtZWRTdHJlYW1Q
cmVwcm9jZXNzb3Iuc29mQ291bnQmcXVvdDsuIiBkaXJlY3Rpb249Ik91dHB1dCIgbmFtZT0ib3V0
c2NhbGFyX25ldHdvcmtfbWdtdF9zdHJlYW1fdG9faG9zdF9yeF9mcmFtZWRfRnJhbWVkU3RyZWFt
UHJlcHJvY2Vzc29yX3NvZkNvdW50IiB0eXBlPSJ1aW50NjRfdCIvPjxhcnJheSBkZXNjPSJTdHJl
YW0gJnF1b3Q7bmV0d29ya19tZ210X3N0cmVhbV9mcm9tX2hvc3RfdHhfZnJhbWVkJnF1b3Q7LiIg
ZGlyZWN0aW9uPSJJbnB1dCIgbmFtZT0iaW5zdHJlYW1fbmV0d29ya19tZ210X3N0cmVhbV9mcm9t
X2hvc3RfdHhfZnJhbWVkIiBzaXplPSJpbnN0cmVhbV9zaXplX25ldHdvcmtfbWdtdF9zdHJlYW1f
ZnJvbV9ob3N0X3R4X2ZyYW1lZCIgdHJhbnNwb3NlPSJmYWxzZSIgdHlwZT0idm9pZCIvPjxzY2Fs
YXIgZGVzYz0iVGhlIHNpemUgb2YgdGhlIHN0cmVhbSBpbnN0cmVhbV9uZXR3b3JrX21nbXRfc3Ry
ZWFtX2Zyb21faG9zdF90eF9mcmFtZWQgaW4gYnl0ZXMuIiBkaXJlY3Rpb249IklucHV0IiBuYW1l
PSJpbnN0cmVhbV9zaXplX25ldHdvcmtfbWdtdF9zdHJlYW1fZnJvbV9ob3N0X3R4X2ZyYW1lZCIg
dHlwZT0idWludDY0X3QiLz48YXJyYXkgZGVzYz0iU3RyZWFtICZxdW90O25ldHdvcmtfbWdtdF9z
dHJlYW1fdG9faG9zdF9yeF9mcmFtZWQmcXVvdDsuIiBkaXJlY3Rpb249Ik91dHB1dCIgbmFtZT0i
b3V0c3RyZWFtX25ldHdvcmtfbWdtdF9zdHJlYW1fdG9faG9zdF9yeF9mcmFtZWQiIHNpemU9Im91
dHN0cmVhbV9zaXplX25ldHdvcmtfbWdtdF9zdHJlYW1fdG9faG9zdF9yeF9mcmFtZWQiIHRyYW5z
cG9zZT0iZmFsc2UiIHR5cGU9InZvaWQiLz48c2NhbGFyIGRlc2M9IlRoZSBzaXplIG9mIHRoZSBz
dHJlYW0gb3V0c3RyZWFtX25ldHdvcmtfbWdtdF9zdHJlYW1fdG9faG9zdF9yeF9mcmFtZWQgaW4g
Ynl0ZXMuIiBkaXJlY3Rpb249IklucHV0IiBuYW1lPSJvdXRzdHJlYW1fc2l6ZV9uZXR3b3JrX21n
bXRfc3RyZWFtX3RvX2hvc3RfcnhfZnJhbWVkIiB0eXBlPSJ1aW50NjRfdCIvPjwvZnVuY3Rpb24+
PC9lbmdpbmVtb2RlPjwvbWF4ZmlsZT4=
#endif /* SKIN_META_DATA */

#ifdef SLIC_B64_DEFINITIONS
I2luY2x1ZGUgPHN0ZGlvLmg+CiNpbmNsdWRlIDxtYXRoLmg+CiNpbmNsdWRlIDxwdGhyZWFkLmg+
CiNpbmNsdWRlIDxzdHJpbmcuaD4KI2luY2x1ZGUgPHVuaXN0ZC5oPgojaW5jbHVkZSA8c3RkbGli
Lmg+CnN0YXRpYyBtYXhfZmlsZV90ICpzdG9yZWRfbWF4ZmlsZSA9IE5VTEw7CnN0YXRpYyBtYXhf
ZW5naW5lX3QgKnN0b3JlZF9lbmdpbmUgPSBOVUxMOwpzdGF0aWMgY2hhciAqc3RvcmVkX2Vycm9y
ID0gTlVMTDsKc3RhdGljIGludCBzdG9yZWRfaGFzX2Vycm9yID0gMDsKc3RhdGljIHB0aHJlYWRf
b25jZV90IHNsaWNfYnNfaXNfaW5pdGlhbGlzZWQgPSBQVEhSRUFEX09OQ0VfSU5JVDsKCnN0YXRp
YyB2b2lkIHNldF9lcnJvcihjb25zdCBjaGFyICplcnJvcl9zdHIpCnsKCXN0b3JlZF9oYXNfZXJy
b3IgPSAxOyAKCWlmKHN0b3JlZF9lcnJvciA9PSBOVUxMKSB7CgkJc3RvcmVkX2Vycm9yID0gc3Ry
ZHVwKGVycm9yX3N0cik7Cgl9IGVsc2UgewoJCWNoYXIgKm5lcnIgPSBtYWxsb2Moc3RybGVuKHN0
b3JlZF9lcnJvcikgKyBzdHJsZW4oZXJyb3Jfc3RyKSArIDIpOwoJCXNwcmludGYobmVyciwgIiVz
XG4lcyIsIHN0b3JlZF9lcnJvciwgZXJyb3Jfc3RyKTsKCQlmcmVlKHN0b3JlZF9lcnJvcik7CgkJ
c3RvcmVkX2Vycm9yID0gbmVycjsKCX0KfQpzdGF0aWMgdm9pZCBzZXRfZXJyb3JfYW5kX2ZyZWUo
Y2hhciAqZXJyb3Jfc3RyKXsKCXNldF9lcnJvcihlcnJvcl9zdHIpOwoJZnJlZShlcnJvcl9zdHIp
Owp9CmludCBGaWVsZEFjY3VtdWxhdG9yX2hhc19lcnJvcnModm9pZCkKewlyZXR1cm4gc3RvcmVk
X2hhc19lcnJvcjsgfQpjb25zdCBjaGFyKiBGaWVsZEFjY3VtdWxhdG9yX2dldF9lcnJvcnModm9p
ZCkKewlyZXR1cm4gc3RvcmVkX2Vycm9yOyB9CnZvaWQgRmllbGRBY2N1bXVsYXRvcl9jbGVhcl9l
cnJvcnModm9pZCkKewoJZnJlZShzdG9yZWRfZXJyb3IpOwoJc3RvcmVkX2Vycm9yID0gTlVMTDsK
CXN0b3JlZF9oYXNfZXJyb3IgPSAwOwp9CgpzdGF0aWMgY2hhciBGaWVsZEFjY3VtdWxhdG9yX3Vz
ZV9zaW11bGF0aW9uWzE2XTsKc3RhdGljIHZvaWQgRmllbGRBY2N1bXVsYXRvcl9kZWZfdXNlX3Np
bXVsYXRpb24odm9pZCkKewoJbG9uZyBwaWQgPSAoKGxvbmcpIGdldHBpZCgpKSAlIDEwMDAwMDsK
CXNucHJpbnRmKEZpZWxkQWNjdW11bGF0b3JfdXNlX3NpbXVsYXRpb24sIDE2LCAiRmllbGRBY2Nf
JTA1bGRfIiwgcGlkKTsKfQpzdGF0aWMgY29uc3QgY2hhciAqRmllbGRBY2N1bXVsYXRvcl9jaGVj
a191c2Vfc2ltdWxhdGlvbih2b2lkKQp7CglGaWVsZEFjY3VtdWxhdG9yX2RlZl91c2Vfc2ltdWxh
dGlvbigpOwoJY29uc3QgY2hhciAqdXNlX3NpbSA9IG1heF9jb25maWdfZ2V0X3N0cmluZyhNQVhf
Q09ORklHX1VTRV9TSU1VTEFUSU9OKTsKCWlmICh1c2Vfc2ltID09IE5VTEwpIHsKCQl1c2Vfc2lt
ID0gRmllbGRBY2N1bXVsYXRvcl91c2Vfc2ltdWxhdGlvbjsKCQltYXhfY29uZmlnX3NldF9zdHJp
bmcoTUFYX0NPTkZJR19VU0VfU0lNVUxBVElPTiwgdXNlX3NpbSk7Cgl9CglyZXR1cm4gdXNlX3Np
bTsKfQoKc3RhdGljIGludCBGaWVsZEFjY3VtdWxhdG9yX3NpbXVsYXRpb25fbGF1bmNoID0gMDsK
aW50IEZpZWxkQWNjdW11bGF0b3Jfc2ltdWxhdG9yX3N0YXJ0KHZvaWQpCnsKCWludCByZXR2YWwg
PSAwOwoJY29uc3QgY2hhciAqdXNlX3NpbSA9IEZpZWxkQWNjdW11bGF0b3JfY2hlY2tfdXNlX3Np
bXVsYXRpb24oKTsKCWNoYXIgYnVmZlsxMDI0XTsKCXNucHJpbnRmKGJ1ZmYsIDEwMjQsICJQQVRI
PXNpbXV0aWxzOiRQQVRIIG1heGNvbXBpbGVyc2ltIC1kIDEgLW4gJXMgLWMgTUFYNEFCMjRCIC1T
IHNpbXV0aWxzIHJlc3RhcnQiLCB1c2Vfc2ltKTsKCUZJTEUgKnBpcGVfZnAgPSBwb3BlbihidWZm
LCAiciIpOwoJaWYgKHBpcGVfZnAgPT0gTlVMTCkgewoJCXN0cm5jYXQoYnVmZiwgIiA6IGZhaWxl
ZCB0byBleGVjdXRlLiIsICgxMDI0IC0gc3RybGVuKGJ1ZmYpKSk7CgkJc2V0X2Vycm9yKGJ1ZmYp
OwoJCXJldHVybiAtMTsKCX0KCXdoaWxlIChmZ2V0cyhidWZmLCAxMDI0LCBwaXBlX2ZwKSAhPSBO
VUxMKSB7CgkJLyogVW5jb21tZW50IHRoaXMgdG8gZ2V0IHNpbXVsYXRvciBjb21tYW5kIG91dHB1
dCAqLwoJCS8qIGZwcmludGYoc3RkZXJyLCBidWZmKTsgKi8KCQlpZiAoc3Ryc3RyKGJ1ZmYsICJF
cnJvciIpKSB7CgkJCXNldF9lcnJvcihidWZmKTsKCQkJcmV0dmFsID0gLTE7CgkJfQoJfQoJcGNs
b3NlKHBpcGVfZnApOwoJcmV0dXJuIHJldHZhbDsKfQoKaW50IEZpZWxkQWNjdW11bGF0b3Jfc2lt
dWxhdG9yX3N0b3Aodm9pZCkKewoJY29uc3QgY2hhciAqdXNlX3NpbSA9IEZpZWxkQWNjdW11bGF0
b3JfY2hlY2tfdXNlX3NpbXVsYXRpb24oKTsKCWNoYXIgYnVmZlsxMDI0XTsKCXNucHJpbnRmKGJ1
ZmYsIDEwMjQsICJQQVRIPXNpbXV0aWxzOiRQQVRIIG1heGNvbXBpbGVyc2ltIC1kIDEgLW4gJXMg
LWMgTUFYNEFCMjRCIC1TIHNpbXV0aWxzIHN0b3AiLCB1c2Vfc2ltKTsKCUZJTEUgKnBpcGVfZnAg
PSBwb3BlbihidWZmLCAiciIpOwoJaWYgKHBpcGVfZnAgPT0gTlVMTCkgewoJCXN0cm5jYXQoYnVm
ZiwgIiA6IGZhaWxlZCB0byBleGVjdXRlLiIsICgxMDI0IC0gc3RybGVuKGJ1ZmYpKSk7CgkJc2V0
X2Vycm9yKGJ1ZmYpOwoJCXJldHVybiAtMTsKCX0KCXdoaWxlIChmZ2V0cyhidWZmLCAxMDI0LCBw
aXBlX2ZwKSAhPSBOVUxMKSB7CgkJLyogVW5jb21tZW50IHRoaXMgdG8gZ2V0IHNpbXVsYXRvciBj
b21tYW5kIG91dHB1dCAqLwoJCS8qIGZwcmludGYoc3RkZXJyLCBidWZmKTsgKi8KCQk7Cgl9Cglw
Y2xvc2UocGlwZV9mcCk7CglyZXR1cm4gMDsKfQoKc3RhdGljIHZvaWQgRmllbGRBY2N1bXVsYXRv
cl9zdGF0aWNfaW5pdCh2b2lkKSAKewoJc3RvcmVkX21heGZpbGUgPSBGaWVsZEFjY3VtdWxhdG9y
X2luaXQoKTsKCWlmIChzdG9yZWRfbWF4ZmlsZSA9PSBOVUxMIHx8ICFtYXhfb2soc3RvcmVkX21h
eGZpbGUtPmVycm9ycykpIHsKCQlzdG9yZWRfbWF4ZmlsZSA9IE5VTEw7CgkJaWYobWF4X2NvbmZp
Z19nZXRfYm9vbChNQVhfQ09ORklHX1NUQVRJQ19JTlRFUkZBQ0VfQUJPUlRfT05fRVJST1IpKSBh
Ym9ydCgpOwoJCWVsc2UgeyBzZXRfZXJyb3IoIlVuYWJsZSB0byBsb2FkIG1heGZpbGUiKTsgcmV0
dXJuOyB9Cgl9CglpZighbWF4X29rKG1heF9nbG9iYWxfZXJyb3JzKCkpKSB7CgkJc2V0X2Vycm9y
X2FuZF9mcmVlKG1heF9lcnJvcnNfdHJhY2UobWF4X2dsb2JhbF9lcnJvcnMoKSkpOwoJCXJldHVy
bjsKCX0KCWlmKCFtYXhfY29uZmlnX2dldF9ib29sKE1BWF9DT05GSUdfU1RBVElDX0lOVEVSRkFD
RV9BQk9SVF9PTl9FUlJPUikpCgkJbWF4X2Vycm9yc19tb2RlKHN0b3JlZF9tYXhmaWxlLT5lcnJv
cnMsIDApOwoJdGltZV90IHRpbWVvdXRfcHJldmlvdXMgPSBtYXhfbG9hZF90aW1lb3V0KHN0b3Jl
ZF9tYXhmaWxlLCAzMCk7Cgljb25zdCBjaGFyICp1c2Vfc2ltID0gRmllbGRBY2N1bXVsYXRvcl9j
aGVja191c2Vfc2ltdWxhdGlvbigpOwoJaWYgKG1heF9waW5nX2RhZW1vbihzdG9yZWRfbWF4Zmls
ZSwgdXNlX3NpbSkgPT0gMCkgewoJCWludCBzaW1fc3RhdCA9IEZpZWxkQWNjdW11bGF0b3Jfc2lt
dWxhdG9yX3N0YXJ0KCk7CgkJaWYgKChzaW1fc3RhdCA9PSAwKSAmJiAobWF4X3BpbmdfZGFlbW9u
KHN0b3JlZF9tYXhmaWxlLCB1c2Vfc2ltKSA9PSAxKSkgewoJCQlGaWVsZEFjY3VtdWxhdG9yX3Np
bXVsYXRpb25fbGF1bmNoID0gMTsKCQl9IGVsc2UgewoJCQlzZXRfZXJyb3IoIkVycm9yOiBBbiBl
cnJvciBvY2N1cnJlZCB3aGlsZSB0cnlpbmcgdG8gc3RhcnQgdGhlIHNpbXVsYXRpb24gaW5mcmFz
dHJ1Y3R1cmUgYXV0b21hdGljYWxseS4iKTsKCQkJc2V0X2Vycm9yKCJFcnJvcjogQ2hlY2sgdGhh
dCAndXNlX3NpbXVsYXRpb249PHNpbXVsYXRvcl9uYW1lPicgaXMgc2V0IGNvcnJlY3RseSBpbiB5
b3VyIFNMaUMgY29uZmlndXJhdGlvbiIpOwoJCQlzZXRfZXJyb3IoIkVycm9yOiBhbmQgdGhhdCB0
aGUgYXNzb2NpYXRlZCBzaW11bGF0ZWQgc3lzdGVtIGRhZW1vbiBpcyBydW5uaW5nLiIpOwoJCQlt
YXhfZmlsZV9mcmVlKHN0b3JlZF9tYXhmaWxlKTsKCQkJc3RvcmVkX21heGZpbGUgPSBOVUxMOwoJ
CQlyZXR1cm47CgkJfQoJfQoJc3RvcmVkX2VuZ2luZSA9IG1heF9sb2FkKHN0b3JlZF9tYXhmaWxl
LCAiKiIpOwoJaWYgKCFtYXhfb2soc3RvcmVkX21heGZpbGUtPmVycm9ycykpIHsKCQlpZihtYXhf
Y29uZmlnX2dldF9ib29sKE1BWF9DT05GSUdfU1RBVElDX0lOVEVSRkFDRV9BQk9SVF9PTl9FUlJP
UikpIHsKCQkJZnByaW50ZihzdGRlcnIsICJcblVuYWJsZSB0byBsb2FkIGVuZ2luZTogYWJvcnRp
bmcgbm93LlxuXG4iKTsKCQkJZmZsdXNoKHN0ZGVycik7CgkJCWFib3J0KCk7CgkJfSBlbHNlIHsK
CQkJc2V0X2Vycm9yX2FuZF9mcmVlKG1heF9lcnJvcnNfdHJhY2Uoc3RvcmVkX21heGZpbGUtPmVy
cm9ycykpOwoJCQltYXhfZmlsZV9mcmVlKHN0b3JlZF9tYXhmaWxlKTsKCQkJc3RvcmVkX21heGZp
bGUgPSBOVUxMOwoJCQlyZXR1cm47CgkJfSAKCX0gCgltYXhfbG9hZF90aW1lb3V0KHN0b3JlZF9t
YXhmaWxlLCB0aW1lb3V0X3ByZXZpb3VzKTsKfQp2b2lkIEZpZWxkQWNjdW11bGF0b3JfZnJlZSh2
b2lkKQp7CglpZiAoc3RvcmVkX2VuZ2luZSAhPSBOVUxMKSB7CgkJbWF4X3VubG9hZChzdG9yZWRf
ZW5naW5lKTsKCQlzdG9yZWRfZW5naW5lID0gTlVMTDsKCX0KCWlmIChzdG9yZWRfbWF4ZmlsZSAh
PSBOVUxMKSB7CgkJbWF4X2ZpbGVfZnJlZShzdG9yZWRfbWF4ZmlsZSk7CgkJc3RvcmVkX21heGZp
bGUgPSBOVUxMOwoJfQoJaWYgKHN0b3JlZF9lcnJvciAhPSBOVUxMKSB7CgkJZnJlZShzdG9yZWRf
ZXJyb3IpOwoJCXN0b3JlZF9lcnJvciA9IE5VTEw7Cgl9CglpZiAoRmllbGRBY2N1bXVsYXRvcl9z
aW11bGF0aW9uX2xhdW5jaCA9PSAxKSB7CgkJaW50IHNpbV9zdGF0ID0gRmllbGRBY2N1bXVsYXRv
cl9zaW11bGF0b3Jfc3RvcCgpOwoJCWlmIChzaW1fc3RhdCAhPSAwICkgewoJCQlmcHJpbnRmKHN0
ZGVyciwgIkVycm9yIHN0b3BwaW5nIHNpbXVsYXRvci4iKTsKCQl9CgkJRmllbGRBY2N1bXVsYXRv
cl9zaW11bGF0aW9uX2xhdW5jaCA9IDA7Cgl9Cn0KCnN0YXRpYyBpbnQgRmllbGRBY2N1bXVsYXRv
cl9nZXRfcGNpZV9hbGlnbm1lbnQodm9pZCkKewojaWZkZWYgRmllbGRBY2N1bXVsYXRvcl9QQ0lF
X0FMSUdOTUVOVAoJcmV0dXJuICgoRmllbGRBY2N1bXVsYXRvcl9QQ0lFX0FMSUdOTUVOVCA8IDEp
ID8gMTYgOiBGaWVsZEFjY3VtdWxhdG9yX1BDSUVfQUxJR05NRU5UKTsKI2Vsc2UKCXJldHVybiAx
NjsKI2VuZGlmCn0KCnN0YXRpYyBpbnQgRmllbGRBY2N1bXVsYXRvcl9jaGVja19hbGlnbmVkKGNv
bnN0IHZvaWQgKmRhdGEpCnsKCXVpbnRwdHJfdCBwb2ludGVyID0gKHVpbnRwdHJfdCkgZGF0YTsK
CWludCBhbGlnbm1lbnQgPSBGaWVsZEFjY3VtdWxhdG9yX2dldF9wY2llX2FsaWdubWVudCgpOwoJ
cmV0dXJuIChwb2ludGVyICUgYWxpZ25tZW50KSA/IDEgOiAwOwp9CgpzdGF0aWMgdm9pZCAqRmll
bGRBY2N1bXVsYXRvcl9tYWxsb2NfYWxpZ25lZChjb25zdCBzaXplX3Qgc2l6ZSkKewoJdm9pZCAq
cHRyOwoJaW50IGFsaWdubWVudCA9IEZpZWxkQWNjdW11bGF0b3JfZ2V0X3BjaWVfYWxpZ25tZW50
KCk7Cglwb3NpeF9tZW1hbGlnbigmcHRyLCBhbGlnbm1lbnQsIHNpemUpOwoJcmV0dXJuIHB0cjsK
fQoKCgovKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qLwovKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0gSW50ZXJmYWNlIGRlZmF1bHQgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qLwovKi0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0qLwoKCgojZGVmaW5lIENIRUNLX0VSUk9SU19TVChTVCwgUkVUKSBp
ZighbWF4X29rKFNULT5lcnJvcnMpKSB7IGlmKG1heF9jb25maWdfZ2V0X2Jvb2woTUFYX0NPTkZJ
R19TVEFUSUNfSU5URVJGQUNFX0FCT1JUX09OX0VSUk9SKSkgeyBmcHJpbnRmKHN0ZGVyciwgIiVz
XG4iLCBtYXhfZXJyb3JzX3RyYWNlKFNULT5lcnJvcnMpKTsgYWJvcnQoKTsgfSBzZXRfZXJyb3Jf
YW5kX2ZyZWUobWF4X2Vycm9yc190cmFjZShTVC0+ZXJyb3JzKSk7IHJldHVybiBSRVQ7IH0gCiNk
ZWZpbmUgQ0hFQ0tfTlVMTChWQUxVRSwgTUVTU0FHRSwgUkVUKSBpZihWQUxVRSA9PSBOVUxMKSB7
IGlmIChtYXhfY29uZmlnX2dldF9ib29sKE1BWF9DT05GSUdfU1RBVElDX0lOVEVSRkFDRV9BQk9S
VF9PTl9FUlJPUikpIHsgZnByaW50ZihzdGRlcnIsICIlc1xuJXNcbiIsIChzdG9yZWRfZXJyb3Ig
PT0gTlVMTCkgPyAiIiA6IHN0b3JlZF9lcnJvciwgTUVTU0FHRSk7IGFib3J0KCk7IH0gc2V0X2Vy
cm9yKE1FU1NBR0UpOyByZXR1cm4gUkVUOyB9CgogCnR5cGVkZWYgc3RydWN0IEZpZWxkQWNjdW11
bGF0b3JfY2FsbGJhY2tfc3RyZWFtIHsKCXVpbnQ4X3QgKnVzZXJfcHRyOwoJdWludDhfdCAqYWxp
Z25lZF9wdHI7CglzaXplX3QgICBzaXplOwoJaW50ICAgICAgaXNfb3V0cHV0Owp9IEZpZWxkQWNj
dW11bGF0b3JfY2FsbGJhY2tfc3RyZWFtX3Q7Cgp0eXBlZGVmIHN0cnVjdCBGaWVsZEFjY3VtdWxh
dG9yX2NhbGxiYWNrX2RhdGEgewoJRmllbGRBY2N1bXVsYXRvcl9jYWxsYmFja19zdHJlYW1fdCBz
dHJlYW1bMl07IAoJaW50IGNvdW50OwoJaW50IG1heF9jb3VudDsKfSBGaWVsZEFjY3VtdWxhdG9y
X2NhbGxiYWNrX2RhdGFfdDsKCnN0YXRpYyB2b2lkIEZpZWxkQWNjdW11bGF0b3JfY2FsbGJhY2tf
aW50ZXJuYWwodm9pZCAqY2JfZGF0YSkKewoJRmllbGRBY2N1bXVsYXRvcl9jYWxsYmFja19kYXRh
X3QgKmRhdGEgPSAoRmllbGRBY2N1bXVsYXRvcl9jYWxsYmFja19kYXRhX3QqKSBjYl9kYXRhOwoJ
Zm9yIChpbnQgaSA9IDAgOyBpIDwgZGF0YS0+Y291bnQgOyBpKysgKSB7CgkJRmllbGRBY2N1bXVs
YXRvcl9jYWxsYmFja19zdHJlYW1fdCAqcyA9ICZkYXRhLT5zdHJlYW1baV07CgkJaWYgKHMtPmlz
X291dHB1dCAmJiAocy0+c2l6ZSA+IDApKSB7CgkJCW1lbWNweShzLT51c2VyX3B0ciwgcy0+YWxp
Z25lZF9wdHIsIHMtPnNpemUpOwoJCX0KCQlmcmVlKHMtPmFsaWduZWRfcHRyKTsKCX0KCWZyZWUo
ZGF0YSk7Cn0KCnN0YXRpYyBtYXhfYWN0aW9uc190KiBGaWVsZEFjY3VtdWxhdG9yX2NvbnZlcnRf
aW50ZXJuYWwoCgltYXhfZmlsZV90ICptYXhmaWxlLAoJRmllbGRBY2N1bXVsYXRvcl9hY3Rpb25z
X3QgKmludGVyZmFjZV9hY3Rpb25zLAoJaW50ICBpc19pbnRlcm5hbF9jYWxsLAoJdm9pZCAoKipj
YWxsYmFja19mdW5jKSh2b2lkKiksCgl2b2lkICoqY2FsbGJhY2tfZGF0YSkKewoJbWF4X2FjdGlv
bnNfdCAqYWN0aW9ucyA9IG1heF9hY3Rpb25zX2luaXQobWF4ZmlsZSwgTlVMTCk7CglpZihhY3Rp
b25zID09IE5VTEwpIHJldHVybiBOVUxMOwoKI2RlZmluZSBDSEVDS19FUlJPUlMgaWYoIW1heF9v
ayhhY3Rpb25zLT5lcnJvcnMpKSB7IHNldF9lcnJvcl9hbmRfZnJlZShtYXhfZXJyb3JzX3RyYWNl
KGFjdGlvbnMtPmVycm9ycykpOyByZXR1cm4gTlVMTDsgfSAKCglGaWVsZEFjY3VtdWxhdG9yX2Nh
bGxiYWNrX2RhdGFfdCAqY2JfZGF0YSA9IE5VTEw7CglpbnQgdXNlX2NhbGxiYWNrID0gKGNhbGxi
YWNrX2Z1bmMgIT0gTlVMTCkgJiYgKGNhbGxiYWNrX2RhdGEgIT0gTlVMTCk7CglpZiAodXNlX2Nh
bGxiYWNrKSB7CgkJY2JfZGF0YSA9IG1hbGxvYyhzaXplb2YoRmllbGRBY2N1bXVsYXRvcl9jYWxs
YmFja19kYXRhX3QpKTsKCQlpZiAoY2JfZGF0YSA9PSBOVUxMKSB7CgkJCWZwcmludGYoc3RkZXJy
LCAiVW5hYmxlIHRvIGFsbG9jYXRlIG1lbW9yeSBmb3Igc3RyZWFtIGNhbGxiYWNrIGRhdGEgaW4g
ZnVuY3Rpb24gRmllbGRBY2N1bXVsYXRvcl9jb252ZXJ0X2ludGVybmFsXG4iKTsKCQkJcmV0dXJu
IE5VTEw7CgkJfQoJCWNiX2RhdGEtPm1heF9jb3VudCA9IDI7CgkJY2JfZGF0YS0+Y291bnQgICAg
ID0gMDsKCQkqY2FsbGJhY2tfZGF0YSAgICAgPSBjYl9kYXRhOwoJCSpjYWxsYmFja19mdW5jICAg
ICA9ICZGaWVsZEFjY3VtdWxhdG9yX2NhbGxiYWNrX2ludGVybmFsOwoJfQoKCS8qIGNvZGUgZm9y
IHNjYWxhciBTbGljZXJGcmFtZXJfbmV0d29ya19tZ210X3N0cmVhbV9mcm9tX2hvc3RfdHhfZnJh
bWVkLmVvZkNvdW50ICovCgl1aW50NjRfdCAqb3V0c2NhbGFyX1NsaWNlckZyYW1lcl9uZXR3b3Jr
X21nbXRfc3RyZWFtX2Zyb21faG9zdF90eF9mcmFtZWRfZW9mQ291bnQgPSBpbnRlcmZhY2VfYWN0
aW9ucy0+b3V0c2NhbGFyX1NsaWNlckZyYW1lcl9uZXR3b3JrX21nbXRfc3RyZWFtX2Zyb21faG9z
dF90eF9mcmFtZWRfZW9mQ291bnQ7CgltYXhfZ2V0X3VpbnQ2NHQoYWN0aW9ucywgIlNsaWNlckZy
YW1lcl9uZXR3b3JrX21nbXRfc3RyZWFtX2Zyb21faG9zdF90eF9mcmFtZWQiLCAiZW9mQ291bnQi
LCBvdXRzY2FsYXJfU2xpY2VyRnJhbWVyX25ldHdvcmtfbWdtdF9zdHJlYW1fZnJvbV9ob3N0X3R4
X2ZyYW1lZF9lb2ZDb3VudCk7CglDSEVDS19FUlJPUlM7CgkvKiBlbmQgb2YgY29kZSBmb3Igc2Nh
bGFyIFNsaWNlckZyYW1lcl9uZXR3b3JrX21nbXRfc3RyZWFtX2Zyb21faG9zdF90eF9mcmFtZWQu
ZW9mQ291bnQqLwoJCgkvKiBjb2RlIGZvciBzY2FsYXIgU2xpY2VyRnJhbWVyX25ldHdvcmtfbWdt
dF9zdHJlYW1fZnJvbV9ob3N0X3R4X2ZyYW1lZC5zb2ZDb3VudCAqLwoJdWludDY0X3QgKm91dHNj
YWxhcl9TbGljZXJGcmFtZXJfbmV0d29ya19tZ210X3N0cmVhbV9mcm9tX2hvc3RfdHhfZnJhbWVk
X3NvZkNvdW50ID0gaW50ZXJmYWNlX2FjdGlvbnMtPm91dHNjYWxhcl9TbGljZXJGcmFtZXJfbmV0
d29ya19tZ210X3N0cmVhbV9mcm9tX2hvc3RfdHhfZnJhbWVkX3NvZkNvdW50OwoJbWF4X2dldF91
aW50NjR0KGFjdGlvbnMsICJTbGljZXJGcmFtZXJfbmV0d29ya19tZ210X3N0cmVhbV9mcm9tX2hv
c3RfdHhfZnJhbWVkIiwgInNvZkNvdW50Iiwgb3V0c2NhbGFyX1NsaWNlckZyYW1lcl9uZXR3b3Jr
X21nbXRfc3RyZWFtX2Zyb21faG9zdF90eF9mcmFtZWRfc29mQ291bnQpOwoJQ0hFQ0tfRVJST1JT
OwoJLyogZW5kIG9mIGNvZGUgZm9yIHNjYWxhciBTbGljZXJGcmFtZXJfbmV0d29ya19tZ210X3N0
cmVhbV9mcm9tX2hvc3RfdHhfZnJhbWVkLnNvZkNvdW50Ki8KCQoJLyogY29kZSBmb3Igc2NhbGFy
IG5ldHdvcmtfbWdtdF9zdHJlYW1fdG9faG9zdF9yeF9mcmFtZWRfRnJhbWVkU3RyZWFtUHJlcHJv
Y2Vzc29yLmVvZkNvdW50ICovCgl1aW50NjRfdCAqb3V0c2NhbGFyX25ldHdvcmtfbWdtdF9zdHJl
YW1fdG9faG9zdF9yeF9mcmFtZWRfRnJhbWVkU3RyZWFtUHJlcHJvY2Vzc29yX2VvZkNvdW50ID0g
aW50ZXJmYWNlX2FjdGlvbnMtPm91dHNjYWxhcl9uZXR3b3JrX21nbXRfc3RyZWFtX3RvX2hvc3Rf
cnhfZnJhbWVkX0ZyYW1lZFN0cmVhbVByZXByb2Nlc3Nvcl9lb2ZDb3VudDsKCW1heF9nZXRfdWlu
dDY0dChhY3Rpb25zLCAibmV0d29ya19tZ210X3N0cmVhbV90b19ob3N0X3J4X2ZyYW1lZF9GcmFt
ZWRTdHJlYW1QcmVwcm9jZXNzb3IiLCAiZW9mQ291bnQiLCBvdXRzY2FsYXJfbmV0d29ya19tZ210
X3N0cmVhbV90b19ob3N0X3J4X2ZyYW1lZF9GcmFtZWRTdHJlYW1QcmVwcm9jZXNzb3JfZW9mQ291
bnQpOwoJQ0hFQ0tfRVJST1JTOwoJLyogZW5kIG9mIGNvZGUgZm9yIHNjYWxhciBuZXR3b3JrX21n
bXRfc3RyZWFtX3RvX2hvc3RfcnhfZnJhbWVkX0ZyYW1lZFN0cmVhbVByZXByb2Nlc3Nvci5lb2ZD
b3VudCovCgkKCS8qIGNvZGUgZm9yIHNjYWxhciBuZXR3b3JrX21nbXRfc3RyZWFtX3RvX2hvc3Rf
cnhfZnJhbWVkX0ZyYW1lZFN0cmVhbVByZXByb2Nlc3Nvci5zb2ZDb3VudCAqLwoJdWludDY0X3Qg
Km91dHNjYWxhcl9uZXR3b3JrX21nbXRfc3RyZWFtX3RvX2hvc3RfcnhfZnJhbWVkX0ZyYW1lZFN0
cmVhbVByZXByb2Nlc3Nvcl9zb2ZDb3VudCA9IGludGVyZmFjZV9hY3Rpb25zLT5vdXRzY2FsYXJf
bmV0d29ya19tZ210X3N0cmVhbV90b19ob3N0X3J4X2ZyYW1lZF9GcmFtZWRTdHJlYW1QcmVwcm9j
ZXNzb3Jfc29mQ291bnQ7CgltYXhfZ2V0X3VpbnQ2NHQoYWN0aW9ucywgIm5ldHdvcmtfbWdtdF9z
dHJlYW1fdG9faG9zdF9yeF9mcmFtZWRfRnJhbWVkU3RyZWFtUHJlcHJvY2Vzc29yIiwgInNvZkNv
dW50Iiwgb3V0c2NhbGFyX25ldHdvcmtfbWdtdF9zdHJlYW1fdG9faG9zdF9yeF9mcmFtZWRfRnJh
bWVkU3RyZWFtUHJlcHJvY2Vzc29yX3NvZkNvdW50KTsKCUNIRUNLX0VSUk9SUzsKCS8qIGVuZCBv
ZiBjb2RlIGZvciBzY2FsYXIgbmV0d29ya19tZ210X3N0cmVhbV90b19ob3N0X3J4X2ZyYW1lZF9G
cmFtZWRTdHJlYW1QcmVwcm9jZXNzb3Iuc29mQ291bnQqLwoJCgltYXhfaWdub3JlX3NjYWxhcihh
Y3Rpb25zLCAicXNmcF90b3BfMTBnX3BvcnQxX2FycF9zZXJ2ZXIiLCAiaXBfYWRkcmVzcyIgKTsK
CUNIRUNLX0VSUk9SUzsKCQoJbWF4X2lnbm9yZV9zY2FsYXIoYWN0aW9ucywgInFzZnBfdG9wXzEw
Z19wb3J0MV9hcnBfc2VydmVyIiwgIm1hY19hZGRyZXNzIiApOwoJQ0hFQ0tfRVJST1JTOwoJCglt
YXhfaWdub3JlX3NjYWxhcihhY3Rpb25zLCAicXNmcF90b3BfMTBnX3BvcnQxX2V0aF9yeF90b19o
b3N0X2Ryb3AiLCAiYmFkRnJhbWVzQ291bnRlciIgKTsKCUNIRUNLX0VSUk9SUzsKCQoJbWF4X2ln
bm9yZV9zY2FsYXIoYWN0aW9ucywgInFzZnBfdG9wXzEwZ19wb3J0MV9ldGhfcnhfdG9faG9zdF9m
aWx0ZXIiLCAiZW5hYmxlIiApOwoJQ0hFQ0tfRVJST1JTOwoJCgltYXhfaWdub3JlX3NjYWxhcihh
Y3Rpb25zLCAicXNmcF90b3BfMTBnX3BvcnQxX2V0aF90eF9mcm9tX2hvc3RfcmVtX2NvbnYiLCAi
YmFkRnJhbWVzQ291bnRlciIgKTsKCUNIRUNLX0VSUk9SUzsKCQoJbWF4X2lnbm9yZV9zY2FsYXIo
YWN0aW9ucywgInFzZnBfdG9wXzEwZ19wb3J0MV91ZHBfcngiLCAiYmNhc3RfaXAiICk7CglDSEVD
S19FUlJPUlM7CgkKCW1heF9pZ25vcmVfc2NhbGFyKGFjdGlvbnMsICJxc2ZwX3RvcF8xMGdfcG9y
dDFfdWRwX3J4IiwgImZpbHRlcl9sb2NhbF9wb3J0XzAiICk7CglDSEVDS19FUlJPUlM7CgkKCW1h
eF9pZ25vcmVfc2NhbGFyKGFjdGlvbnMsICJxc2ZwX3RvcF8xMGdfcG9ydDFfdWRwX3J4IiwgImZp
bHRlcl9sb2NhbF9wb3J0XzEiICk7CglDSEVDS19FUlJPUlM7CgkKCW1heF9pZ25vcmVfc2NhbGFy
KGFjdGlvbnMsICJxc2ZwX3RvcF8xMGdfcG9ydDFfdWRwX3J4IiwgImZpbHRlcl9sb2NhbF9wb3J0
XzEwIiApOwoJQ0hFQ0tfRVJST1JTOwoJCgltYXhfaWdub3JlX3NjYWxhcihhY3Rpb25zLCAicXNm
cF90b3BfMTBnX3BvcnQxX3VkcF9yeCIsICJmaWx0ZXJfbG9jYWxfcG9ydF8xMSIgKTsKCUNIRUNL
X0VSUk9SUzsKCQoJbWF4X2lnbm9yZV9zY2FsYXIoYWN0aW9ucywgInFzZnBfdG9wXzEwZ19wb3J0
MV91ZHBfcngiLCAiZmlsdGVyX2xvY2FsX3BvcnRfMTIiICk7CglDSEVDS19FUlJPUlM7CgkKCW1h
eF9pZ25vcmVfc2NhbGFyKGFjdGlvbnMsICJxc2ZwX3RvcF8xMGdfcG9ydDFfdWRwX3J4IiwgImZp
bHRlcl9sb2NhbF9wb3J0XzEzIiApOwoJQ0hFQ0tfRVJST1JTOwoJCgltYXhfaWdub3JlX3NjYWxh
cihhY3Rpb25zLCAicXNmcF90b3BfMTBnX3BvcnQxX3VkcF9yeCIsICJmaWx0ZXJfbG9jYWxfcG9y
dF8xNCIgKTsKCUNIRUNLX0VSUk9SUzsKCQoJbWF4X2lnbm9yZV9zY2FsYXIoYWN0aW9ucywgInFz
ZnBfdG9wXzEwZ19wb3J0MV91ZHBfcngiLCAiZmlsdGVyX2xvY2FsX3BvcnRfMTUiICk7CglDSEVD
S19FUlJPUlM7CgkKCW1heF9pZ25vcmVfc2NhbGFyKGFjdGlvbnMsICJxc2ZwX3RvcF8xMGdfcG9y
dDFfdWRwX3J4IiwgImZpbHRlcl9sb2NhbF9wb3J0XzIiICk7CglDSEVDS19FUlJPUlM7CgkKCW1h
eF9pZ25vcmVfc2NhbGFyKGFjdGlvbnMsICJxc2ZwX3RvcF8xMGdfcG9ydDFfdWRwX3J4IiwgImZp
bHRlcl9sb2NhbF9wb3J0XzMiICk7CglDSEVDS19FUlJPUlM7CgkKCW1heF9pZ25vcmVfc2NhbGFy
KGFjdGlvbnMsICJxc2ZwX3RvcF8xMGdfcG9ydDFfdWRwX3J4IiwgImZpbHRlcl9sb2NhbF9wb3J0
XzQiICk7CglDSEVDS19FUlJPUlM7CgkKCW1heF9pZ25vcmVfc2NhbGFyKGFjdGlvbnMsICJxc2Zw
X3RvcF8xMGdfcG9ydDFfdWRwX3J4IiwgImZpbHRlcl9sb2NhbF9wb3J0XzUiICk7CglDSEVDS19F
UlJPUlM7CgkKCW1heF9pZ25vcmVfc2NhbGFyKGFjdGlvbnMsICJxc2ZwX3RvcF8xMGdfcG9ydDFf
dWRwX3J4IiwgImZpbHRlcl9sb2NhbF9wb3J0XzYiICk7CglDSEVDS19FUlJPUlM7CgkKCW1heF9p
Z25vcmVfc2NhbGFyKGFjdGlvbnMsICJxc2ZwX3RvcF8xMGdfcG9ydDFfdWRwX3J4IiwgImZpbHRl
cl9sb2NhbF9wb3J0XzciICk7CglDSEVDS19FUlJPUlM7CgkKCW1heF9pZ25vcmVfc2NhbGFyKGFj
dGlvbnMsICJxc2ZwX3RvcF8xMGdfcG9ydDFfdWRwX3J4IiwgImZpbHRlcl9sb2NhbF9wb3J0Xzgi
ICk7CglDSEVDS19FUlJPUlM7CgkKCW1heF9pZ25vcmVfc2NhbGFyKGFjdGlvbnMsICJxc2ZwX3Rv
cF8xMGdfcG9ydDFfdWRwX3J4IiwgImZpbHRlcl9sb2NhbF9wb3J0XzkiICk7CglDSEVDS19FUlJP
UlM7CgkKCW1heF9pZ25vcmVfc2NhbGFyKGFjdGlvbnMsICJxc2ZwX3RvcF8xMGdfcG9ydDFfdWRw
X3J4IiwgImZpbHRlcl9tY2FzdF9pcF8wIiApOwoJQ0hFQ0tfRVJST1JTOwoJCgltYXhfaWdub3Jl
X3NjYWxhcihhY3Rpb25zLCAicXNmcF90b3BfMTBnX3BvcnQxX3VkcF9yeCIsICJmaWx0ZXJfbWNh
c3RfaXBfMSIgKTsKCUNIRUNLX0VSUk9SUzsKCQoJbWF4X2lnbm9yZV9zY2FsYXIoYWN0aW9ucywg
InFzZnBfdG9wXzEwZ19wb3J0MV91ZHBfcngiLCAiZmlsdGVyX21jYXN0X2lwXzEwIiApOwoJQ0hF
Q0tfRVJST1JTOwoJCgltYXhfaWdub3JlX3NjYWxhcihhY3Rpb25zLCAicXNmcF90b3BfMTBnX3Bv
cnQxX3VkcF9yeCIsICJmaWx0ZXJfbWNhc3RfaXBfMTEiICk7CglDSEVDS19FUlJPUlM7CgkKCW1h
eF9pZ25vcmVfc2NhbGFyKGFjdGlvbnMsICJxc2ZwX3RvcF8xMGdfcG9ydDFfdWRwX3J4IiwgImZp
bHRlcl9tY2FzdF9pcF8xMiIgKTsKCUNIRUNLX0VSUk9SUzsKCQoJbWF4X2lnbm9yZV9zY2FsYXIo
YWN0aW9ucywgInFzZnBfdG9wXzEwZ19wb3J0MV91ZHBfcngiLCAiZmlsdGVyX21jYXN0X2lwXzEz
IiApOwoJQ0hFQ0tfRVJST1JTOwoJCgltYXhfaWdub3JlX3NjYWxhcihhY3Rpb25zLCAicXNmcF90
b3BfMTBnX3BvcnQxX3VkcF9yeCIsICJmaWx0ZXJfbWNhc3RfaXBfMTQiICk7CglDSEVDS19FUlJP
UlM7CgkKCW1heF9pZ25vcmVfc2NhbGFyKGFjdGlvbnMsICJxc2ZwX3RvcF8xMGdfcG9ydDFfdWRw
X3J4IiwgImZpbHRlcl9tY2FzdF9pcF8xNSIgKTsKCUNIRUNLX0VSUk9SUzsKCQoJbWF4X2lnbm9y
ZV9zY2FsYXIoYWN0aW9ucywgInFzZnBfdG9wXzEwZ19wb3J0MV91ZHBfcngiLCAiZmlsdGVyX21j
YXN0X2lwXzIiICk7CglDSEVDS19FUlJPUlM7CgkKCW1heF9pZ25vcmVfc2NhbGFyKGFjdGlvbnMs
ICJxc2ZwX3RvcF8xMGdfcG9ydDFfdWRwX3J4IiwgImZpbHRlcl9tY2FzdF9pcF8zIiApOwoJQ0hF
Q0tfRVJST1JTOwoJCgltYXhfaWdub3JlX3NjYWxhcihhY3Rpb25zLCAicXNmcF90b3BfMTBnX3Bv
cnQxX3VkcF9yeCIsICJmaWx0ZXJfbWNhc3RfaXBfNCIgKTsKCUNIRUNLX0VSUk9SUzsKCQoJbWF4
X2lnbm9yZV9zY2FsYXIoYWN0aW9ucywgInFzZnBfdG9wXzEwZ19wb3J0MV91ZHBfcngiLCAiZmls
dGVyX21jYXN0X2lwXzUiICk7CglDSEVDS19FUlJPUlM7CgkKCW1heF9pZ25vcmVfc2NhbGFyKGFj
dGlvbnMsICJxc2ZwX3RvcF8xMGdfcG9ydDFfdWRwX3J4IiwgImZpbHRlcl9tY2FzdF9pcF82IiAp
OwoJQ0hFQ0tfRVJST1JTOwoJCgltYXhfaWdub3JlX3NjYWxhcihhY3Rpb25zLCAicXNmcF90b3Bf
MTBnX3BvcnQxX3VkcF9yeCIsICJmaWx0ZXJfbWNhc3RfaXBfNyIgKTsKCUNIRUNLX0VSUk9SUzsK
CQoJbWF4X2lnbm9yZV9zY2FsYXIoYWN0aW9ucywgInFzZnBfdG9wXzEwZ19wb3J0MV91ZHBfcngi
LCAiZmlsdGVyX21jYXN0X2lwXzgiICk7CglDSEVDS19FUlJPUlM7CgkKCW1heF9pZ25vcmVfc2Nh
bGFyKGFjdGlvbnMsICJxc2ZwX3RvcF8xMGdfcG9ydDFfdWRwX3J4IiwgImZpbHRlcl9tY2FzdF9p
cF85IiApOwoJQ0hFQ0tfRVJST1JTOwoJCgltYXhfaWdub3JlX3NjYWxhcihhY3Rpb25zLCAicXNm
cF90b3BfMTBnX3BvcnQxX3VkcF9yeCIsICJmaWx0ZXJfc3JjX2lwXzAiICk7CglDSEVDS19FUlJP
UlM7CgkKCW1heF9pZ25vcmVfc2NhbGFyKGFjdGlvbnMsICJxc2ZwX3RvcF8xMGdfcG9ydDFfdWRw
X3J4IiwgImZpbHRlcl9zcmNfaXBfMSIgKTsKCUNIRUNLX0VSUk9SUzsKCQoJbWF4X2lnbm9yZV9z
Y2FsYXIoYWN0aW9ucywgInFzZnBfdG9wXzEwZ19wb3J0MV91ZHBfcngiLCAiZmlsdGVyX3NyY19p
cF8xMCIgKTsKCUNIRUNLX0VSUk9SUzsKCQoJbWF4X2lnbm9yZV9zY2FsYXIoYWN0aW9ucywgInFz
ZnBfdG9wXzEwZ19wb3J0MV91ZHBfcngiLCAiZmlsdGVyX3NyY19pcF8xMSIgKTsKCUNIRUNLX0VS
Uk9SUzsKCQoJbWF4X2lnbm9yZV9zY2FsYXIoYWN0aW9ucywgInFzZnBfdG9wXzEwZ19wb3J0MV91
ZHBfcngiLCAiZmlsdGVyX3NyY19pcF8xMiIgKTsKCUNIRUNLX0VSUk9SUzsKCQoJbWF4X2lnbm9y
ZV9zY2FsYXIoYWN0aW9ucywgInFzZnBfdG9wXzEwZ19wb3J0MV91ZHBfcngiLCAiZmlsdGVyX3Ny
Y19pcF8xMyIgKTsKCUNIRUNLX0VSUk9SUzsKCQoJbWF4X2lnbm9yZV9zY2FsYXIoYWN0aW9ucywg
InFzZnBfdG9wXzEwZ19wb3J0MV91ZHBfcngiLCAiZmlsdGVyX3NyY19pcF8xNCIgKTsKCUNIRUNL
X0VSUk9SUzsKCQoJbWF4X2lnbm9yZV9zY2FsYXIoYWN0aW9ucywgInFzZnBfdG9wXzEwZ19wb3J0
MV91ZHBfcngiLCAiZmlsdGVyX3NyY19pcF8xNSIgKTsKCUNIRUNLX0VSUk9SUzsKCQoJbWF4X2ln
bm9yZV9zY2FsYXIoYWN0aW9ucywgInFzZnBfdG9wXzEwZ19wb3J0MV91ZHBfcngiLCAiZmlsdGVy
X3NyY19pcF8yIiApOwoJQ0hFQ0tfRVJST1JTOwoJCgltYXhfaWdub3JlX3NjYWxhcihhY3Rpb25z
LCAicXNmcF90b3BfMTBnX3BvcnQxX3VkcF9yeCIsICJmaWx0ZXJfc3JjX2lwXzMiICk7CglDSEVD
S19FUlJPUlM7CgkKCW1heF9pZ25vcmVfc2NhbGFyKGFjdGlvbnMsICJxc2ZwX3RvcF8xMGdfcG9y
dDFfdWRwX3J4IiwgImZpbHRlcl9zcmNfaXBfNCIgKTsKCUNIRUNLX0VSUk9SUzsKCQoJbWF4X2ln
bm9yZV9zY2FsYXIoYWN0aW9ucywgInFzZnBfdG9wXzEwZ19wb3J0MV91ZHBfcngiLCAiZmlsdGVy
X3NyY19pcF81IiApOwoJQ0hFQ0tfRVJST1JTOwoJCgltYXhfaWdub3JlX3NjYWxhcihhY3Rpb25z
LCAicXNmcF90b3BfMTBnX3BvcnQxX3VkcF9yeCIsICJmaWx0ZXJfc3JjX2lwXzYiICk7CglDSEVD
S19FUlJPUlM7CgkKCW1heF9pZ25vcmVfc2NhbGFyKGFjdGlvbnMsICJxc2ZwX3RvcF8xMGdfcG9y
dDFfdWRwX3J4IiwgImZpbHRlcl9zcmNfaXBfNyIgKTsKCUNIRUNLX0VSUk9SUzsKCQoJbWF4X2ln
bm9yZV9zY2FsYXIoYWN0aW9ucywgInFzZnBfdG9wXzEwZ19wb3J0MV91ZHBfcngiLCAiZmlsdGVy
X3NyY19pcF84IiApOwoJQ0hFQ0tfRVJST1JTOwoJCgltYXhfaWdub3JlX3NjYWxhcihhY3Rpb25z
LCAicXNmcF90b3BfMTBnX3BvcnQxX3VkcF9yeCIsICJmaWx0ZXJfc3JjX2lwXzkiICk7CglDSEVD
S19FUlJPUlM7CgkKCW1heF9pZ25vcmVfc2NhbGFyKGFjdGlvbnMsICJxc2ZwX3RvcF8xMGdfcG9y
dDFfdWRwX3J4IiwgImZpbHRlcl9zcmNfcG9ydF8wIiApOwoJQ0hFQ0tfRVJST1JTOwoJCgltYXhf
aWdub3JlX3NjYWxhcihhY3Rpb25zLCAicXNmcF90b3BfMTBnX3BvcnQxX3VkcF9yeCIsICJmaWx0
ZXJfc3JjX3BvcnRfMSIgKTsKCUNIRUNLX0VSUk9SUzsKCQoJbWF4X2lnbm9yZV9zY2FsYXIoYWN0
aW9ucywgInFzZnBfdG9wXzEwZ19wb3J0MV91ZHBfcngiLCAiZmlsdGVyX3NyY19wb3J0XzEwIiAp
OwoJQ0hFQ0tfRVJST1JTOwoJCgltYXhfaWdub3JlX3NjYWxhcihhY3Rpb25zLCAicXNmcF90b3Bf
MTBnX3BvcnQxX3VkcF9yeCIsICJmaWx0ZXJfc3JjX3BvcnRfMTEiICk7CglDSEVDS19FUlJPUlM7
CgkKCW1heF9pZ25vcmVfc2NhbGFyKGFjdGlvbnMsICJxc2ZwX3RvcF8xMGdfcG9ydDFfdWRwX3J4
IiwgImZpbHRlcl9zcmNfcG9ydF8xMiIgKTsKCUNIRUNLX0VSUk9SUzsKCQoJbWF4X2lnbm9yZV9z
Y2FsYXIoYWN0aW9ucywgInFzZnBfdG9wXzEwZ19wb3J0MV91ZHBfcngiLCAiZmlsdGVyX3NyY19w
b3J0XzEzIiApOwoJQ0hFQ0tfRVJST1JTOwoJCgltYXhfaWdub3JlX3NjYWxhcihhY3Rpb25zLCAi
cXNmcF90b3BfMTBnX3BvcnQxX3VkcF9yeCIsICJmaWx0ZXJfc3JjX3BvcnRfMTQiICk7CglDSEVD
S19FUlJPUlM7CgkKCW1heF9pZ25vcmVfc2NhbGFyKGFjdGlvbnMsICJxc2ZwX3RvcF8xMGdfcG9y
dDFfdWRwX3J4IiwgImZpbHRlcl9zcmNfcG9ydF8xNSIgKTsKCUNIRUNLX0VSUk9SUzsKCQoJbWF4
X2lnbm9yZV9zY2FsYXIoYWN0aW9ucywgInFzZnBfdG9wXzEwZ19wb3J0MV91ZHBfcngiLCAiZmls
dGVyX3NyY19wb3J0XzIiICk7CglDSEVDS19FUlJPUlM7CgkKCW1heF9pZ25vcmVfc2NhbGFyKGFj
dGlvbnMsICJxc2ZwX3RvcF8xMGdfcG9ydDFfdWRwX3J4IiwgImZpbHRlcl9zcmNfcG9ydF8zIiAp
OwoJQ0hFQ0tfRVJST1JTOwoJCgltYXhfaWdub3JlX3NjYWxhcihhY3Rpb25zLCAicXNmcF90b3Bf
MTBnX3BvcnQxX3VkcF9yeCIsICJmaWx0ZXJfc3JjX3BvcnRfNCIgKTsKCUNIRUNLX0VSUk9SUzsK
CQoJbWF4X2lnbm9yZV9zY2FsYXIoYWN0aW9ucywgInFzZnBfdG9wXzEwZ19wb3J0MV91ZHBfcngi
LCAiZmlsdGVyX3NyY19wb3J0XzUiICk7CglDSEVDS19FUlJPUlM7CgkKCW1heF9pZ25vcmVfc2Nh
bGFyKGFjdGlvbnMsICJxc2ZwX3RvcF8xMGdfcG9ydDFfdWRwX3J4IiwgImZpbHRlcl9zcmNfcG9y
dF82IiApOwoJQ0hFQ0tfRVJST1JTOwoJCgltYXhfaWdub3JlX3NjYWxhcihhY3Rpb25zLCAicXNm
cF90b3BfMTBnX3BvcnQxX3VkcF9yeCIsICJmaWx0ZXJfc3JjX3BvcnRfNyIgKTsKCUNIRUNLX0VS
Uk9SUzsKCQoJbWF4X2lnbm9yZV9zY2FsYXIoYWN0aW9ucywgInFzZnBfdG9wXzEwZ19wb3J0MV91
ZHBfcngiLCAiZmlsdGVyX3NyY19wb3J0XzgiICk7CglDSEVDS19FUlJPUlM7CgkKCW1heF9pZ25v
cmVfc2NhbGFyKGFjdGlvbnMsICJxc2ZwX3RvcF8xMGdfcG9ydDFfdWRwX3J4IiwgImZpbHRlcl9z
cmNfcG9ydF85IiApOwoJQ0hFQ0tfRVJST1JTOwoJCgltYXhfaWdub3JlX3NjYWxhcihhY3Rpb25z
LCAicXNmcF90b3BfMTBnX3BvcnQxX3VkcF9yeCIsICJmaWx0ZXJfdmFsaWRfMCIgKTsKCUNIRUNL
X0VSUk9SUzsKCQoJbWF4X2lnbm9yZV9zY2FsYXIoYWN0aW9ucywgInFzZnBfdG9wXzEwZ19wb3J0
MV91ZHBfcngiLCAiZmlsdGVyX3ZhbGlkXzEiICk7CglDSEVDS19FUlJPUlM7CgkKCW1heF9pZ25v
cmVfc2NhbGFyKGFjdGlvbnMsICJxc2ZwX3RvcF8xMGdfcG9ydDFfdWRwX3J4IiwgImZpbHRlcl92
YWxpZF8xMCIgKTsKCUNIRUNLX0VSUk9SUzsKCQoJbWF4X2lnbm9yZV9zY2FsYXIoYWN0aW9ucywg
InFzZnBfdG9wXzEwZ19wb3J0MV91ZHBfcngiLCAiZmlsdGVyX3ZhbGlkXzExIiApOwoJQ0hFQ0tf
RVJST1JTOwoJCgltYXhfaWdub3JlX3NjYWxhcihhY3Rpb25zLCAicXNmcF90b3BfMTBnX3BvcnQx
X3VkcF9yeCIsICJmaWx0ZXJfdmFsaWRfMTIiICk7CglDSEVDS19FUlJPUlM7CgkKCW1heF9pZ25v
cmVfc2NhbGFyKGFjdGlvbnMsICJxc2ZwX3RvcF8xMGdfcG9ydDFfdWRwX3J4IiwgImZpbHRlcl92
YWxpZF8xMyIgKTsKCUNIRUNLX0VSUk9SUzsKCQoJbWF4X2lnbm9yZV9zY2FsYXIoYWN0aW9ucywg
InFzZnBfdG9wXzEwZ19wb3J0MV91ZHBfcngiLCAiZmlsdGVyX3ZhbGlkXzE0IiApOwoJQ0hFQ0tf
RVJST1JTOwoJCgltYXhfaWdub3JlX3NjYWxhcihhY3Rpb25zLCAicXNmcF90b3BfMTBnX3BvcnQx
X3VkcF9yeCIsICJmaWx0ZXJfdmFsaWRfMTUiICk7CglDSEVDS19FUlJPUlM7CgkKCW1heF9pZ25v
cmVfc2NhbGFyKGFjdGlvbnMsICJxc2ZwX3RvcF8xMGdfcG9ydDFfdWRwX3J4IiwgImZpbHRlcl92
YWxpZF8yIiApOwoJQ0hFQ0tfRVJST1JTOwoJCgltYXhfaWdub3JlX3NjYWxhcihhY3Rpb25zLCAi
cXNmcF90b3BfMTBnX3BvcnQxX3VkcF9yeCIsICJmaWx0ZXJfdmFsaWRfMyIgKTsKCUNIRUNLX0VS
Uk9SUzsKCQoJbWF4X2lnbm9yZV9zY2FsYXIoYWN0aW9ucywgInFzZnBfdG9wXzEwZ19wb3J0MV91
ZHBfcngiLCAiZmlsdGVyX3ZhbGlkXzQiICk7CglDSEVDS19FUlJPUlM7CgkKCW1heF9pZ25vcmVf
c2NhbGFyKGFjdGlvbnMsICJxc2ZwX3RvcF8xMGdfcG9ydDFfdWRwX3J4IiwgImZpbHRlcl92YWxp
ZF81IiApOwoJQ0hFQ0tfRVJST1JTOwoJCgltYXhfaWdub3JlX3NjYWxhcihhY3Rpb25zLCAicXNm
cF90b3BfMTBnX3BvcnQxX3VkcF9yeCIsICJmaWx0ZXJfdmFsaWRfNiIgKTsKCUNIRUNLX0VSUk9S
UzsKCQoJbWF4X2lnbm9yZV9zY2FsYXIoYWN0aW9ucywgInFzZnBfdG9wXzEwZ19wb3J0MV91ZHBf
cngiLCAiZmlsdGVyX3ZhbGlkXzciICk7CglDSEVDS19FUlJPUlM7CgkKCW1heF9pZ25vcmVfc2Nh
bGFyKGFjdGlvbnMsICJxc2ZwX3RvcF8xMGdfcG9ydDFfdWRwX3J4IiwgImZpbHRlcl92YWxpZF84
IiApOwoJQ0hFQ0tfRVJST1JTOwoJCgltYXhfaWdub3JlX3NjYWxhcihhY3Rpb25zLCAicXNmcF90
b3BfMTBnX3BvcnQxX3VkcF9yeCIsICJmaWx0ZXJfdmFsaWRfOSIgKTsKCUNIRUNLX0VSUk9SUzsK
CQoJbWF4X2lnbm9yZV9zY2FsYXIoYWN0aW9ucywgInFzZnBfdG9wXzEwZ19wb3J0MV91ZHBfcngi
LCAic2VsZl9pcCIgKTsKCUNIRUNLX0VSUk9SUzsKCQoJbWF4X2lnbm9yZV9zY2FsYXIoYWN0aW9u
cywgInFzZnBfdG9wXzEwZ19wb3J0MV91ZHBfcnhfRU9GRUZyYW1lRHJvcCIsICJiYWRGcmFtZXND
b3VudGVyIiApOwoJQ0hFQ0tfRVJST1JTOwoJCgltYXhfaWdub3JlX3NjYWxhcihhY3Rpb25zLCAi
cXNmcF90b3BfMTBnX3BvcnQxX3VkcF90eCIsICJzZWxmX2lwIiApOwoJQ0hFQ0tfRVJST1JTOwoJ
CgltYXhfaWdub3JlX3NjYWxhcihhY3Rpb25zLCAicXNmcF90b3BfMTBnX3BvcnQxX3VkcF90eCIs
ICJzZWxmX21hYyIgKTsKCUNIRUNLX0VSUk9SUzsKCQoJLyogY29kZSBmb3Igc3RyZWFtIG5ldHdv
cmtfbWdtdF9zdHJlYW1fZnJvbV9ob3N0X3R4X2ZyYW1lZCAqLwoJc2l6ZV90IGluc3RyZWFtX3Np
emVfbmV0d29ya19tZ210X3N0cmVhbV9mcm9tX2hvc3RfdHhfZnJhbWVkID0gaW50ZXJmYWNlX2Fj
dGlvbnMtPmluc3RyZWFtX3NpemVfbmV0d29ya19tZ210X3N0cmVhbV9mcm9tX2hvc3RfdHhfZnJh
bWVkOwoJaWYgKGluc3RyZWFtX3NpemVfbmV0d29ya19tZ210X3N0cmVhbV9mcm9tX2hvc3RfdHhf
ZnJhbWVkID4gMCkgewoJCWNvbnN0IHZvaWQgKnN0cmVhbV9wdHIgPSBpbnRlcmZhY2VfYWN0aW9u
cy0+aW5zdHJlYW1fbmV0d29ya19tZ210X3N0cmVhbV9mcm9tX2hvc3RfdHhfZnJhbWVkOwoJCWlm
ICh1c2VfY2FsbGJhY2sgJiYgKDEgPT0gRmllbGRBY2N1bXVsYXRvcl9jaGVja19hbGlnbmVkKGlu
dGVyZmFjZV9hY3Rpb25zLT5pbnN0cmVhbV9uZXR3b3JrX21nbXRfc3RyZWFtX2Zyb21faG9zdF90
eF9mcmFtZWQpKSkgewoJCQl2b2lkICphbGlnbmVkX2luc3RyZWFtX25ldHdvcmtfbWdtdF9zdHJl
YW1fZnJvbV9ob3N0X3R4X2ZyYW1lZCA9IG1hbGxvYyhpbnN0cmVhbV9zaXplX25ldHdvcmtfbWdt
dF9zdHJlYW1fZnJvbV9ob3N0X3R4X2ZyYW1lZCk7CgkJCWlmIChhbGlnbmVkX2luc3RyZWFtX25l
dHdvcmtfbWdtdF9zdHJlYW1fZnJvbV9ob3N0X3R4X2ZyYW1lZCA9PSBOVUxMKSB7CgkJCQltYXhf
cmVwb3J0X2Vycm9yX3NsaWMoYWN0aW9ucy0+ZXJyb3JzLCBfX0ZJTEVfXywgX19MSU5FX18sIDUy
NiwgIkZhaWxlZCB0byBhbGxvY2F0ZSBhbGlnbmVkIG1lbW9yeSBmb3Igc3RyZWFtICduZXR3b3Jr
X21nbXRfc3RyZWFtX2Zyb21faG9zdF90eF9mcmFtZWQnIik7CgkJCQlDSEVDS19FUlJPUlM7CgkJ
CX0KCQkJKCZjYl9kYXRhLT5zdHJlYW1bY2JfZGF0YS0+Y291bnRdKS0+dXNlcl9wdHIgICAgPSAo
dWludDhfdCopIGludGVyZmFjZV9hY3Rpb25zLT5pbnN0cmVhbV9uZXR3b3JrX21nbXRfc3RyZWFt
X2Zyb21faG9zdF90eF9mcmFtZWQ7CgkJCSgmY2JfZGF0YS0+c3RyZWFtW2NiX2RhdGEtPmNvdW50
XSktPmFsaWduZWRfcHRyID0gKHVpbnQ4X3QqKSBhbGlnbmVkX2luc3RyZWFtX25ldHdvcmtfbWdt
dF9zdHJlYW1fZnJvbV9ob3N0X3R4X2ZyYW1lZDsKCQkJKCZjYl9kYXRhLT5zdHJlYW1bY2JfZGF0
YS0+Y291bnRdKS0+c2l6ZSAgICAgICAgPSBpbnN0cmVhbV9zaXplX25ldHdvcmtfbWdtdF9zdHJl
YW1fZnJvbV9ob3N0X3R4X2ZyYW1lZDsKCQkJKCZjYl9kYXRhLT5zdHJlYW1bY2JfZGF0YS0+Y291
bnRdKS0+aXNfb3V0cHV0ICAgPSAwOwoJCQljYl9kYXRhLT5jb3VudCArPSAxOwoJCQltZW1jcHko
YWxpZ25lZF9pbnN0cmVhbV9uZXR3b3JrX21nbXRfc3RyZWFtX2Zyb21faG9zdF90eF9mcmFtZWQs
IGludGVyZmFjZV9hY3Rpb25zLT5pbnN0cmVhbV9uZXR3b3JrX21nbXRfc3RyZWFtX2Zyb21faG9z
dF90eF9mcmFtZWQsIGluc3RyZWFtX3NpemVfbmV0d29ya19tZ210X3N0cmVhbV9mcm9tX2hvc3Rf
dHhfZnJhbWVkKTsKCQkJc3RyZWFtX3B0ciA9IGFsaWduZWRfaW5zdHJlYW1fbmV0d29ya19tZ210
X3N0cmVhbV9mcm9tX2hvc3RfdHhfZnJhbWVkOwoJCX0KCQltYXhfcXVldWVfaW5wdXQoYWN0aW9u
cywgIm5ldHdvcmtfbWdtdF9zdHJlYW1fZnJvbV9ob3N0X3R4X2ZyYW1lZCIsIHN0cmVhbV9wdHIs
IGluc3RyZWFtX3NpemVfbmV0d29ya19tZ210X3N0cmVhbV9mcm9tX2hvc3RfdHhfZnJhbWVkKTsK
CQlDSEVDS19FUlJPUlM7Cgl9CgkvKiBlbmQgb2YgY29kZSBmb3Igc3RyZWFtIG5ldHdvcmtfbWdt
dF9zdHJlYW1fZnJvbV9ob3N0X3R4X2ZyYW1lZCAqLwoJCgkvKiBjb2RlIGZvciBzdHJlYW0gbmV0
d29ya19tZ210X3N0cmVhbV90b19ob3N0X3J4X2ZyYW1lZCAqLwoJc2l6ZV90IG91dHN0cmVhbV9z
aXplX25ldHdvcmtfbWdtdF9zdHJlYW1fdG9faG9zdF9yeF9mcmFtZWQgPSBpbnRlcmZhY2VfYWN0
aW9ucy0+b3V0c3RyZWFtX3NpemVfbmV0d29ya19tZ210X3N0cmVhbV90b19ob3N0X3J4X2ZyYW1l
ZDsKCWlmIChvdXRzdHJlYW1fc2l6ZV9uZXR3b3JrX21nbXRfc3RyZWFtX3RvX2hvc3RfcnhfZnJh
bWVkID4gMCkgewoJCXZvaWQgKnN0cmVhbV9wdHIgPSBpbnRlcmZhY2VfYWN0aW9ucy0+b3V0c3Ry
ZWFtX25ldHdvcmtfbWdtdF9zdHJlYW1fdG9faG9zdF9yeF9mcmFtZWQ7CgkJaWYgKHVzZV9jYWxs
YmFjayAmJiAoMSA9PSBGaWVsZEFjY3VtdWxhdG9yX2NoZWNrX2FsaWduZWQoaW50ZXJmYWNlX2Fj
dGlvbnMtPm91dHN0cmVhbV9uZXR3b3JrX21nbXRfc3RyZWFtX3RvX2hvc3RfcnhfZnJhbWVkKSkp
IHsKCQkJdm9pZCAqYWxpZ25lZF9vdXRzdHJlYW1fbmV0d29ya19tZ210X3N0cmVhbV90b19ob3N0
X3J4X2ZyYW1lZCA9IG1hbGxvYyhvdXRzdHJlYW1fc2l6ZV9uZXR3b3JrX21nbXRfc3RyZWFtX3Rv
X2hvc3RfcnhfZnJhbWVkKTsKCQkJaWYgKGFsaWduZWRfb3V0c3RyZWFtX25ldHdvcmtfbWdtdF9z
dHJlYW1fdG9faG9zdF9yeF9mcmFtZWQgPT0gTlVMTCkgewoJCQkJbWF4X3JlcG9ydF9lcnJvcl9z
bGljKGFjdGlvbnMtPmVycm9ycywgX19GSUxFX18sIF9fTElORV9fLCA1MjYsICJGYWlsZWQgdG8g
YWxsb2NhdGUgYWxpZ25lZCBtZW1vcnkgZm9yIHN0cmVhbSAnbmV0d29ya19tZ210X3N0cmVhbV90
b19ob3N0X3J4X2ZyYW1lZCciKTsKCQkJCUNIRUNLX0VSUk9SUzsKCQkJfQoJCQkoJmNiX2RhdGEt
PnN0cmVhbVtjYl9kYXRhLT5jb3VudF0pLT51c2VyX3B0ciAgICA9ICh1aW50OF90KikgaW50ZXJm
YWNlX2FjdGlvbnMtPm91dHN0cmVhbV9uZXR3b3JrX21nbXRfc3RyZWFtX3RvX2hvc3RfcnhfZnJh
bWVkOwoJCQkoJmNiX2RhdGEtPnN0cmVhbVtjYl9kYXRhLT5jb3VudF0pLT5hbGlnbmVkX3B0ciA9
ICh1aW50OF90KikgYWxpZ25lZF9vdXRzdHJlYW1fbmV0d29ya19tZ210X3N0cmVhbV90b19ob3N0
X3J4X2ZyYW1lZDsKCQkJKCZjYl9kYXRhLT5zdHJlYW1bY2JfZGF0YS0+Y291bnRdKS0+c2l6ZSAg
ICAgICAgPSBvdXRzdHJlYW1fc2l6ZV9uZXR3b3JrX21nbXRfc3RyZWFtX3RvX2hvc3RfcnhfZnJh
bWVkOwoJCQkoJmNiX2RhdGEtPnN0cmVhbVtjYl9kYXRhLT5jb3VudF0pLT5pc19vdXRwdXQgICA9
IDE7CgkJCWNiX2RhdGEtPmNvdW50ICs9IDE7CgkJCXN0cmVhbV9wdHIgPSBhbGlnbmVkX291dHN0
cmVhbV9uZXR3b3JrX21nbXRfc3RyZWFtX3RvX2hvc3RfcnhfZnJhbWVkOwoJCX0KCQltYXhfcXVl
dWVfb3V0cHV0KGFjdGlvbnMsICJuZXR3b3JrX21nbXRfc3RyZWFtX3RvX2hvc3RfcnhfZnJhbWVk
Iiwgc3RyZWFtX3B0ciwgb3V0c3RyZWFtX3NpemVfbmV0d29ya19tZ210X3N0cmVhbV90b19ob3N0
X3J4X2ZyYW1lZCk7CgkJQ0hFQ0tfRVJST1JTOwoJfQoJLyogZW5kIG9mIGNvZGUgZm9yIHN0cmVh
bSBuZXR3b3JrX21nbXRfc3RyZWFtX3RvX2hvc3RfcnhfZnJhbWVkICovCgkKCW1heF9pZ25vcmVf
bWVtKGFjdGlvbnMsICJxc2ZwX3RvcF8xMGdfcG9ydDFfaWNtcF9lY2hvX3NlcnZlciIsICJwYXJh
bXMiICk7CglDSEVDS19FUlJPUlM7CgkKCW1heF9pZ25vcmVfbWVtKGFjdGlvbnMsICJxc2ZwX3Rv
cF8xMGdfcG9ydDFfdWRwX3R4IiwgInJvdXRpbmdfbG9va3VwXzEiICk7CglDSEVDS19FUlJPUlM7
CgkKCW1heF9pZ25vcmVfbWVtKGFjdGlvbnMsICJxc2ZwX3RvcF8xMGdfcG9ydDFfdWRwX3R4Iiwg
InJvdXRpbmdfbG9va3VwXzIiICk7CglDSEVDS19FUlJPUlM7CgkKCWlmICh1c2VfY2FsbGJhY2sg
JiYgY2JfZGF0YS0+Y291bnQgPT0gMCkgewoJCSpjYWxsYmFja19kYXRhID0gTlVMTDsKCQkqY2Fs
bGJhY2tfZnVuYyA9IE5VTEw7CgkJZnJlZShjYl9kYXRhKTsKCX0KCXJldHVybiBhY3Rpb25zOwoj
dW5kZWYgQ0hFQ0tfRVJST1JTCn0KCnZvaWQgRmllbGRBY2N1bXVsYXRvcigKCXVpbnQ2NF90ICpv
dXRzY2FsYXJfU2xpY2VyRnJhbWVyX25ldHdvcmtfbWdtdF9zdHJlYW1fZnJvbV9ob3N0X3R4X2Zy
YW1lZF9lb2ZDb3VudCwKCXVpbnQ2NF90ICpvdXRzY2FsYXJfU2xpY2VyRnJhbWVyX25ldHdvcmtf
bWdtdF9zdHJlYW1fZnJvbV9ob3N0X3R4X2ZyYW1lZF9zb2ZDb3VudCwKCXVpbnQ2NF90ICpvdXRz
Y2FsYXJfbmV0d29ya19tZ210X3N0cmVhbV90b19ob3N0X3J4X2ZyYW1lZF9GcmFtZWRTdHJlYW1Q
cmVwcm9jZXNzb3JfZW9mQ291bnQsCgl1aW50NjRfdCAqb3V0c2NhbGFyX25ldHdvcmtfbWdtdF9z
dHJlYW1fdG9faG9zdF9yeF9mcmFtZWRfRnJhbWVkU3RyZWFtUHJlcHJvY2Vzc29yX3NvZkNvdW50
LAoJY29uc3Qgdm9pZCAqaW5zdHJlYW1fbmV0d29ya19tZ210X3N0cmVhbV9mcm9tX2hvc3RfdHhf
ZnJhbWVkLAoJc2l6ZV90IGluc3RyZWFtX3NpemVfbmV0d29ya19tZ210X3N0cmVhbV9mcm9tX2hv
c3RfdHhfZnJhbWVkLAoJdm9pZCAqb3V0c3RyZWFtX25ldHdvcmtfbWdtdF9zdHJlYW1fdG9faG9z
dF9yeF9mcmFtZWQsCglzaXplX3Qgb3V0c3RyZWFtX3NpemVfbmV0d29ya19tZ210X3N0cmVhbV90
b19ob3N0X3J4X2ZyYW1lZCkKewoJKHZvaWQpIHB0aHJlYWRfb25jZSgmc2xpY19ic19pc19pbml0
aWFsaXNlZCwgRmllbGRBY2N1bXVsYXRvcl9zdGF0aWNfaW5pdCk7CglDSEVDS19OVUxMKHN0b3Jl
ZF9tYXhmaWxlLCAiTWF4ZmlsZSB3YXMgbm90IGxvYWRlZCIsICk7CgltYXhfcnVuX3QgKnJ1biA9
IEZpZWxkQWNjdW11bGF0b3Jfbm9uYmxvY2sob3V0c2NhbGFyX1NsaWNlckZyYW1lcl9uZXR3b3Jr
X21nbXRfc3RyZWFtX2Zyb21faG9zdF90eF9mcmFtZWRfZW9mQ291bnQsIG91dHNjYWxhcl9TbGlj
ZXJGcmFtZXJfbmV0d29ya19tZ210X3N0cmVhbV9mcm9tX2hvc3RfdHhfZnJhbWVkX3NvZkNvdW50
LCBvdXRzY2FsYXJfbmV0d29ya19tZ210X3N0cmVhbV90b19ob3N0X3J4X2ZyYW1lZF9GcmFtZWRT
dHJlYW1QcmVwcm9jZXNzb3JfZW9mQ291bnQsIG91dHNjYWxhcl9uZXR3b3JrX21nbXRfc3RyZWFt
X3RvX2hvc3RfcnhfZnJhbWVkX0ZyYW1lZFN0cmVhbVByZXByb2Nlc3Nvcl9zb2ZDb3VudCwgaW5z
dHJlYW1fbmV0d29ya19tZ210X3N0cmVhbV9mcm9tX2hvc3RfdHhfZnJhbWVkLCBpbnN0cmVhbV9z
aXplX25ldHdvcmtfbWdtdF9zdHJlYW1fZnJvbV9ob3N0X3R4X2ZyYW1lZCwgb3V0c3RyZWFtX25l
dHdvcmtfbWdtdF9zdHJlYW1fdG9faG9zdF9yeF9mcmFtZWQsIG91dHN0cmVhbV9zaXplX25ldHdv
cmtfbWdtdF9zdHJlYW1fdG9faG9zdF9yeF9mcmFtZWQpOwoJQ0hFQ0tfTlVMTChydW4sICJVbmFi
bGUgdG8gcnVuIGFjdGlvbnMiLCApOwoJbWF4X3dhaXQocnVuKTsKfQoKbWF4X3J1bl90ICpGaWVs
ZEFjY3VtdWxhdG9yX25vbmJsb2NrKAoJdWludDY0X3QgKm91dHNjYWxhcl9TbGljZXJGcmFtZXJf
bmV0d29ya19tZ210X3N0cmVhbV9mcm9tX2hvc3RfdHhfZnJhbWVkX2VvZkNvdW50LAoJdWludDY0
X3QgKm91dHNjYWxhcl9TbGljZXJGcmFtZXJfbmV0d29ya19tZ210X3N0cmVhbV9mcm9tX2hvc3Rf
dHhfZnJhbWVkX3NvZkNvdW50LAoJdWludDY0X3QgKm91dHNjYWxhcl9uZXR3b3JrX21nbXRfc3Ry
ZWFtX3RvX2hvc3RfcnhfZnJhbWVkX0ZyYW1lZFN0cmVhbVByZXByb2Nlc3Nvcl9lb2ZDb3VudCwK
CXVpbnQ2NF90ICpvdXRzY2FsYXJfbmV0d29ya19tZ210X3N0cmVhbV90b19ob3N0X3J4X2ZyYW1l
ZF9GcmFtZWRTdHJlYW1QcmVwcm9jZXNzb3Jfc29mQ291bnQsCgljb25zdCB2b2lkICppbnN0cmVh
bV9uZXR3b3JrX21nbXRfc3RyZWFtX2Zyb21faG9zdF90eF9mcmFtZWQsCglzaXplX3QgaW5zdHJl
YW1fc2l6ZV9uZXR3b3JrX21nbXRfc3RyZWFtX2Zyb21faG9zdF90eF9mcmFtZWQsCgl2b2lkICpv
dXRzdHJlYW1fbmV0d29ya19tZ210X3N0cmVhbV90b19ob3N0X3J4X2ZyYW1lZCwKCXNpemVfdCBv
dXRzdHJlYW1fc2l6ZV9uZXR3b3JrX21nbXRfc3RyZWFtX3RvX2hvc3RfcnhfZnJhbWVkKQp7CglG
aWVsZEFjY3VtdWxhdG9yX2FjdGlvbnNfdCBpbnRlcmZhY2VfYWN0aW9uczsKCWludGVyZmFjZV9h
Y3Rpb25zLm91dHNjYWxhcl9TbGljZXJGcmFtZXJfbmV0d29ya19tZ210X3N0cmVhbV9mcm9tX2hv
c3RfdHhfZnJhbWVkX2VvZkNvdW50ID0gb3V0c2NhbGFyX1NsaWNlckZyYW1lcl9uZXR3b3JrX21n
bXRfc3RyZWFtX2Zyb21faG9zdF90eF9mcmFtZWRfZW9mQ291bnQ7CglpbnRlcmZhY2VfYWN0aW9u
cy5vdXRzY2FsYXJfU2xpY2VyRnJhbWVyX25ldHdvcmtfbWdtdF9zdHJlYW1fZnJvbV9ob3N0X3R4
X2ZyYW1lZF9zb2ZDb3VudCA9IG91dHNjYWxhcl9TbGljZXJGcmFtZXJfbmV0d29ya19tZ210X3N0
cmVhbV9mcm9tX2hvc3RfdHhfZnJhbWVkX3NvZkNvdW50OwoJaW50ZXJmYWNlX2FjdGlvbnMub3V0
c2NhbGFyX25ldHdvcmtfbWdtdF9zdHJlYW1fdG9faG9zdF9yeF9mcmFtZWRfRnJhbWVkU3RyZWFt
UHJlcHJvY2Vzc29yX2VvZkNvdW50ID0gb3V0c2NhbGFyX25ldHdvcmtfbWdtdF9zdHJlYW1fdG9f
aG9zdF9yeF9mcmFtZWRfRnJhbWVkU3RyZWFtUHJlcHJvY2Vzc29yX2VvZkNvdW50OwoJaW50ZXJm
YWNlX2FjdGlvbnMub3V0c2NhbGFyX25ldHdvcmtfbWdtdF9zdHJlYW1fdG9faG9zdF9yeF9mcmFt
ZWRfRnJhbWVkU3RyZWFtUHJlcHJvY2Vzc29yX3NvZkNvdW50ID0gb3V0c2NhbGFyX25ldHdvcmtf
bWdtdF9zdHJlYW1fdG9faG9zdF9yeF9mcmFtZWRfRnJhbWVkU3RyZWFtUHJlcHJvY2Vzc29yX3Nv
ZkNvdW50OwoJaW50ZXJmYWNlX2FjdGlvbnMuaW5zdHJlYW1fbmV0d29ya19tZ210X3N0cmVhbV9m
cm9tX2hvc3RfdHhfZnJhbWVkID0gaW5zdHJlYW1fbmV0d29ya19tZ210X3N0cmVhbV9mcm9tX2hv
c3RfdHhfZnJhbWVkOwoJaW50ZXJmYWNlX2FjdGlvbnMuaW5zdHJlYW1fc2l6ZV9uZXR3b3JrX21n
bXRfc3RyZWFtX2Zyb21faG9zdF90eF9mcmFtZWQgPSBpbnN0cmVhbV9zaXplX25ldHdvcmtfbWdt
dF9zdHJlYW1fZnJvbV9ob3N0X3R4X2ZyYW1lZDsKCWludGVyZmFjZV9hY3Rpb25zLm91dHN0cmVh
bV9uZXR3b3JrX21nbXRfc3RyZWFtX3RvX2hvc3RfcnhfZnJhbWVkID0gb3V0c3RyZWFtX25ldHdv
cmtfbWdtdF9zdHJlYW1fdG9faG9zdF9yeF9mcmFtZWQ7CglpbnRlcmZhY2VfYWN0aW9ucy5vdXRz
dHJlYW1fc2l6ZV9uZXR3b3JrX21nbXRfc3RyZWFtX3RvX2hvc3RfcnhfZnJhbWVkID0gb3V0c3Ry
ZWFtX3NpemVfbmV0d29ya19tZ210X3N0cmVhbV90b19ob3N0X3J4X2ZyYW1lZDsKCSh2b2lkKSBw
dGhyZWFkX29uY2UoJnNsaWNfYnNfaXNfaW5pdGlhbGlzZWQsIEZpZWxkQWNjdW11bGF0b3Jfc3Rh
dGljX2luaXQpOwoJQ0hFQ0tfTlVMTChzdG9yZWRfbWF4ZmlsZSwgIk1heGZpbGUgd2FzIG5vdCBs
b2FkZWQiLCBOVUxMKTsKCXZvaWQgKCpjYl9mdW5jKSh2b2lkKikgPSBOVUxMOwoJdm9pZCAgKmNi
X2RhdGEgICAgICAgICA9IE5VTEw7CgltYXhfYWN0aW9uc190ICphY3Rpb25zID0gRmllbGRBY2N1
bXVsYXRvcl9jb252ZXJ0X2ludGVybmFsKHN0b3JlZF9tYXhmaWxlLCAmaW50ZXJmYWNlX2FjdGlv
bnMsIDEsICZjYl9mdW5jLCAmY2JfZGF0YSk7CglDSEVDS19OVUxMKGFjdGlvbnMsICJVbmFibGUg
dG8gYnVpbGQgYWN0aW9ucyIsIE5VTEwpOwoJbWF4X3ZhbGlkYXRlKGFjdGlvbnMpOwoJQ0hFQ0tf
RVJST1JTX1NUKGFjdGlvbnMsIE5VTEwpOwoJQ0hFQ0tfRVJST1JTX1NUKHN0b3JlZF9lbmdpbmUs
IE5VTEwpOwoJbWF4X3J1bl90ICpydW47CglpZiAoY2JfZnVuYyA9PSBOVUxMKSB7CgkJcnVuID0g
bWF4X3J1bl9ub25ibG9jayhzdG9yZWRfZW5naW5lLCBhY3Rpb25zKTsKCX0gZWxzZSB7CgkJcnVu
ID0gbWF4X3J1bl9ub25ibG9ja193aXRoX2NiKHN0b3JlZF9lbmdpbmUsIGFjdGlvbnMsIGNiX2Z1
bmMsIGNiX2RhdGEpOwoJfQoJQ0hFQ0tfTlVMTChydW4sICJVbmFibGUgdG8gcnVuIGFjdGlvbnMi
LCBOVUxMKTsKCUNIRUNLX0VSUk9SU19TVChhY3Rpb25zLCBOVUxMKTsKCW1heF9hY3Rpb25zX2Zy
ZWUoYWN0aW9ucyk7CglyZXR1cm4gcnVuOwp9Cgp2b2lkIEZpZWxkQWNjdW11bGF0b3JfcnVuKAoJ
bWF4X2VuZ2luZV90ICplbmdpbmUsCglGaWVsZEFjY3VtdWxhdG9yX2FjdGlvbnNfdCAqaW50ZXJm
YWNlX2FjdGlvbnMpCnsKCW1heF9ydW5fdCAqcnVuID0gRmllbGRBY2N1bXVsYXRvcl9ydW5fbm9u
YmxvY2soZW5naW5lLCBpbnRlcmZhY2VfYWN0aW9ucyk7CglDSEVDS19OVUxMKHJ1biwgIlVuYWJs
ZSB0byBydW4gYWN0aW9ucyIsICk7CgltYXhfd2FpdChydW4pOwp9CgptYXhfcnVuX3QgKkZpZWxk
QWNjdW11bGF0b3JfcnVuX25vbmJsb2NrKAoJbWF4X2VuZ2luZV90ICplbmdpbmUsCglGaWVsZEFj
Y3VtdWxhdG9yX2FjdGlvbnNfdCAqaW50ZXJmYWNlX2FjdGlvbnMpCnsKCW1heF9maWxlX3QgKm1h
eGZpbGUgPSBtYXhfZW5naW5lX2dldF9tYXhfZmlsZShlbmdpbmUpOyAKCXZvaWQgKCpjYl9mdW5j
KSh2b2lkKikgPSBOVUxMOwoJdm9pZCAgKmNiX2RhdGEgICAgICAgICA9IE5VTEw7CgltYXhfYWN0
aW9uc190ICphY3Rpb25zID0gRmllbGRBY2N1bXVsYXRvcl9jb252ZXJ0X2ludGVybmFsKG1heGZp
bGUsIGludGVyZmFjZV9hY3Rpb25zLCAxLCAmY2JfZnVuYywgJmNiX2RhdGEpOwoJQ0hFQ0tfRVJS
T1JTX1NUKGFjdGlvbnMsIE5VTEwpOwoJbWF4X3J1bl90ICpydW47CglpZiAoY2JfZnVuYyA9PSBO
VUxMKSB7CgkJcnVuID0gbWF4X3J1bl9ub25ibG9jayhlbmdpbmUsIGFjdGlvbnMpOwoJfSBlbHNl
IHsKCQlydW4gPSBtYXhfcnVuX25vbmJsb2NrX3dpdGhfY2IoZW5naW5lLCBhY3Rpb25zLCBjYl9m
dW5jLCBjYl9kYXRhKTsKCX0KCUNIRUNLX05VTEwocnVuLCAiVW5hYmxlIHRvIHJ1biBhY3Rpb25z
IiwgTlVMTCk7CgltYXhfYWN0aW9uc19mcmVlKGFjdGlvbnMpOwoJcmV0dXJuIHJ1bjsKfQoKCi8q
KgogKiBcYnJpZWYgR3JvdXAgcnVuIGFkdmFuY2VkIHN0YXRpYyBmdW5jdGlvbiBmb3IgdGhlIGlu
dGVyZmFjZSAnZGVmYXVsdCcuCiAqIAogKiBccGFyYW0gW2luXSBncm91cCBHcm91cCB0byB1c2Uu
CiAqIFxwYXJhbSBbaW4sb3V0XSBpbnRlcmZhY2VfYWN0aW9ucyBBY3Rpb25zIHRvIHJ1bi4KICoK
ICogUnVuIHRoZSBhY3Rpb25zIG9uIHRoZSBmaXJzdCBkZXZpY2UgYXZhaWxhYmxlIGluIHRoZSBn
cm91cC4KICovCnZvaWQgRmllbGRBY2N1bXVsYXRvcl9ydW5fZ3JvdXAobWF4X2dyb3VwX3QgKmdy
b3VwLCBGaWVsZEFjY3VtdWxhdG9yX2FjdGlvbnNfdCAqaW50ZXJmYWNlX2FjdGlvbnMpCnsKCW1h
eF9ydW5fdCAqcnVuID0gRmllbGRBY2N1bXVsYXRvcl9ydW5fZ3JvdXBfbm9uYmxvY2soZ3JvdXAs
IGludGVyZmFjZV9hY3Rpb25zKTsKCUNIRUNLX05VTEwocnVuLCAiVW5hYmxlIHRvIHJ1biBhY3Rp
b25zIiwgKTsKCW1heF93YWl0KHJ1bik7Cn0KCgovKioKICogXGJyaWVmIEdyb3VwIHJ1biBhZHZh
bmNlZCBzdGF0aWMgbm9uLWJsb2NraW5nIGZ1bmN0aW9uIGZvciB0aGUgaW50ZXJmYWNlICdkZWZh
dWx0Jy4KICogCiAqCiAqIFNjaGVkdWxlIHRoZSBhY3Rpb25zIHRvIHJ1biBvbiB0aGUgZmlyc3Qg
ZGV2aWNlIGF2YWlsYWJsZSBpbiB0aGUgZ3JvdXAgYW5kIHJldHVybiBpbW1lZGlhdGVseS4KICog
VGhlIHN0YXR1cyBvZiB0aGUgcnVuIG11c3QgYmUgY2hlY2tlZCB3aXRoIDo6bWF4X3dhaXQuIAog
KiBOb3RlIHRoYXQgdXNlIG9mIDo6bWF4X25vd2FpdCBpcyBwcm9oaWJpdGVkIHdpdGggbm9uLWJs
b2NraW5nIHJ1bm5pbmcgb24gZ3JvdXBzOgogKiBzZWUgdGhlIDo6bWF4X3J1bl9ncm91cF9ub25i
bG9jayBkb2N1bWVudGF0aW9uIGZvciBtb3JlIGV4cGxhbmF0aW9uLgogKgogKiBccGFyYW0gW2lu
XSBncm91cCBHcm91cCB0byB1c2UuCiAqIFxwYXJhbSBbaW5dIGludGVyZmFjZV9hY3Rpb25zIEFj
dGlvbnMgdG8gcnVuLgogKiBccmV0dXJuIEEgaGFuZGxlIG9uIHRoZSBleGVjdXRpb24gc3RhdHVz
IG9mIHRoZSBhY3Rpb25zLCBvciBOVUxMIGluIGNhc2Ugb2YgZXJyb3IuCiAqLwptYXhfcnVuX3Qg
KkZpZWxkQWNjdW11bGF0b3JfcnVuX2dyb3VwX25vbmJsb2NrKG1heF9ncm91cF90ICpncm91cCwg
RmllbGRBY2N1bXVsYXRvcl9hY3Rpb25zX3QgKmludGVyZmFjZV9hY3Rpb25zKQp7CgltYXhfZmls
ZV90ICptYXhmaWxlID0gbWF4X2dyb3VwX2dldF9tYXhfZmlsZShncm91cCk7CgltYXhfYWN0aW9u
c190ICphY3Rpb25zID0gRmllbGRBY2N1bXVsYXRvcl9jb252ZXJ0X2ludGVybmFsKG1heGZpbGUs
IGludGVyZmFjZV9hY3Rpb25zLCAxLCBOVUxMLCBOVUxMKTsKCWlmKGFjdGlvbnMgPT0gTlVMTCkg
cmV0dXJuIE5VTEw7CglpZighbWF4X29rKGFjdGlvbnMtPmVycm9ycykpIHJldHVybiBOVUxMOwoJ
bWF4X3ZhbGlkYXRlKGFjdGlvbnMpOwoJbWF4X3J1bl90ICpydW4gPSBtYXhfcnVuX2dyb3VwX25v
bmJsb2NrKGdyb3VwLCBhY3Rpb25zKTsKCW1heF9hY3Rpb25zX2ZyZWUoYWN0aW9ucyk7CglyZXR1
cm4gcnVuOwp9CgoKLyoqCiAqIFxicmllZiBBcnJheSBydW4gYWR2YW5jZWQgc3RhdGljIGZ1bmN0
aW9uIGZvciB0aGUgaW50ZXJmYWNlICdkZWZhdWx0Jy4KICogCiAqIFxwYXJhbSBbaW5dIGVuZ2Fy
cmF5IFRoZSBhcnJheSBvZiBkZXZpY2VzIHRvIHVzZS4KICogXHBhcmFtIFtpbixvdXRdIGludGVy
ZmFjZV9hY3Rpb25zIFRoZSBhcnJheSBvZiBhY3Rpb25zIHRvIHJ1bi4KICoKICogUnVuIHRoZSBh
cnJheSBvZiBhY3Rpb25zIG9uIHRoZSBhcnJheSBvZiBlbmdpbmVzLiAgVGhlIGxlbmd0aCBvZiBp
bnRlcmZhY2VfYWN0aW9ucwogKiBtdXN0IG1hdGNoIHRoZSBzaXplIG9mIGVuZ2FycmF5LgogKi8K
dm9pZCBGaWVsZEFjY3VtdWxhdG9yX3J1bl9hcnJheShtYXhfZW5nYXJyYXlfdCAqZW5nYXJyYXks
IEZpZWxkQWNjdW11bGF0b3JfYWN0aW9uc190ICppbnRlcmZhY2VfYWN0aW9uc1tdKQp7CgltYXhf
cnVuX3QgKnJ1biA9IEZpZWxkQWNjdW11bGF0b3JfcnVuX2FycmF5X25vbmJsb2NrKGVuZ2FycmF5
LCBpbnRlcmZhY2VfYWN0aW9ucyk7CglDSEVDS19OVUxMKHJ1biwgIlVuYWJsZSB0byBydW4gYWN0
aW9ucyIsICk7CgltYXhfd2FpdChydW4pOwp9CgoKLyoqCiAqIFxicmllZiBBcnJheSBydW4gYWR2
YW5jZWQgc3RhdGljIG5vbi1ibG9ja2luZyBmdW5jdGlvbiBmb3IgdGhlIGludGVyZmFjZSAnZGVm
YXVsdCcuCiAqIAogKgogKiBTY2hlZHVsZSB0byBydW4gdGhlIGFycmF5IG9mIGFjdGlvbnMgb24g
dGhlIGFycmF5IG9mIGVuZ2luZXMsIGFuZCByZXR1cm4gaW1tZWRpYXRlbHkuCiAqIFRoZSBsZW5n
dGggb2YgaW50ZXJmYWNlX2FjdGlvbnMgbXVzdCBtYXRjaCB0aGUgc2l6ZSBvZiBlbmdhcnJheS4K
ICogVGhlIHN0YXR1cyBvZiB0aGUgcnVuIGNhbiBiZSBjaGVja2VkIGVpdGhlciBieSA6Om1heF93
YWl0IG9yIDo6bWF4X25vd2FpdDsKICogbm90ZSB0aGF0IG9uZSBvZiB0aGVzZSAqbXVzdCogYmUg
Y2FsbGVkLCBzbyB0aGF0IGFzc29jaWF0ZWQgbWVtb3J5IGNhbiBiZSByZWxlYXNlZC4KICoKICog
XHBhcmFtIFtpbl0gZW5nYXJyYXkgVGhlIGFycmF5IG9mIGRldmljZXMgdG8gdXNlLgogKiBccGFy
YW0gW2luXSBpbnRlcmZhY2VfYWN0aW9ucyBUaGUgYXJyYXkgb2YgYWN0aW9ucyB0byBydW4uCiAq
IFxyZXR1cm4gQSBoYW5kbGUgb24gdGhlIGV4ZWN1dGlvbiBzdGF0dXMgb2YgdGhlIGFjdGlvbnMs
IG9yIE5VTEwgaW4gY2FzZSBvZiBlcnJvci4KICovCm1heF9ydW5fdCAqRmllbGRBY2N1bXVsYXRv
cl9ydW5fYXJyYXlfbm9uYmxvY2sobWF4X2VuZ2FycmF5X3QgKmVuZ2FycmF5LCBGaWVsZEFjY3Vt
dWxhdG9yX2FjdGlvbnNfdCAqaW50ZXJmYWNlX2FjdGlvbnNbXSkKewoJbWF4X2ZpbGVfdCAqbWF4
ZmlsZSA9IG1heF9lbmdhcnJheV9nZXRfbWF4X2ZpbGUoZW5nYXJyYXksIDApOwoJaW50IGk7Cglt
YXhfYWN0YXJyYXlfdCAqYWN0YXJyYXkgPSBtYXhfYWN0YXJyYXlfaW5pdChtYXhmaWxlLCBlbmdh
cnJheS0+c2l6ZSk7CglpZiAoYWN0YXJyYXkgPT0gTlVMTCkgcmV0dXJuIE5VTEw7CgltYXhfYWN0
aW9uc190ICoqYXJyX2FjdGlvbnMgPSBtYWxsb2MoZW5nYXJyYXktPnNpemUgKiBzaXplb2YobWF4
X2FjdGlvbnNfdCopKTsKCWZvciAoIGkgPSAwIDsgaSA8IGFjdGFycmF5LT5zaXplOyBpKysgKSB7
CgkJbWF4X2FjdGlvbnNfdCAqYWN0aW9ucyA9IEZpZWxkQWNjdW11bGF0b3JfY29udmVydF9pbnRl
cm5hbChtYXhmaWxlLCBpbnRlcmZhY2VfYWN0aW9uc1tpXSwgMSwgTlVMTCwgTlVMTCk7CgkJaWYg
KGFjdGlvbnMgPT0gTlVMTCkgcmV0dXJuIE5VTEw7CgkJYXJyX2FjdGlvbnNbaV0gPSBhY3Rpb25z
OwoJCW1heF9zZXRfYWN0aW9uKGFjdGFycmF5LCBpLCBhY3Rpb25zKTsKCX0KCW1heF9ydW5fdCAq
cnVuID0gbWF4X3J1bl9hcnJheV9ub25ibG9jayhlbmdhcnJheSwgYWN0YXJyYXkpOwoJZm9yICgg
aSA9IDAgOyBpIDwgYWN0YXJyYXktPnNpemUgOyBpKysgKSB7IG1heF9hY3Rpb25zX2ZyZWUoYXJy
X2FjdGlvbnNbaV0pOyB9CgltYXhfYWN0YXJyYXlfZnJlZShhY3RhcnJheSk7CglmcmVlKGFycl9h
Y3Rpb25zKTsKCXJldHVybiBydW47Cn0KCgovKioKICogXGJyaWVmIENvbnZlcnRzIGEgc3RhdGlj
LWludGVyZmFjZSBhY3Rpb24gc3RydWN0IGludG8gYSBkeW5hbWljLWludGVyZmFjZSBtYXhfYWN0
aW9uc190IHN0cnVjdC4KICoKICogTm90ZSB0aGF0IHRoaXMgaXMgYW4gaW50ZXJuYWwgdXRpbGl0
eSBmdW5jdGlvbiB1c2VkIGJ5IG90aGVyIGZ1bmN0aW9ucyBpbiB0aGUgc3RhdGljIGludGVyZmFj
ZS4KICoKICogXHBhcmFtIFtpbl0gbWF4ZmlsZSBUaGUgbWF4ZmlsZSB0byB1c2UuCiAqIFxwYXJh
bSBbaW5dIGludGVyZmFjZV9hY3Rpb25zIFRoZSBpbnRlcmZhY2Utc3BlY2lmaWMgYWN0aW9ucyB0
byBydW4uCiAqIFxyZXR1cm4gVGhlIGR5bmFtaWMtaW50ZXJmYWNlIGFjdGlvbnMgdG8gcnVuLCBv
ciBOVUxMIGluIGNhc2Ugb2YgZXJyb3IuCiAqLwptYXhfYWN0aW9uc190KiBGaWVsZEFjY3VtdWxh
dG9yX2NvbnZlcnQobWF4X2ZpbGVfdCAqbWF4ZmlsZSwgRmllbGRBY2N1bXVsYXRvcl9hY3Rpb25z
X3QgKmludGVyZmFjZV9hY3Rpb25zKQp7CglyZXR1cm4gRmllbGRBY2N1bXVsYXRvcl9jb252ZXJ0
X2ludGVybmFsKG1heGZpbGUsIGludGVyZmFjZV9hY3Rpb25zLCAwLCBOVUxMLCBOVUxMKTsKfQoK
I3VuZGVmIENIRUNLX0VSUk9SU19TVAojdW5kZWYgQ0hFQ0tfTlVMTAoKCg==
#endif /* SLIC_B64_DEFINITIONS */

#ifdef SLIC_EXTRA_FILES
PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9Im5vIj8+PHVz
ZXJmaWxlcyBmb3JtYXQtdmVyc2lvbj0iMjAxMjAyMDAiLz4=
#endif /* SLIC_EXTRA_FILES */

#ifdef PHOTON_NODE_ADD_DATA
#define PHOTON_NODE_ADD_DATA_PRESENT 1
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 23, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 24, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 492, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 299, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 300, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 491, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 302, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 305, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 306, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 366, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 307, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 341, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 342, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 343, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 344, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 470, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 367, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 4, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 5, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 6, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 7, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 8, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 9, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 10, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 11, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 21, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 22, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 353, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 469, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 336, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 337, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 351, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 468, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 334, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 335, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 349, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 467, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 339, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 340, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 347, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 466, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 465, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 464, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 329, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 315, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 424, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 422, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 317, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 318, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 319, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 320, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 426, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 423, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 322, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 323, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 324, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 325, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 326, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 312, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 460, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 370, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 373, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 153, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 490, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 489, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 34, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 35, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 12, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 30, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 36, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 37, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 76, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 77, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 488, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 487, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 42, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 43, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 38, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 44, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 45, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 78, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 79, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 80, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 486, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 485, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 50, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 51, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 46, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 47, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 52, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 53, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 81, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 82, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 83, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 484, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 483, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 58, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 59, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 54, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 55, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 60, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 428, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 61, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 125, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 157, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 159, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 376, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 162, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 379, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 430, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 482, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 481, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 66, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 67, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 62, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 63, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 68, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 429, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 69, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 124, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 163, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 165, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 171, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 382, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 385, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 180, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 92, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 93, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 94, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 95, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 96, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 97, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 98, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 99, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 435, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 474, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 432, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 128, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 108, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 109, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 110, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 111, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 112, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 113, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 114, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 115, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 437, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 475, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 132, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 138, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 184, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 186, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 436, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 129, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 133, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 136, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 439, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 440, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 137, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 181, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 183, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 189, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 388, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 391, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 198, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 478, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 479, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 202, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 204, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 394, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 207, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 397, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 454, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 208, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 210, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 216, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 400, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 403, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 225, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 443, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 444, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 141, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 229, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 231, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 455, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 472, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 476, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 139, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 477, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 473, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 140, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 226, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 228, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 234, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 461, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 406, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 409, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 243, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 247, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 249, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 450, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 412, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 252, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 415, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 253, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 255, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 452, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 261, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 418, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 421, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 270, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 144, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 274, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 276, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 142, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 143, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 271, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 273, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 459, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 279, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 462, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 311, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 313, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 463, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 314, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 327, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 328, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 331, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 330, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 332, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 348, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 350, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 352, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 354, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 345, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 360, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 480, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 357, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 358, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 359, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 361, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 15, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 16, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 25, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 471, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 26, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 27, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 28, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 355, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(fieldSwapKernel, 365, "SquashFactor", 0.0)
#endif

#ifdef MAXFILE_SIGNATURE
#define MAXFILE_SIGNATURE_PRESENT 1
MAXFILE_SIGNATURE("302c02146ae42ebb1c6eb7d3b3cd35103a7cab1f28bb5a9802140661ed01ea95cb915c83613daab165bd1465e004")
#endif

